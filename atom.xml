<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://roshameow.github.io//personal_homepage/atom.xml" rel="self" type="application/atom+xml" /><link href="https://roshameow.github.io//personal_homepage/" rel="alternate" type="text/html" /><updated>2024-07-20T20:59:18+00:00</updated><id>https://roshameow.github.io//personal_homepage/atom.xml</id><title type="html">Liu, Wen’s Home Page</title><subtitle>Work, Experiments and Ideas.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><entry><title type="html">conformal geometry学习 (三 ) – Knot</title><link href="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry3/" rel="alternate" type="text/html" title="conformal geometry学习 (三 ) – Knot" /><published>2024-07-16T00:00:00+00:00</published><updated>2024-07-21T12:57:35+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry3</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry3/"><![CDATA[<h2 id="knot-k-mathbb-s1rightarrow-mathbb-r3-">Knot ($K: \mathbb S^1\rightarrow \mathbb R^3$ )</h2>

<ul>
  <li>等价关系(isotopic, 同位, $K_1\cong_{isotopic} K_2$ ): 存在homeomorphism(同胚)映射 $f:\mathbb R^3\rightarrow \mathbb R^3$, 把$K_1$ 映到 $K_2$ .</li>
  <li>全部knot都和$\mathbb S^1$ 是homeomorphism(同胚)</li>
  <li><a href="https://katlas.org/wiki/Planar_Diagrams">Planar Diagram</a> : knot在平面的投影, 记录方向和重叠部分的上下关系
    <ul>
      <li>同个knot的Planar Diagram可能有多种不同形式</li>
    </ul>
  </li>
</ul>

<h3 id="判断两个knot等价isotopic">判断两个knot等价(isotopic)</h3>

<h4 id="reidemeister-move-组合方法"><a href="https://mathworld.wolfram.com/ReidemeisterMoves.html">Reidemeister move</a> (组合方法)</h4>

<p>$K_1$ 的diagram由$K_2$ 的diagram经由四种基本移动变换得来 &lt;-&gt; $K_1\cong_{isotopic} K_2$</p>

<ul>
  <li>对Planar diagram的intersection做四种基本移动变换: (twist, untwist), (poke,unpoke), slide, straighten</li>
  <li>Np-hard 走的步数是节点数的指数倍?</li>
</ul>

<h4 id="gordon-luecke定理拓扑方法">Gordon-Luecke定理(拓扑方法)</h4>

<p>$K_1$  的补空间和$K_2$ 的补空间同胚, 即 $(\mathbb R^3- K_1)\sim (\mathbb R^3-K_2)$  &lt;-&gt; $K_1\cong_{isotopic} K_2$</p>

<ul>
  <li>用Wirtinger表示 计算 $\pi_1(\mathbb R^3-K)$ ( 同胚&lt;-&gt; 基本群相同):
    <ul>
      <li>每个segment提供 <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240721040411.png" alt="Pasted image 20240721040411.png" width="200" /> generators: $\lbrace x_1,x_2,\cdots,x_n\rbrace$</li>
      <li>每个crossing提供 <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240721040312.png" alt="Pasted image 20240721040312.png" width="200" /> relation: $x_i\cdot x_k=x_k\cdot x_{i+1}$ (按照generator方向)
        <ul>
          <li>relation会因为相互关联而化简</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="knot-genus">knot genus</h3>

<ul>
  <li><strong>knot genus</strong> 定义为Seifert surface中最小的genus: $g(K)=\min g(\Sigma)$
    <ul>
      <li>其中<a href="https://en.wikipedia.org/wiki/Seifert_surface">Seifert surface</a> 是orientable曲面$\Sigma_K$ , 使knot $K$是曲面的边界: $\partial \Sigma=K$</li>
      <li>因为diagram不同, 有多种不同的Seifert surface, 计算knot的genus是一个Np-hard问题</li>
    </ul>
  </li>
  <li>从diagram $D$ 构造Seifert surface $\Sigma_D$ :
    <ul>
      <li>方法: 给diagram一个orientation -&gt; 沿crossing 分开成Seifert cycles -&gt; 每个cycle填充disk -&gt; 在crossing处加入twist</li>
      <li><strong>Seifert Surface的genus</strong> $g(\Sigma_D)=\frac{1-s+n}{2}$
        <ul>
          <li>$s$ 是Seifert cycles的个数, n 是crossing的个数</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="https://mathworld.wolfram.com/KnotSum.html#:~:text=Two%20oriented%20knots%20(or%20links,40).">connected sum</a> $K_1 \texttt{#} K_2$
    <ul>
      <li><a href="https://mathworld.wolfram.com/KnotSum.html#:~:text=Two%20oriented%20knots%20(or%20links,40)."><img src="https://mathworld.wolfram.com/images/eps-svg/KnotSum_700.svg" alt="torus_sum.png" width="200" /></a> 把$K_1$, $K_2$ 沿某个点切开, 粘在一起</li>
      <li><strong>connect sum的genus</strong>: $g(K_1 \texttt{#} K_2)=g(K_1)+g(K_2)$</li>
    </ul>
  </li>
</ul>

<h3 id="knot分类trichotomy三分法">knot分类(Trichotomy,三分法)</h3>

<p>所有knot都属于torus knot, Satellite Knot, hyperbolic Knot三类</p>

<ul>
  <li><strong><a href="https://en.wikipedia.org/wiki/Torus_knot">torus knot</a></strong>: knot embed在torus的<strong>表面</strong>上
    <ul>
      <li>(p, q)-torus knot: p是绕中间tunnel的圈数, q是绕handle的圈数(数crossing上下的规律)
        <ul>
          <li>(3, 2)-knot(trefoil): <a href="https://commons.wikimedia.org/wiki/File:Trefoil_knot_left.svg#/media/File:Trefoil_knot_left.svg"><img src="https://upload.wikimedia.org/wikipedia/commons/5/5c/Trefoil_knot_left.svg" alt="Trefoil knot left.svg" width="100" /></a> (8,3)-knot: <a href="https://commons.wikimedia.org/wiki/File:TorusKnot-3-8.png#/media/File:TorusKnot-3-8.png"><img src="https://upload.wikimedia.org/wikipedia/commons/c/c3/TorusKnot-3-8.png" alt="TorusKnot-3-8.png" width="100" /></a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong><a href="https://en.wikipedia.org/wiki/Satellite_knot">Satellite Knot</a></strong>: knot $K$ embed在一个torus knot $J$ <strong>里面</strong>(大肠套小肠), 记作$Sat_J(K)$
    <ul>
      <li>分类:
        <ul>
          <li>cable knot: 里面的knot $K$ 也是一个torus knot
            <ul>
              <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240720115608.png" alt="Pasted image 20240720115608.png" width="100" /></li>
            </ul>
          </li>
          <li>connected sum(composite knots): $K_1 \texttt{#} K_2$
            <ul>
              <li>swallow-follow: $K_1$(Figure 8) 看起来像是被$K_2$ (trefoil) swallow
                <ul>
                  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240720120425.png" alt="Pasted image 20240720120425.png" width="150" /></li>
                </ul>
              </li>
            </ul>
          </li>
          <li>Whitehead doubles: 里面的knot $K$ 是 $S_1$ 经过一些twist首尾相连
            <ul>
              <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240720120404.png" alt="Pasted image 20240720120404.png" width="100" /> 或, <a href="https://www.researchgate.net/figure/A-Whitehead-double-of-a-trefoil-knot-is-a-satellite-knot-whose-companion-knot-is-a_fig10_339015556"><img src="https://www.researchgate.net/profile/Makoto-Sakuma/publication/339015556/figure/fig10/AS:897362012680193@1590959184100/A-Whitehead-double-of-a-trefoil-knot-is-a-satellite-knot-whose-companion-knot-is-a.png" alt="Seiferthomologypushoff.png" width="100" /></a></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong><a href="https://mathworld.wolfram.com/HyperbolicKnot.html">hyperbolic Knot</a></strong>: knot的补空间有一个complete, finite volume的双曲度量, 即补空间是hyperbolic 3-manifold(双曲三流型)</li>
</ul>

<h3 id="例子-figure-8-knot">例子: <a href="https://mathworld.wolfram.com/FigureEightKnot.html">Figure 8 Knot</a></h3>

<p><strong>Seifert surface和genus</strong></p>

<p>Planar Diagram: <a href="https://mathworld.wolfram.com/FigureEightKnot.html"><img src="https://mathworld.wolfram.com/images/eps-svg/FigureEightKnot_700.svg" width="100" style="transform: rotate(180deg);" /></a>  -&gt; Orientation: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240720153513.png" alt="Pasted image 20240720153513.png" width="100" /> -&gt; Seifert Cycles: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240720153554.png" alt="Pasted image 20240720153554.png" width="100" /> -&gt; Fill Cycles: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240720153643.png" alt="Pasted image 20240720153643.png" width="100" /> -&gt; Add twists: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240720153817.png" alt="Pasted image 20240720153817.png" width="100" /> -&gt; Seifert surface:  <a href="https://en.wikipedia.org/wiki/File:Seiferthomologypushoff.png#/media/File:Seiferthomologypushoff.png"><img src="https://upload.wikimedia.org/wikipedia/en/9/91/Seiferthomologypushoff.png" alt="Seiferthomologypushoff.png" width="150" style="transform: rotate(135deg);" /></a></p>

<ul>
  <li>见图示, 有3个Seifert Cycles和4个crossing</li>
  <li>$g(\Sigma_D)=\frac{1-3+4}{2}=1$</li>
</ul>

<p><strong>Wirtinger表示</strong></p>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240720163841.png" alt="Pasted image 20240720163841.png" width="150" /></p>

<ul>
  <li>见图示, 4个segment对应生成元$x_1,x_2,x_3,x_4$ , 4个crossing对应relation $c_1: x_4x_3=x_3x_1$, $c_2:x_2x_1=x_1x_3$, $c_3:x_2x_4=x_4x_1$, $c_4: x_4x_2=x_2x_3$</li>
  <li>化简得, 补空间的基本群 : $\pi_1(S^3-K)=&lt;a,b\vert\ yay^{-1}=b&gt;$
    <ul>
      <li>其中, $a=x_2, b=x_4$ , $y=[a^{-1},b]=a^{-1}bab^{-1}$</li>
    </ul>
  </li>
  <li>得到$\mathbb H^3$ 的tessellation: $a\mapsto A=\begin{bmatrix}1&amp;-1\\ 0&amp;1\end{bmatrix}$ , $b\mapsto B=\begin{bmatrix}1&amp;0 \\ -\sigma &amp; 1\end{bmatrix}$
    <ul>
      <li>其中,  根据relation解得,  $\sigma=\frac{-1\pm i\sqrt{3}}{2}$</li>
      <li>其映射: $\pi_1(S^3-K)\rightarrow Deck(\widetilde{S^3-K})\rightarrow \text{Isom}^{+}(\mathbb H^3)=PSL_2(\mathbb C)$
        <ul>
          <li>$\widetilde{S^3-K}$ 是3-manifold $S^3-K$ 的universal covering space</li>
          <li>$\mathbb H^3$(Poincaré half-space) 是上半空间$\mathbb H^3=\lbrace(x,y,t)\vert\ t&gt;0\rbrace$, 有双曲度量 $ds^2=\frac{dx^2+dy^2+dt^2}{t^2}$
            <ul>
              <li>是一个双曲三流型</li>
              <li>boundary $\partial \mathbb H^3=\mathbb C\cup\infty$ 又叫sphere at infinity</li>
            </ul>
          </li>
          <li>$PSL_2(\mathbb C)$ 是<a href="https://en.wikipedia.org/wiki/Möbius_transformation">Möbius transforms</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="reference">reference</h2>
<p><span id="ref"></span></p>

<p>[1] https://www.math.ucdavis.edu/~jcs/pubs/satelliteknots.pdf satellite knot</p>

<p>[2] Coward, Alexander, and Marc Lackenby. “An Upper Bound on <strong>Reidemeister Moves</strong>.” <em>American Journal of Mathematics</em> 136, no. 4 (2014): 1023–66.</p>

<p>[3] “Tracefieldsknotes.Pdf.” Accessed July 20, 2024. <a href="https://julianlyczak.nl/seminar/knots2016-files/tracefieldsknotes.pdf">https://julianlyczak.nl/seminar/knots2016-files/tracefieldsknotes.pdf</a>. 双曲结构</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="content" /><category term="knot" /><category term="isotopic" /><category term="genus" /><category term="Trichotomy" /><category term="3-manifold" /><category term="Seifert_surface" /><category term="fundamental_group" /><summary type="html"><![CDATA[Knot ($K: \mathbb S^1\rightarrow \mathbb R^3$ )]]></summary></entry><entry><title type="html">conformal geometry学习 (二 ) – Universal Covering</title><link href="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry2/" rel="alternate" type="text/html" title="conformal geometry学习 (二 ) – Universal Covering" /><published>2024-07-10T00:00:00+00:00</published><updated>2024-07-16T22:56:53+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry2</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry2/"><![CDATA[<h2 id="covering-space">covering space</h2>

<p><img src="/personal_homepage/docs/attachment/Covering_map_edit.svg" alt="Covering_map_edit.svg" width="178" /> <a href="https://commons.wikimedia.org/wiki/File:Covering_map.svg#/media/File:Covering_map.svg"><img src="https://upload.wikimedia.org/wikipedia/commons/2/24/Covering_map.svg" alt="Covering map.svg" height="245" width="178" /></a>  $\cup S_i$ 是$U$ 的orbit</p>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Covering_space">covering space</a> $\tilde S$ : 对于曲面$S$, 每个点$q$ 的邻域$U$, 都可以找到preimage $p^{-1}(U)=\cup U_i$, 每个$U_i$和$U$ 都是local homeomorphism</li>
  <li>lift(提升):  $S$ 上起点为$q$ 的path $\gamma$, 选取$\tilde S$ 上$q$ 的orbit其中一点$\tilde q_0$ , 沿$\gamma$ 一路的邻域拉到$\tilde S$ 上得到lift $\tilde \gamma$
    <ul>
      <li>$p\cdot\tilde \gamma =\gamma$</li>
      <li>固定起始点后, $\tilde \gamma$ 是唯一的</li>
    </ul>
  </li>
  <li>Deck Transformation(甲板映射): 在covering space上的自同构, 使得projection不变.
    <ul>
      <li>Deck group: $\frac{\pi_1(S,q)}{p_*\pi_1(\tilde S,\tilde q)}\cong Deck(\tilde S)$
        <ul>
          <li>映射 $[\gamma]\mapsto(U_{\tilde q_i}\rightarrow U_{\tilde q_j})$
            <ul>
              <li>$\tilde q_i,\tilde q_j$ 都在点$q$ 的orbit上, 是lift $\tilde \gamma$ 的starting pt. 和ending pt.</li>
            </ul>
          </li>
          <li>$\tilde \gamma$ 是loop -&gt; 在Deck group中是trival的</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="universal-covering万有覆叠">universal covering(万有覆叠)</h2>

<p>covering space单连通, 即 $\pi_1(\tilde S)=\lbrace e\rbrace$ , $\pi_1(S,q)\cong Deck(\tilde S)$</p>

<p>$S$ : <a href="https://commons.wikimedia.org/wiki/File:Torus_cycles.svg#/media/File:Torus_cycles.svg"><img src="https://upload.wikimedia.org/wikipedia/commons/8/81/Torus_cycles.svg" alt="Torus cycles.svg" width="150" /></a>                         $\rightarrow$ $\tilde S$: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240714095557.png" alt="Pasted image 20240714095557.png" width="200" /> 上面点集对应$\pi_1(S,q)$</p>

<h3 id="构造">构造</h3>

<p>universal covering space的存在性: 构造式证明</p>

<ul>
  <li>$S$ 是path connected: 把$S$ 上路径展开得到$\tilde S$
    <ul>
      <li>构造从$q$ 点出发的path同伦类, $\tilde S = \Gamma/\sim$ , $\tilde S$ 是一个universal covering space
        <ul>
          <li>对$S$ 上的每个点$q_0$,  $[\gamma_{q\rightarrow q_0}]\mapsto q_0$   定义了 $\tilde S\rightarrow S$ 的projection
            <ul>
              <li>对任意点$q_0$, orbit $[\gamma_{q\rightarrow q_0}]$ 和$[\gamma_{q\rightarrow q}]$ 一一对应, 即$\pi_1(S,q)\cong Deck(\tilde S)$  (universal性质)
                <ul>
                  <li>path去除loop部分后是homotopy(同伦) trival的</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>对$S$ 上$q_0$ 的邻域$U_{q_0}$ , preimage $\tilde U$ 定义为同伦类集合 $\lbrace[\tau_{q\rightarrow q_1}]\ \vert\ q_1\in U_{q_0}, \tau_{q\rightarrow q_1}\cdot\alpha_{q_1\rightarrow q_0}\sim \gamma_{q\rightarrow q_0}\rbrace$
            <ul>
              <li>$\tilde U$ 的每个联通分支对应一个$\gamma_{q\rightarrow q_0}$</li>
              <li>$\tilde U$ 定义了$\tilde S$ 上的<a href="https://en.wikipedia.org/wiki/Topological_space">拓扑</a></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>$S$ 是oriented closed surface
    <ul>
      <li>沿$S$ 的cutgraph $\Gamma$ 切开并粘合, 得到一个universal covering space
        <ul>
          <li>把边界上$s_i$ 和$s_i^{-1}$ 的部分粘在一起</li>
          <li>中间的每一块称为fundamental domain</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>universal性质: 记$\tilde S_u$ 是unviersal covering, 对应projection $p_u$, 对于任何的covering space $\tilde S$, 存在映射$u: \tilde S_u \rightarrow \tilde S$ , 使$p\cdot u=p_u$ .</p>

<h3 id="性质">性质</h3>

<ul>
  <li>$\tilde \gamma$ 是closed &lt;-&gt; $\gamma \sim e$
    <ul>
      <li>-&gt; : $\tilde \gamma \sim e$ , 即存在同伦变换 $\tilde f(0,t)=\tilde \gamma$, $\tilde f(1,t)=\tilde q$ , 令$f=p\cdot \tilde f$ , 所以$\gamma\sim e$  (使 $p_*\pi_1(\tilde S, \tilde q)\subset \pi_1(S,q)$ well-defined)</li>
      <li>&lt;-: 同伦变换$f$ 提升到连续映射 $\tilde f$
        <ul>
          <li>记 $\tilde f(1,0)=\tilde f(1,1)=\tilde p_0$ 是trival path的提升, 中间路径的endpoint $\tilde f(t,1)\in \cup_i\ \tilde p_i$  , orbit $\cup_i\ \tilde p_i$ 是离散点集</li>
          <li>所以所有的endpoint $\tilde f(t,1)=\tilde p_0$ 都一样</li>
          <li>$\tilde \gamma$ 的endpoint也是一样, $\tilde \gamma(1)=\tilde f(0,1)=\tilde p_0$</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>判断homotopy(同伦): $\gamma_1\sim\gamma_2$  &lt;-&gt; $\gamma_1\gamma_2^{-1}\sim e$ &lt;-&gt; $\gamma_1\gamma_2^{-1}$ 的lift $\tilde \gamma$ 是closed
    <ul>
      <li>即只要记录 $\gamma_1\gamma_2^{-1}$ 和canonical basis的相交情况, 得到最后ending point落在哪个fundamental domain就可以判断</li>
      <li>这依然是NP-hard问题?</li>
    </ul>
  </li>
</ul>

<h3 id="分类">分类</h3>

<h4 id="3种基本曲面">3种基本曲面</h4>

<ul>
  <li>球面: 直线是大圆, 过直线外一点有0条直线平行</li>
  <li>平面: 过直线外一点有1条直线平行</li>
  <li><a href="https://en.wikipedia.org/wiki/Hyperbolic_geometry">双曲面</a>: 由<a href="https://mathworld.wolfram.com/PoincareHyperbolicDisk.html">Poincaré Disk Model</a>表示, 直线是和无穷远(边界)正交的圆弧, 过直线外一点有$\infty$ 条直线平行
    <ul>
      <li><a href="https://commons.wikimedia.org/wiki/File:HyperboloidProjection.png#/media/File:HyperboloidProjection.png"><img src="https://upload.wikimedia.org/wikipedia/commons/1/1f/HyperboloidProjection.png" alt="The hyperboloid model can be represented as the equation t2 = x12 + x22 + 1, t &gt; 1. It can be used to construct a Poincaré disk model as a projection viewed from (t = −1, x1 = 0, x2 = 0), projecting the upper half hyperboloid onto the unit disk at t = 0. The red geodesic in the Poincaré disk model projects to the brown geodesic on the green hyperboloid." width="200" /></a></li>
    </ul>
  </li>
  <li>oriented closed surface的universal cover分类
    <ul>
      <li>genus 0: universal cover上有球面测度</li>
      <li>genus 1: universal cover上有欧式测度</li>
      <li>genus &gt; 1: universal cover上有双曲测度
        <ul>
          <li>locally是conformal mapping?</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="content" /><category term="cover" /><category term="universal_cover" /><category term="deck_transformation" /><category term="lift" /><category term="homotopy" /><category term="hyperbolic_geometry" /><summary type="html"><![CDATA[covering space]]></summary></entry><entry><title type="html">web3钱包</title><link href="https://roshameow.github.io//personal_homepage/docs/web3/web3-wallet/" rel="alternate" type="text/html" title="web3钱包" /><published>2024-07-08T00:00:00+00:00</published><updated>2024-07-10T02:27:54+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/web3/web3-wallet</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/web3/web3-wallet/"><![CDATA[<h2 id="分类">分类</h2>

<ul>
  <li>托管(Custodial Wallets): 服务商保管 密码-&gt; 服务商 -&gt; 私钥</li>
  <li>
    <p>非托管: 自己保管私钥</p>
  </li>
  <li>热钱包: 联网才能使用</li>
  <li>冷钱包: 不需要联网</li>
</ul>

<p>公链</p>

<h2 id="常用钱包">常用钱包</h2>

<table>
  <thead>
    <tr>
      <th>wallet\chain support<br /></th>
      <th>BTC<br />(比特币)</th>
      <th>ETH<br />以太坊</th>
      <th>SOL<br />(Solana)</th>
      <th>BSC<br />(Binance <br />Smart Chain)<br />币安</th>
      <th>ADA<br />(Cardano)</th>
      <th>DOT<br />(Polkadot)</th>
      <th>ATOM<br />(Cosmos<br />生态)</th>
      <th>TRX<br />(Tron)</th>
      <th>AVAX<br />(Avalanche)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>软件</strong> $\downarrow$</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td><a href="https://metamask.io">MetaMask</a></td>
      <td> </td>
      <td>✔️</td>
      <td> </td>
      <td>✔️</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td>✔️</td>
    </tr>
    <tr>
      <td>Trust Wallet</td>
      <td>✔️</td>
      <td>✔️</td>
      <td>✔️</td>
      <td>✔️</td>
      <td>✔️</td>
      <td>✔️</td>
      <td>✔️</td>
      <td>✔️</td>
      <td>✔️</td>
    </tr>
    <tr>
      <td>Tokenpocket</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>Coinbase Wallet</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>Exodus</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td><strong>硬件</strong> $\downarrow$</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>Ledger Nano S/X</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>Trezor One/<br />Trezor Model T</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td><strong>浏览器</strong> $\downarrow$</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>Phantom</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>Keplr</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="web3" /><category term="content" /><summary type="html"><![CDATA[分类]]></summary></entry><entry><title type="html">conformal geometry学习 (一 ) – fundamental group</title><link href="https://roshameow.github.io//personal_homepage/docs/math/algorithm/conformal-geometry1/" rel="alternate" type="text/html" title="conformal geometry学习 (一 ) – fundamental group" /><published>2024-07-02T00:00:00+00:00</published><updated>2024-07-15T03:08:32+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/algorithm/conformal-geometry1</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/algorithm/conformal-geometry1/"><![CDATA[<p>fundamental group分类曲面是足够精细的</p>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Poincaré_conjecture">Poincaré conjecture(已证明)</a> : <strong>fundamental group trival -&gt; 曲面trival</strong>
    <ul>
      <li>closed, connected, fundamental group 是trival的曲面和球面是homeomorphic(同胚)的.</li>
      <li>与之相比, homology(同调) group trival -/-&gt; 曲面trival
        <ul>
          <li><a href="https://en.wikipedia.org/wiki/Homology_sphere">同调球</a> 作为反例</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>对于oriented surface, fundamental group同构 &lt;-&gt; 拓扑同胚.
    <ul>
      <li>把$\pi_1(S,p)$ 的一组basis做为cut graph, 把曲面切成4g的polygonal scheme. 以此构造homeomorphism.</li>
    </ul>
  </li>
</ul>

<h2 id="word-group-表示">word group 表示</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>fundamental group $\pi_1(S,p)=\Gamma/\sim$</th>
      <th>word group representation $&lt;G\vert R&gt;$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>生成元</td>
      <td>$S$ 上经过点$p$ 的loop</td>
      <td>n symbols $G=\lbrace g_1,g_2,\cdots,g_n\rbrace$ (see <a href="https://en.wikipedia.org/wiki/Free_group">free generated group</a> )</td>
    </tr>
    <tr>
      <td>等价关系</td>
      <td>homotopy(同伦): $\gamma_1\sim \gamma_2$ <br /> $\gamma_1$ 可以连续变换成$\gamma_2$</td>
      <td>relations $R=\lbrace R_1,R_2,\cdots,R_m\rbrace$ 是有m个words的集合<br />$w_1$ 可以通过有限步的插入, 移除relation变为$w_2$</td>
    </tr>
    <tr>
      <td><strong>群运算</strong></td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>identity</td>
      <td>基点 $p$</td>
      <td>$\emptyset$</td>
    </tr>
    <tr>
      <td>乘法</td>
      <td>两条路径首尾相接</td>
      <td>字符串拼接</td>
    </tr>
    <tr>
      <td>inverse</td>
      <td>路径方向相反</td>
      <td>字符串反向</td>
    </tr>
    <tr>
      <td><strong>特例</strong></td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>torus</td>
      <td>$\pi_1(T,p)$<br />任意$\gamma$ 分解成不和$a,b$ 相交的$\gamma_i$ 的积</td>
      <td>$&lt;a,b\vert \ aba^{-1}b^{-1}&gt;$</td>
    </tr>
    <tr>
      <td>$\mathbb {R}P^2$<br />Möbius band $\cup_{\partial M}$ disk</td>
      <td>$\pi_1(\mathbb{R}P^2)=\lbrace\gamma,e\rbrace$<br />$\pi_1(\partial M)=&lt;\gamma^2&gt;$</td>
      <td>$&lt;\gamma\ \vert\  \gamma^2&gt;$</td>
    </tr>
    <tr>
      <td><strong>性质</strong></td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>合并</td>
      <td>$\pi_1(U\cup V, p)$</td>
      <td>$&lt;u_1,\dots,u_k,v_1,\dots,v_m\vert \alpha_i,\beta_j,i(w_1)j(w_1)^{-1},\dots,i(w_p)j(w_p)^{-1}&gt;$</td>
    </tr>
    <tr>
      <td>联通和</td>
      <td>$\pi_1(S_1 \texttt{#} S_2)$</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>$\pi_1(T_1 \texttt{#}T_2 \texttt{#}\cdots  \texttt{#} T_g)$</td>
      <td>$&lt;a_1,\cdots,a_g,b_1,\cdots, b_g\vert \prod_{i=1}^g a_ib_ia_i^{-1} b_i^{-1}&gt;$</td>
    </tr>
    <tr>
      <td>胞腔分解</td>
      <td>$\pi_1(M)=\pi_1(S_2)=\pi_1(S_1\cup_{k=1}^{n_2}D_2^k)$</td>
      <td>$&lt;\gamma_1,\cdots,\gamma_k\vert\  [\partial D_2^1][\partial D_2^2],\cdots, [\partial D_2^{n_2}]&gt;$</td>
    </tr>
  </tbody>
</table>

<h2 id="特例">特例</h2>

<h3 id="torus-t_2">torus $T_2$</h3>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240710101618.png" alt="Pasted image 20240710101618.png" width="400" /></p>

<ul>
  <li>torus可以沿a,b cut, 变形成如右图disk, 即 $aba^{-1}b^{-1}\sim e$</li>
  <li>经过$p$点的任意$\gamma$ 分解成不和$a,b$ 相交的$\gamma_i$ 的积, $\gamma\in &lt;a,b&gt;$</li>
</ul>

<h3 id="projective-plane-mathbbrp2">projective plane $\mathbb{R}P^2$</h3>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240707162754.png" alt="Pasted image 20240707162754.png" width="400" /> <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240710162803.png" alt="Pasted image 20240710162803.png" width="150" /></p>

<ul>
  <li>把$\mathbb{RP}^2$ 看成上半球面$H^2$ , 沿红线切割, 下面变成一个disk(D), 上面变成Möbius band(M, crosscap)</li>
  <li>$\pi_1(M)=&lt;\gamma&gt;$ , $\pi_1(D)=\lbrace e\rbrace=\emptyset$ , $\pi_1(\partial M)=&lt;\gamma^2&gt;$
    <ul>
      <li>把Möbius strip变形成如右图, 任意和边界不相交的loop都$\sim\gamma$ , 边界上为 $\gamma^2$</li>
    </ul>
  </li>
</ul>

<h2 id="曲面分解">曲面分解</h2>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Seifert–Van_Kampen_theorem">Seifert-Van Kampen Theorem</a>: $\pi_1(U\cup V, p)$ 和$\pi_1(U,p)$ , $\pi_1(V,p)$ 的关系</li>
</ul>

<p><img src="/personal_homepage/docs/attachment/440px-Connected_sum.svg.png" alt="440px-Connected_sum.svg.png" width="300" /></p>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Connected_sum">connect sum(联通和)</a> : 两个曲面去掉disk粘在一起, $A \texttt{#} B=(A-D)\cup_{\partial D}(B-D)$
    <ul>
      <li>任意closed surface 可以写成以下3种形式联通和分解,
        <ol>
          <li>S是sphere</li>
          <li>$S=T\texttt{#} \cdots \texttt{#}T$  (S是oriented)
            <ul>
              <li>$\pi_1(S,p)=&lt;a_1,\cdots,a_g,b_1,\cdots, b_g\vert \prod_{i=1}^g a_ib_ia_i^{-1} b_i^{-1}&gt;$
                <ul>
                  <li>用<a href="https://en.wikipedia.org/wiki/Seifert–Van_Kampen_theorem">Seifert-Van Kampen Theorem</a> 和归纳法证明</li>
                  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240710120840.png" alt="Pasted image 20240710120840.png" width="100" /> circle $\gamma\sim aba^{-1}b^{-1}$</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>$S = \mathbb{RP}^2 \texttt{#} \cdots \texttt{#}\mathbb{RP}^2$ (S是non-oriented)</li>
        </ol>
      </li>
    </ul>
  </li>
</ul>

<h3 id="closed-oriented-曲面分解canonical-representation">closed oriented 曲面分解(Canonical Representation)</h3>

<ul>
  <li>canonical basis定义: ${a_1,\dots,a_g,b_1,\dots,b_g}$, $a_i$ 只和$b_i$ 相交
    <ul>
      <li><a href="https://en.wikipedia.org/wiki/Intersection_number">intersection number</a>定义: $a_i\cdot b_i=1$
        <ul>
          <li>在曲面上intersection index=1, 定义为切向量的cross product和法向量点积 &gt; 0</li>
        </ul>
      </li>
      <li>对应canonical representation: $\pi_1(S,p)=&lt;a_1,\cdots,a_g,b_1,\cdots, b_g\vert \prod_{i=1}^g a_ib_ia_i^{-1} b_i^{-1}&gt;$</li>
    </ul>
  </li>
  <li>basis计算方法:
    <ul>
      <li>火烧法: 三角剖分$M$ -&gt; cut graph $\Gamma$  -&gt; canonical basis
        <ul>
          <li>计算$M$ 的dual graph $\bar M$</li>
          <li>计算$\bar M$ 的<a href="https://en.wikipedia.org/wiki/Spanning_tree">spanning tree</a> $\bar T$</li>
          <li>得到cut graph $\Gamma = \lbrace e\in M\vert \bar e \notin \bar T\rbrace$</li>
          <li>计算cut graph $\Gamma$ 的spanning tree $T$</li>
          <li>得到 $\Gamma-T$ 是edge $\lbrace e_1, e_2,\dots, e_{2g}\rbrace$</li>
          <li>$e_i\cup T$ 是loop $\gamma_i$, 得到basis $\lbrace \gamma_1, \gamma_2,\dots, \gamma_{2g}\rbrace$</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>唯一性: canoical representation不唯一, 判断两个canoical representation是isomorphic的是NP-hard问题.
    <ul>
      <li>相当于要判断canoical basis中的曲线homotopy(同伦)</li>
    </ul>
  </li>
</ul>

<h3 id="cw-cell-decomposition胞腔分解"><a href="https://en.wikipedia.org/wiki/CW_complex">CW-cell decomposition(胞腔分解)</a></h3>

<p>定义在n-dim 的manifold上</p>

<ul>
  <li>定义: n-dim 的manifold $M$ , 有$M$ 的k-skeleton $S_0\subset S_1\subset \cdots \subset S_n=M$
    <ul>
      <li>其中k-skeleton $S_k$ 是$S_{k-1}$ 粘上一些disk:  $S_k=S_{k-1}\cup D_k^1\cup D_k^2\cdots \cup D_k^{n_k}$ ,. $\partial D_k^i\subset S_{k-1}$   </li>
      <li>0-skeleton $S_0$ 是一些离散点, $S_0=\lbrace D_0^1,\cdots, D_0^{n_0}\rbrace$</li>
    </ul>
  </li>
  <li>CW-cell decomposition把fundamental group的定义扩展到n-dim manifold
    <ul>
      <li>$\pi_1(S_n)=\pi_1(S_{n-1})=\cdots=\pi_1(S_2)=\pi_1(S_1\cup_{k=1}^{n_2}D_2^k)=&lt;\gamma_1,\cdots,\gamma_k\vert\  [\partial D_2^1][\partial D_2^2],\cdots, [\partial D_2^{n_2}]&gt;$
        <ul>
          <li>用<a href="https://en.wikipedia.org/wiki/Seifert–Van_Kampen_theorem">Seifert-Van Kampen Theorem</a> 和归纳法证明
            <ul>
              <li>$\pi_1(D_k^{n_k})$ 是trival的, $\pi_1(\partial D_k^{n_k}=\mathbb S^{k-1})$ 在$k&gt; 2$ 的时候也是trival的.</li>
              <li>1-skeleton $S_1$ 是一些path, $\pi_1(S_1)=&lt;\gamma_1,\cdots,\gamma_k&gt;$ 提供了生成元</li>
              <li>2-disk的边界 $\pi_1(\partial D_2^{n_j})$ 在$S_1$ 中的表示$[\partial D_2^j]$提供了等价关系</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>surface的情况, $S_2=S_1\cup D$ 只有一个2维胞腔(面), cutgraph $\Gamma$ 就是1-skeleton $S_1$</li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="algorithm" /><category term="content" /><category term="fundamental_group" /><category term="homeomorphic" /><category term="homotopy" /><summary type="html"><![CDATA[fundamental group分类曲面是足够精细的]]></summary></entry><entry><title type="html">报税计算</title><link href="https://roshameow.github.io//personal_homepage/docs/affair/tax/" rel="alternate" type="text/html" title="报税计算" /><published>2024-06-25T00:00:00+00:00</published><updated>2024-07-03T02:53:10+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/affair/tax</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/affair/tax/"><![CDATA[<p><a href="https://shanghai.chinatax.gov.cn">上海税务局网站</a></p>

<p><a href="https://shanghai.chinatax.gov.cn/bsfw/bszn/znnssb/201911/t448958.html">自行申报的流程</a></p>

<h2 id="材料">材料</h2>

<p><a href="https://shanghai.chinatax.gov.cn/bsfw/xzzx/bgxz/sbzsl/">表格下载</a></p>

<ul>
  <li><a href="https://shanghai.chinatax.gov.cn/bsfw/xzzx/bgxz/sbzsl/202402/t470803.html">个人所得税年度自行纳税申报表</a> x2
    <ul>
      <li>问答版里可以看到计算公式</li>
    </ul>
  </li>
  <li><a href="https://shanghai.chinatax.gov.cn/bsfw/xzzx/bgxz/sbzsl/202302/t466195.html">个人所得税专项附加扣除信息表</a> x1
    <ul>
      <li>在问答版里可以看到怎么计算: 租房每月1500, 赡养老人每月3000</li>
    </ul>
  </li>
  <li>扣除:
    <ul>
      <li>随身办里查到的没有具体数值</li>
    </ul>
  </li>
</ul>

<p>没有走人工申报的流程, 报税大厅的人工窗口帮忙改好了专项扣除错的部分, 在app上完成的申报退税. 不过倒是收走了我填好签过字的申报表?</p>
<h2 id="地址">地址</h2>

<p><a href="https://shanghai.chinatax.gov.cn/newxbwz/wsbs/wsbsdtll/WSBSdtllCtrl-cxfjcxdom.pfv">在公众查询里</a></p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="affair" /><category term="content" /><summary type="html"><![CDATA[上海税务局网站]]></summary></entry><entry><title type="html">T-Display-S3开发版</title><link href="https://roshameow.github.io//personal_homepage/docs/hardware/border/" rel="alternate" type="text/html" title="T-Display-S3开发版" /><published>2024-06-13T00:00:00+00:00</published><updated>2024-07-10T15:17:06+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/hardware/border</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/hardware/border/"><![CDATA[<h2 id="开发方法">开发方法</h2>

<ol>
  <li>Arduino IDE</li>
  <li>Esp-idf</li>
  <li>micropython</li>
</ol>

<h2 id="功能实现">功能实现</h2>

<h3 id="连接wifi">连接wifi</h3>

<h3 id="连接传感器">连接传感器</h3>

<h3 id="睡眠模式">睡眠模式</h3>

<h3 id="单击-双击-长按">单击, 双击, 长按</h3>

<h3 id="蓝牙传输图片">蓝牙传输图片</h3>

<h2 id="重置方法">重置方法</h2>

<p><a href="https://github.com/Xinyuan-LilyGO/T-Display-S3/issues/111"><strong>https://github.com/Xinyuan-LilyGO/T-Display-S3/issues/111</strong></a></p>

<ol>
  <li>﻿﻿Connect the board via the USB cable</li>
  <li>﻿﻿Press and hold the BOOT button, While still pressing the BOOT button, press RST</li>
  <li>﻿﻿Release the RST</li>
  <li>﻿﻿Release the BOOT button</li>
  <li>﻿﻿Upload sketch</li>
  <li>﻿﻿Once sketch is uploaded, press and release RST</li>
</ol>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="hardware" /><category term="content" /><summary type="html"><![CDATA[开发方法]]></summary></entry><entry><title type="html">四边形网格生成</title><link href="https://roshameow.github.io//personal_homepage/docs/algorithm/quadrilateral-mesh/" rel="alternate" type="text/html" title="四边形网格生成" /><published>2024-06-04T00:00:00+00:00</published><updated>2024-07-03T23:46:22+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/algorithm/quadrilateral-mesh</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/algorithm/quadrilateral-mesh/"><![CDATA[<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240610075408.png" alt="Pasted image 20240610075408.png" width="150" /> -&gt; <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240610075425.png" alt="Pasted image 20240610075425.png" width="130" /></p>

<p>从通用的triangle mesh生成quad mesh. quad mesh容易插值和细分(样条曲面和 Catmull-Clark细分曲面常⻅ 的定义域就是四边形)</p>

<h2 id="quad-mesh-定义">quad-mesh 定义</h2>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/b/bb/Conformal_map.svg" alt="drawing" width="100" /></p>

<ul>
  <li>由多个topological rectangle构成,每个rectangle interior是regular grid.
    <ul>
      <li>topological rectangle:由复平面的rectangle做conformal(holomorphic) map变形得到
        <ul>
          <li><a href="https://en.wikipedia.org/wiki/Conformal_map">Conformal map(保角映射)</a> 从几何方面描述: grid映射成正交的curve</li>
          <li><a href="https://en.wikipedia.org/wiki/Holomorphic_function">holomorphic map(全纯函数)</a> 从分析方面描述:  $\mathbb C\rightarrow \mathbb C$ , 在任意一点可导</li>
        </ul>
      </li>
      <li>通过在quad-mesh上定义conformal <a href="https://en.wikipedia.org/wiki/Atlas_(topology)">atlas</a> , 得到quad- mesh是Riemann surface(see <a href="#ref">quad.2 Theorem 4.6</a>)
        <ul>
          <li>chart: 每个face 的 interior定义$U_f$ , edge邻域定义$U_e$ , vertex邻域定义$U_v$</li>
          <li>transition: 每两个chart之间的transition(face-&gt;edge, edge-&gt;vertex, face-&gt;vertex)都是$\pi/2$ 的旋转+平移, 是holomorphic的</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240612152840.png" alt="Pasted image 20240612152840.png" width="400" /></p>

<h2 id="等价条件">等价条件</h2>

<h3 id="conditions">conditions</h3>

<ul>
  <li>Riemann surface($\Sigma,g$) with cone singularities($\mathcal S$) 是quad mesh($\mathcal Q$) 的等价条件1 :
    <ol>
      <li>Gauss-Bonnet condition : 在singularities处的total curvature符合<a href="https://en.wikipedia.org/wiki/Gauss–Bonnet_theorem">Gauss-Bonnet Theorem</a>
        <ul>
          <li>$\sum_{v_i} (4-k(v))\frac{\pi}{2}=2\pi\chi(\Sigma)=2\pi(2-2g)$
            <ul>
              <li>LHS: closed surface, 在singularities处的curvature是$(4-k(v))\frac{\pi}{2}$ , 其他地方的curvature=0</li>
              <li>RHS: <a href="https://en.wikipedia.org/wiki/Euler_characteristic">Euler Character</a> = 2-2g</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>holonomy condition: 一个cross frame沿loop平行移动, 方向旋转的⻆度为pi/2的整数倍.存在一个global smooth的cross field.
        <ul>
          <li><a href="https://en.wikipedia.org/wiki/Holonomy">holonomy group</a> :  $Hol(\Sigma\backslash\mathcal S,g)={e^{i\frac{k\pi}{2}},k\in\mathbb Z}\simeq \mathbb Z^3$</li>
          <li>cross field指$\Sigma$ 的tangent bundle上的 <a href="https://en.wikipedia.org/wiki/Levi-Civita_connection" title="Levi-Civita connection">Levi-Civita connection</a></li>
        </ul>
      </li>
      <li>boundary alignment condition: boundary和cross field是平行或垂直关系</li>
      <li>finite geodesic lamination condition: 沿cross field的geodesic是有限⻓的</li>
    </ol>
  </li>
  <li>等价关系推导:
    <ul>
      <li>quad mesh -&gt; conditions(see <a href="#ref">quad.1 Theorem 3.7</a>):
        <ul>
          <li>取cross field平行于edges
            <ul>
              <li>每次穿过不同chart时, 只会转$\pi/2$ 的整数倍</li>
              <li>geodesic不会进入同一个face多过两次, face数是又有限的, 所以geodesic也是finite的.</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>Riemann surface with conditions -&gt; quad mesh(see <a href="#ref">quad.1 Theorem 3.8</a>):
        <ul>
          <li>从singilarities出发, 沿cross field的geodesics形成quad mesh</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="meromorphic-quartic-differential">meromorphic quartic differential</h3>

<ul>
  <li>Riemann surface with cone singularities是quad mesh的等价条件 2:
    <ul>
      <li>closed quad-mesh等价于存在meromorphic quartic differential with finite trajectories
        <ul>
          <li>从文章看, quartic differential $(dz)^4$ 似乎并不是指外积 $\wedge^4 dz$</li>
          <li>从quartic differential $\omega=f(z)(dz)^4$, 对应differential 1-form $\sqrt[4]{\omega}=f(z)^{\frac{1}{4}}dz$</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>等价关系推导:
    <ul>
      <li>quad mesh -&gt; meromorphic quartic differential(see <a href="#ref">quad.2 Theorem 4.7</a> ):
        <ul>
          <li>locally 在一个face 上定义 $(dz_f)^4$ , 可以consistent的定义在其他face, edge, vertex(包括singularities)的chart上</li>
        </ul>
      </li>
      <li>meromorphic quartic differential -&gt; conditions(see <a href="#ref">quad.2 Theorem 4.8</a> ):
        <ul>
          <li>取cross field(condition.2)为meromorphic quartic differential的horizontal &amp; vertical trajectories(see <a href="#ref">qaud.2 Definition 3.13</a> )
            <ul>
              <li>使$\omega=f(z)(dz)^4$ 值是real的方向, 如果$w=z(dz)^4=c(d(z^{\frac{5}{4}}))^4$ , 有5个方向, $\theta=\frac{k2\pi}{5}$</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="divisor">divisor</h3>

<ul>
  <li>divisor 对应meromorphic quartic differential的等价条件3:
    <ul>
      <li>divisor和一个holomorphic 1-form在Abel-Jacobian map下的值相等, $\mu(D-4(\omega_0))=0$
        <ul>
          <li>$(\omega_0)$ 为holomorphic 1-form的zeros</li>
          <li>Abel-Jacobian map ($\Sigma\rightarrow \Omega^1(\Sigma)^*/\Lambda$ )
            <ul>
              <li>$\mu:p\mapsto \int_{p}^{p_0}\cdot$
                <ul>
                  <li>因此可以定义在divisor上,  ($Div(\Sigma)\rightarrow \Omega^1(\Sigma)^*/\Lambda$ ), $\mu:\sum_{i=1}^n n_ip_i\mapsto \sum_{i=1}^n n_i\int_{p_i}^{p_0}\cdot$</li>
                </ul>
              </li>
              <li>$\Omega^1(\Sigma)$ 为<a href="https://en.wikipedia.org/wiki/Differential_forms_on_a_Riemann_surface">holomorphic 1-form的线性空间</a> , $\Omega^1(\Sigma)^*$ 是它的对偶空间</li>
              <li>modulo image of <a href="https://en.wikipedia.org/wiki/Homology_(mathematics)">homology group(同调群)</a>  $H_1(\Sigma,\mathbb Z)$
                <ul>
                  <li>记 $H_1(\Sigma,\mathbb Z)$ 的basis ${a_1,\dots,a_g,b_1,\dots,b_g}$ , 即$\Lambda=span{\int_{a_1}\cdot,\dots,\int_{a_g}\cdot,\int_{b_1}\cdot,\dots,\int_{b_g}\cdot}$
                    <ul>
                      <li>前半部分记为period matrix $A$, 后半部分记为period matrix $B$ (see quad.3 Definition 3.9)</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>等价关系推导:
    <ul>
      <li>quad mesh -&gt; divisor condition(see <a href="#ref">quad.2 Theorem 4.11</a> ):
        <ul>
          <li>divisor Q 对应的meromorphic quartic differential($\omega_Q$) 可以拆分成 $\omega_Q=f\cdot \omega_0^4$
            <ul>
              <li>其中$\omega_0$ 是任意holomorphic 1-form, $f$ 是meromorphic function</li>
              <li>meromorphic function $f$ 对应principle divisor $(f)$ , $\mu((f))=0$</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="从divisor生成quad-mesh的方法">从divisor生成quad-mesh的方法</h2>

<p>只考虑closed oriented surface的情况. 有边界和non-oriented(Mobius strip)的情况类似.</p>

<h3 id="生成t-mesh-tvef">生成T-mesh $T=(V,E,F)$</h3>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240612151157.png" alt="Pasted image 20240612151157.png" width="200" /></p>

<ul>
  <li>从triangle mesh计算homology group(同调群) $H_1(\Sigma,\mathbb Z)$ 的basis ${a_1,\dots,a_g,b_1,\dots,b_g}$ ,
    <ul>
      <li>通过reset height function构造Reeb graph抽卡保证$a_i$ 只和$b_i$ 相交(canonical basis, see <a href="#ref">4</a>)</li>
      <li>得到holomorphic 1-form basis  $\Omega^1(\Sigma)$ (see <a href="#ref">5</a>)
        <ul>
          <li>loop $\gamma$ -&gt; discrete closed 1-form $\lambda_{\gamma}=dg_{\gamma}$  -&gt; harmonic 1-form $\omega_{\gamma}$ -&gt; holomorphic 1-form $\phi_{\gamma}$
            <ul>
              <li>由<a href="https://en.wikipedia.org/wiki/Riemann–Roch_theorem">Riemann-Roch theorem</a>, $l(D)-l(K-D)=deg(D)+1-g$, 令$D=0$, 得到 $l(K)=g$ , 即我们得到的是一组basis</li>
            </ul>
          </li>
          <li>得到一个holomorphic 1-form $\phi$</li>
          <li>得到period matrix A, B</li>
        </ul>
      </li>
      <li>得到cut graph $\Gamma$</li>
    </ul>
  </li>
  <li>生成singularity set $\mathcal S$
    <ul>
      <li>在surface上选择initial singularities
        <ul>
          <li>maximal Gaussian curvature as poles, or with minimal curvature as zeros</li>
        </ul>
      </li>
      <li>先添加一些zeros, poles, 使其满足Gauss-Bonnet condition
        <ul>
          <li>local maximal Gaussian curvature as poles, or with local minimal curvature as zeros</li>
        </ul>
      </li>
      <li>优化这些点, 使其满足Abel–Jacobi condition: 对应一个meromorphic quartic differential
        <ul>
          <li>等价于: divisor $D$ 和 $4(\phi)$  linearly equivalent, 即相差一个meromorphic function</li>
          <li>等价于: $D$ 和 $4(\phi)$ 在Abel-Jacobian map的值相等</li>
          <li>用gradient descent优化 $\mu(D-4(\phi))$</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>把$\mathcal S$ 做为divisor生成一个meromorphic quartic differential $\omega$
    <ul>
      <li>计算cutgraph: $\Gamma\ \cup\ {\cup_{i=1}^k \gamma_i}$     (see <a href="#ref">quad.3  4.1.7</a> )
        <ul>
          <li>其中$\Gamma$ 为homology group  ${a_1,\dots,a_g,b_1,\dots,b_g}$ 的union</li>
          <li>${\cup_{i=1}^k \gamma_i}$ 是sigularities $p_i$ 到cutgraph $\Gamma$ 的最短path</li>
        </ul>
      </li>
      <li>得到沿上面cutgraph切开的foundamental domain $\tilde \Sigma$</li>
      <li>计算foundamental domain $\tilde \Sigma$ 到平面$\mathbb C$ 的isometric immersion $\psi$ (see <a href="#ref">6</a>)
        <ul>
          <li>用Newton method优化每个vertex上的conformal  factor $u_i$</li>
        </ul>
      </li>
      <li>complex domain上的$dz^4$, 用$\psi$ pull back, 得到 $\omega=\psi^* dz^4$ 为$\Sigma$ 上的一个meromorphic quartic differential</li>
    </ul>
  </li>
  <li>从 $\omega$ 上$S$的横竖方向trace得到T-mesh(see <a href="#ref">7</a>)</li>
</ul>

<p>T-mesh 形成过程: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240612170414.png" alt="Pasted image 20240612170414.png" width="400" /></p>
<h3 id="生成quad-mesh-把每个rectangle划分成grid方格">生成quad-mesh: 把每个rectangle划分成grid方格</h3>

<ul>
  <li>解$\downarrow$ 构成的线性系统方程
    <ul>
      <li>约束:
        <ul>
          <li>singularity position constraints: 共2(S-1)个(singularity set $\mathcal S$ )
            <ul>
              <li>$v_0$ 到$v_i$ 的path在horizontal, vertical 方向是有理数 (由path经过的edge组成 )</li>
            </ul>
          </li>
          <li>deck transformation constraints: 共2x2g个
            <ul>
              <li>${a_1,\dots,a_g,b_1,\dots,b_g}$ 对应的路径在horizontal, vertical 方向是有理数</li>
            </ul>
          </li>
          <li>face constraints: 共2(F-1)个
            <ul>
              <li>四边形相对边等长</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>变量: 边长的改变量 ${x_e:e\in E}$</li>
    </ul>
  </li>
</ul>

<h2 id="reference">reference</h2>
<p><span id="ref"></span></p>

<p>[quad.1] Chen, Wei, Xiaopeng Zheng, Jingyao Ke, Na Lei, Zhongxuan Luo, and Xianfeng Gu. “Quadrilateral Mesh Generation I : Metric Based Method.” <em>Computer Methods in Applied Mechanics and Engineering</em> 356 (November 2019): 652–68. <a href="https://doi.org/10.1016/j.cma.2019.07.023">https://doi.org/10.1016/j.cma.2019.07.023</a>.</p>

<p>[quad.2] Lei, Na, Xiaopeng Zheng, Zhongxuan Luo, Feng Luo, and Xianfeng Gu. “Quadrilateral Mesh Generation II: Meromorphic Quartic Differentials and Abel–Jacobi Condition.” <em>Computer Methods in Applied Mechanics and Engineering</em> 366 (July 2020): 112980. <a href="https://doi.org/10.1016/j.cma.2020.112980">https://doi.org/10.1016/j.cma.2020.112980</a>.</p>

<p>[quad.3]  Zheng, Xiaopeng, Yiming Zhu, Wei Chen, Na Lei, Zhongxuan Luo, and Xianfeng Gu. “Quadrilateral Mesh Generation III : Optimizing Singularity Configuration Based on Abel–Jacobi Theory.” <em>Computer Methods in Applied Mechanics and Engineering</em> 387 (December 2021): 114146. <a href="https://doi.org/10.1016/j.cma.2021.114146">https://doi.org/10.1016/j.cma.2021.114146</a>.</p>

<p>[4] K, DeyTamal, FanFengtao, and WangYusu. “An Efficient Computation of Handle and Tunnel Loops via Reeb Graphs.” <em>ACM Transactions on Graphics (TOG)</em>, July 21, 2013. <a href="https://doi.org/10.1145/2461912.2462017">https://doi.org/10.1145/2461912.2462017</a>. <strong>计算homology group</strong></p>

<p>[5] ACM Other conferences. “Global Conformal Surface Parameterization Proceedings of the 2003 Eurographics/ACM SIGGRAPH Symposium on Geometry Processing.” World. Accessed June 5, 2024. <a href="https://doi.org/10.5555/882370.882388">https://doi.org/10.5555/882370.882388</a>.    <strong>计算holomorphic 1-form basis</strong></p>

<p>[6] Jin, Miao, Junho Kim, Feng Luo, and Xianfeng Gu. “Discrete Surface Ricci Flow.” <em>IEEE Transactions on Visualization and Computer Graphics</em> 14 (September 1, 2008): 1030–43. <a href="https://doi.org/10.1109/TVCG.2008.57">https://doi.org/10.1109/TVCG.2008.57</a>.  <strong>计算foundamental domain的参数化</strong></p>

<p>[7] Eppstein, David, Michael Goodrich, Ethan Kim, and Rasmus Tamstorf. “Motorcycle Graphs: Canonical Quad Mesh Partitioning.” <em>Comput. Graph. Forum</em> 27 (July 1, 2008): 1477–86. <a href="https://doi.org/10.1111/j.1467-8659.2008.01288.x">https://doi.org/10.1111/j.1467-8659.2008.01288.x</a>.  <strong>计算T-mesh</strong></p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="algorithm" /><category term="content" /><category term="mesh" /><category term="quad-mesh" /><summary type="html"><![CDATA[-&gt;]]></summary></entry><entry><title type="html">python工具</title><link href="https://roshameow.github.io//personal_homepage/docs/tool/python-tool/" rel="alternate" type="text/html" title="python工具" /><published>2024-06-03T00:00:00+00:00</published><updated>2024-07-10T15:11:12+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/tool/python-tool</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/tool/python-tool/"><![CDATA[<h2 id="启动脚本">启动脚本</h2>

<ul>
  <li>创建虚拟环境</li>
  <li>install requirement</li>
  <li>启动python脚本</li>
</ul>

<p>例子: <a href="https://gist.github.com/roshameow/607395fddc91bf77be3a2f2216fac55e#file-setup-sh"><strong>setup.sh</strong></a></p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="tool" /><category term="content" /><summary type="html"><![CDATA[启动脚本]]></summary></entry><entry><title type="html">blender学习: 冰材质</title><link href="https://roshameow.github.io//personal_homepage/docs/blender/blender-learning13/" rel="alternate" type="text/html" title="blender学习: 冰材质" /><published>2024-05-27T00:00:00+00:00</published><updated>2024-05-28T20:46:36+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/blender/blender-learning13</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/blender/blender-learning13/"><![CDATA[<p>在IOR=1.31的透明材质基础上, 添加表面的凹凸和内部的裂痕, 气泡</p>

<h2 id="制作冰材质">制作冰材质:</h2>

<h3 id="用volume-shader">用volume shader</h3>

<p>参考<a href="https://www.youtube.com/watch?v=EUvNwscez-w">这个教学</a></p>

<ol>
  <li>用Cycles渲染器, 打开Render-&gt;<a href="https://docs.blender.org/manual/en/latest/render/cycles/render_settings/film.html">Film-&gt;Transparent-&gt; Transparent Glass</a>
    <ul>
      <li>但是没有用到composition所以开不开无所谓吧?</li>
    </ul>
  </li>
  <li><strong>表面增加凹凸</strong>: 用Bump节点
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240527221548.png" alt="Pasted image 20240527221548.png" width="100" /></li>
      <li>用<a href="https://docs.blender.org/manual/en/4.1/render/shader_nodes/vector/bump.html">Bump</a> 更改normal的方向: 根据输入的局部高度差
        <ul>
          <li>用noise texture生成纹理, 应用到bump的高度</li>
        </ul>
      </li>
      <li>用相同的noise texture生成纹理, 应用到roughness
        <ul>
          <li>目的是让凸出的地方更粗糙? 感觉和实际不太相符</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>在内部添加crack</strong>: 用<a href="https://docs.blender.org/manual/en/latest/render/shader_nodes/textures/voronoi.html">Voronoi Texture</a> 复合Noise Texture的扭曲
    <ul>
      <li></li>
      <li>texture color: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240528093833.png" alt="Pasted image 20240528093833.png" width="100" />  添加到volume后: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240528102634.png" alt="Pasted image 20240528102634.png" width="100" /></li>
      <li>Voronoi Texture由<a href="https://en.wikipedia.org/wiki/Worley_noise">Worley noise</a> 生成
        <ul>
          <li>选择Distance to Edge: 生成distance map</li>
        </ul>
      </li>
      <li>用<a href="https://docs.krita.org/en/reference_manual/blending_modes/lighten.html#bm-linear-light">Linear Light(线性光)</a> 的方式混合: 和add差不多, 但是会对可能saturated的值特殊处理</li>
    </ul>
  </li>
  <li><strong>在内部添加一些雾气</strong>: 用noise texture生成</li>
</ol>

<ul>
  <li>结果: 没太复刻出冰的质感, 还是更像玻璃
    <ul>
      <li><img src="/personal_homepage/docs/attachment/ice_glass_cycle.png" alt="ice_glass_cycle.png" width="480" /></li>
    </ul>
  </li>
</ul>

<h3 id="用粒子系统">用粒子系统</h3>

<p>参考<a href="https://www.bilibili.com/video/BV1i5411e7VZ/">这个教学</a></p>

<h2 id="实物参考">实物参考</h2>

<iframe src="//player.bilibili.com/player.html?isOutside=true&amp;aid=422168352&amp;bvid=BV1a3411477N&amp;cid=458238306&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>

<ul>
  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240527221116.png" alt="Pasted image 20240527221116.png" width="480" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240527221224.png" alt="Pasted image 20240527221224.png" width="320" /></li>
  <li>冻的漂亮的冰里面本来就不应该有那些crack和气泡嘛</li>
</ul>

<h2 id="blender用法">blender用法</h2>

<ul>
  <li>displacement和noise texture+bump的凹凸效果区别: displacement会确实更改mesh上点的位置, bump不会, bump只是改变表面法线方向来模拟.</li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="blender" /><category term="content" /><category term="shader" /><summary type="html"><![CDATA[在IOR=1.31的透明材质基础上, 添加表面的凹凸和内部的裂痕, 气泡]]></summary></entry><entry><title type="html">阿那亚戏剧节的海报制作</title><link href="https://roshameow.github.io//personal_homepage/docs/design/poster1/" rel="alternate" type="text/html" title="阿那亚戏剧节的海报制作" /><published>2024-05-24T00:00:00+00:00</published><updated>2024-05-27T19:08:11+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/design/poster1</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/design/poster1/"><![CDATA[<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240524215103.png" alt="Pasted image 20240524215103.png" width="300" /></p>

<ul>
  <li>想法:
    <ul>
      <li>想着 🙌没有人👐比我👌更懂☝伽利略 选了这个主题,</li>
      <li>虽然知道戏剧是改编自《伽利略传》, 讲的是伽利略和教廷之间的比较肮脏?的拉扯.</li>
      <li>我希望海报呈现的是他的动机: 希望世界上所有事情都和谐漂亮的执着和品味(我个人理解).</li>
      <li>所以希望海报是抽象的, 现代的, 干净的
        <ul>
          <li>因此 pass掉了非常具象的指代人身份的元素, 比如伽利略头像啊, ❗️没有语境的数学公式啊. 选了伽利略至今仍有影响的工作, 密度天平和潮汐现象</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="制作">制作</h2>

<ul>
  <li>背景
    <ul>
      <li>画了草图后用stable-diffusion的ipadapter做风格转换</li>
    </ul>
  </li>
  <li>前景</li>
</ul>

<h2 id="素材">素材</h2>

<p>[1] https://www.pinterest.com/pin/58546863899073827/  背景风格</p>

<p>[2] https://www.pinterest.com/pin/363102788722082645/ 前景风格</p>

<h2 id="后续">后续</h2>

<p>发了之后完全没有流量, 而且我也看不出其他作品的好坏和点赞的关系, 看来我吃不上这碗饭😮‍💨</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="design" /><category term="content" /><category term="photoshop" /><category term="stable-diffusion" /><summary type="html"><![CDATA[]]></summary></entry></feed>