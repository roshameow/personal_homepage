<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://roshameow.github.io//personal_homepage/atom.xml" rel="self" type="application/atom+xml" /><link href="https://roshameow.github.io//personal_homepage/" rel="alternate" type="text/html" /><updated>2024-06-25T06:37:53+00:00</updated><id>https://roshameow.github.io//personal_homepage/atom.xml</id><title type="html">Liu, Wen’s Home Page</title><subtitle>Work, Experiments and Ideas.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><entry><title type="html">报税计算</title><link href="https://roshameow.github.io//personal_homepage/docs/affair/tax/" rel="alternate" type="text/html" title="报税计算" /><published>2024-06-25T00:00:00+00:00</published><updated>2024-06-25T18:50:01+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/affair/tax</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/affair/tax/"><![CDATA[]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="affair" /><category term="content" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">T-Display-S3开发版</title><link href="https://roshameow.github.io//personal_homepage/docs/hardware/border/" rel="alternate" type="text/html" title="T-Display-S3开发版" /><published>2024-06-13T00:00:00+00:00</published><updated>2024-06-13T23:56:52+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/hardware/border</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/hardware/border/"><![CDATA[<h2 id="开发方法">开发方法</h2>

<ol>
  <li>Arduino IDE</li>
  <li>Esp-idf</li>
  <li>micropython</li>
</ol>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="hardware" /><category term="content" /><summary type="html"><![CDATA[开发方法]]></summary></entry><entry><title type="html">四边形网格生成</title><link href="https://roshameow.github.io//personal_homepage/docs/algorithm/quadrilateral-mesh/" rel="alternate" type="text/html" title="四边形网格生成" /><published>2024-06-04T00:00:00+00:00</published><updated>2024-06-13T00:54:48+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/algorithm/quadrilateral-mesh</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/algorithm/quadrilateral-mesh/"><![CDATA[<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240610075408.png" alt="Pasted image 20240610075408.png" width="150" /> -&gt; <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240610075425.png" alt="Pasted image 20240610075425.png" width="130" /></p>

<p>从通用的triangle mesh生成quad mesh. quad mesh容易插值和细分(样条曲面和 Catmull-Clark细分曲面常⻅ 的定义域就是四边形)</p>

<h2 id="quad-mesh-定义">quad-mesh 定义</h2>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/b/bb/Conformal_map.svg" alt="drawing" width="100" /></p>

<ul>
  <li>由多个topological rectangle构成,每个rectangle interior是regular grid.
    <ul>
      <li>topological rectangle:由复平面的rectangle做conformal(holomorphic) map变形得到
        <ul>
          <li><a href="https://en.wikipedia.org/wiki/Conformal_map">Conformal map(保角映射)</a> 从几何方面描述: grid映射成正交的curve</li>
          <li><a href="https://en.wikipedia.org/wiki/Holomorphic_function">holomorphic map(全纯函数)</a> 从分析方面描述:  $\mathbb C\rightarrow \mathbb C$ , 在任意一点可导</li>
        </ul>
      </li>
      <li>通过在quad-mesh上定义conformal <a href="https://en.wikipedia.org/wiki/Atlas_(topology)">atlas</a> , 得到quad- mesh是Riemann surface(see <a href="#ref">quad.2 Theorem 4.6</a>)
        <ul>
          <li>chart: 每个face 的 interior定义$U_f$ , edge邻域定义$U_e$ , vertex邻域定义$U_v$</li>
          <li>transition: 每两个chart之间的transition(face-&gt;edge, edge-&gt;vertex, face-&gt;vertex)都是$\pi/2$ 的旋转+平移, 是holomorphic的</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240612152840.png" alt="Pasted image 20240612152840.png" width="400" /></p>

<h2 id="等价条件">等价条件</h2>

<h3 id="conditions">conditions</h3>

<ul>
  <li>Riemann surface($\Sigma,g$) with cone singularities($\mathcal S$) 是quad mesh($\mathcal Q$) 的等价条件1 :
    <ol>
      <li>Gauss-Bonnet condition : 在singularities处的total curvature符合<a href="https://en.wikipedia.org/wiki/Gauss–Bonnet_theorem">Gauss-Bonnet Theorem</a>
        <ul>
          <li>$\sum_{v_i} (4-k(v))\frac{\pi}{2}=2\pi\chi(\Sigma)=2\pi(2-2g)$
            <ul>
              <li>LHS: closed surface, 在singularities处的curvature是$(4-k(v))\frac{\pi}{2}$ , 其他地方的curvature=0</li>
              <li>RHS: <a href="https://en.wikipedia.org/wiki/Euler_characteristic">Euler Character</a> = 2-2g</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>holonomy condition: 一个cross frame沿loop平行移动, 方向旋转的⻆度为pi/2的整数倍.存在一个global smooth的cross field.
        <ul>
          <li><a href="https://en.wikipedia.org/wiki/Holonomy">holonomy group</a> :  $Hol(\Sigma\backslash\mathcal S,g)={e^{i\frac{k\pi}{2}},k\in\mathbb Z}\simeq \mathbb Z^3$</li>
          <li>cross field指$\Sigma$ 的tangent bundle上的 <a href="https://en.wikipedia.org/wiki/Levi-Civita_connection" title="Levi-Civita connection">Levi-Civita connection</a></li>
        </ul>
      </li>
      <li>boundary alignment condition: boundary和cross field是平行或垂直关系</li>
      <li>finite geodesic lamination condition: 沿cross field的geodesic是有限⻓的</li>
    </ol>
  </li>
  <li>等价关系推导:
    <ul>
      <li>quad mesh -&gt; conditions(see <a href="#ref">quad.1 Theorem 3.7</a>):
        <ul>
          <li>取cross field平行于edges
            <ul>
              <li>每次穿过不同chart时, 只会转$\pi/2$ 的整数倍</li>
              <li>geodesic不会进入同一个face多过两次, face数是又有限的, 所以geodesic也是finite的.</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>Riemann surface with conditions -&gt; quad mesh(see <a href="#ref">quad.1 Theorem 3.8</a>):
        <ul>
          <li>从singilarities出发, 沿cross field的geodesics形成quad mesh</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="meromorphic-quartic-differential">meromorphic quartic differential</h3>

<ul>
  <li>Riemann surface with cone singularities是quad mesh的等价条件 2:
    <ul>
      <li>closed quad-mesh等价于存在meromorphic quartic differential with finite trajectories
        <ul>
          <li>从文章看, quartic differential $(dz)^4$ 似乎并不是指外积 $\wedge^4 dz$</li>
          <li>从quartic differential $\omega=f(z)(dz)^4$, 对应differential 1-form $\sqrt[4]{\omega}=f(z)^{\frac{1}{4}}dz$</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>等价关系推导:
    <ul>
      <li>quad mesh -&gt; meromorphic quartic differential(see <a href="#ref">quad.2 Theorem 4.7</a> ):
        <ul>
          <li>locally 在一个face 上定义 $(dz_f)^4$ , 可以consistent的定义在其他face, edge, vertex(包括singularities)的chart上</li>
        </ul>
      </li>
      <li>meromorphic quartic differential -&gt; conditions(see <a href="#ref">quad.2 Theorem 4.8</a> ):
        <ul>
          <li>取cross field(condition.2)为meromorphic quartic differential的horizontal &amp; vertical trajectories(see <a href="#ref">qaud.2 Definition 3.13</a> )
            <ul>
              <li>使$\omega=f(z)(dz)^4$ 值是real的方向, 如果$w=z(dz)^4=c(d(z^{\frac{5}{4}}))^4$ , 有5个方向, $\theta=\frac{k2\pi}{5}$</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="divisor">divisor</h3>

<ul>
  <li>divisor 对应meromorphic quartic differential的等价条件3:
    <ul>
      <li>divisor和一个holomorphic 1-form在Abel-Jacobian map下的值相等, $\mu(D-4(\omega_0))=0$
        <ul>
          <li>$(\omega_0)$ 为holomorphic 1-form的zeros</li>
          <li>Abel-Jacobian map ($\Sigma\rightarrow \Omega^1(\Sigma)^*/\Lambda$ )
            <ul>
              <li>$\mu:p\mapsto \int_{p}^{p_0}\cdot$
                <ul>
                  <li>因此可以定义在divisor上,  ($Div(\Sigma)\rightarrow \Omega^1(\Sigma)^*/\Lambda$ ), $\mu:\sum_{i=1}^n n_ip_i\mapsto \sum_{i=1}^n n_i\int_{p_i}^{p_0}\cdot$</li>
                </ul>
              </li>
              <li>$\Omega^1(\Sigma)$ 为<a href="https://en.wikipedia.org/wiki/Differential_forms_on_a_Riemann_surface">holomorphic 1-form的线性空间</a> , $\Omega^1(\Sigma)^*$ 是它的对偶空间</li>
              <li>modulo image of <a href="https://en.wikipedia.org/wiki/Homology_(mathematics)">homology group(同调群)</a>  $H_1(\Sigma,\mathbb Z)$
                <ul>
                  <li>记 $H_1(\Sigma,\mathbb Z)$ 的basis ${a_1,\dots,a_g,b_1,\dots,b_g}$ , 即$\Lambda=span{\int_{a_1}\cdot,\dots,\int_{a_g}\cdot,\int_{b_1}\cdot,\dots,\int_{b_g}\cdot}$
                    <ul>
                      <li>前半部分记为period matrix $A$, 后半部分记为period matrix $B$ (see quad.3 Definition 3.9)</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>等价关系推导:
    <ul>
      <li>quad mesh -&gt; divisor condition(see <a href="#ref">quad.2 Theorem 4.11</a> ):
        <ul>
          <li>divisor Q 对应的meromorphic quartic differential($\omega_Q$) 可以拆分成 $\omega_Q=f\cdot \omega_0^4$
            <ul>
              <li>其中$\omega_0$ 是任意holomorphic 1-form, $f$ 是meromorphic function</li>
              <li>meromorphic function $f$ 对应principle divisor $(f)$ , $\mu((f))=0$</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="从divisor生成quad-mesh的方法">从divisor生成quad-mesh的方法</h2>

<p>只考虑closed oriented surface的情况. 有边界和non-oriented(Mobius strip)的情况类似.</p>

<h3 id="生成t-mesh-tvef">生成T-mesh $T=(V,E,F)$</h3>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240612151157.png" alt="Pasted image 20240612151157.png" width="200" /></p>

<ul>
  <li>从triangle mesh计算homology group(同调群) $H_1(\Sigma,\mathbb Z)$ 的basis ${a_1,\dots,a_g,b_1,\dots,b_g}$ ,
    <ul>
      <li>通过reset height function构造Reeb graph抽卡保证$a_i$ 只和$b_i$ 相交(see <a href="#ref">4</a>)</li>
      <li>得到holomorphic 1-form basis  $\Omega^1(\Sigma)$ (see <a href="#ref">5</a>)
        <ul>
          <li>loop $\gamma$ -&gt; discrete closed 1-form $\lambda_{\gamma}=dg_{\gamma}$  -&gt; harmonic 1-form $\omega_{\gamma}$ -&gt; holomorphic 1-form $\phi_{\gamma}$
            <ul>
              <li>由<a href="https://en.wikipedia.org/wiki/Riemann–Roch_theorem">Riemann-Roch theorem</a>, $l(D)-l(K-D)=deg(D)+1-g$, 令$D=0$, 得到 $l(K)=g$ , 即我们得到的是一组basis</li>
            </ul>
          </li>
          <li>得到一个holomorphic 1-form $\phi$</li>
          <li>得到period matrix A, B</li>
        </ul>
      </li>
      <li>得到cut graph $\Gamma$</li>
    </ul>
  </li>
  <li>生成singularity set $\mathcal S$
    <ul>
      <li>在surface上选择initial singularities
        <ul>
          <li>maximal Gaussian curvature as poles, or with minimal curvature as zeros</li>
        </ul>
      </li>
      <li>先添加一些zeros, poles, 使其满足Gauss-Bonnet condition
        <ul>
          <li>local maximal Gaussian curvature as poles, or with local minimal curvature as zeros</li>
        </ul>
      </li>
      <li>优化这些点, 使其满足Abel–Jacobi condition: 对应一个meromorphic quartic differential
        <ul>
          <li>等价于: divisor $D$ 和 $4(\phi)$  linearly equivalent, 即相差一个meromorphic function</li>
          <li>等价于: $D$ 和 $4(\phi)$ 在Abel-Jacobian map的值相等</li>
          <li>用gradient descent优化 $\mu(D-4(\phi))$</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>把$\mathcal S$ 做为divisor生成一个meromorphic quartic differential $\omega$
    <ul>
      <li>计算cutgraph: $\Gamma\ \cup\ {\cup_{i=1}^k \gamma_i}$     (see <a href="#ref">quad.3  4.1.7</a> )
        <ul>
          <li>其中$\Gamma$ 为homology group  ${a_1,\dots,a_g,b_1,\dots,b_g}$ 的union</li>
          <li>${\cup_{i=1}^k \gamma_i}$ 是sigularities $p_i$ 到cutgraph $\Gamma$ 的最短path</li>
        </ul>
      </li>
      <li>得到沿上面cutgraph切开的foundamental domain $\tilde \Sigma$</li>
      <li>计算foundamental domain $\tilde \Sigma$ 到平面$\mathbb C$ 的isometric immersion $\psi$ (see <a href="#ref">6</a>)
        <ul>
          <li>用Newton method优化每个vertex上的conformal  factor $u_i$</li>
        </ul>
      </li>
      <li>complex domain上的$dz^4$, 用$\psi$ pull back, 得到 $\omega=\psi^* dz^4$ 为$\Sigma$ 上的一个meromorphic quartic differential</li>
    </ul>
  </li>
  <li>从 $\omega$ 上$S$的横竖方向trace得到T-mesh(see <a href="#ref">7</a>)</li>
</ul>

<p>T-mesh 形成过程: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240612170414.png" alt="Pasted image 20240612170414.png" width="400" /></p>
<h3 id="生成quad-mesh-把每个rectangle划分成grid方格">生成quad-mesh: 把每个rectangle划分成grid方格</h3>

<ul>
  <li>解$\downarrow$ 构成的线性系统方程
    <ul>
      <li>约束:
        <ul>
          <li>singularity position constraints: 共2(S-1)个(singularity set $\mathcal S$ )
            <ul>
              <li>$v_0$ 到$v_i$ 的path在horizontal, vertical 方向是有理数 (由path经过的edge组成 )</li>
            </ul>
          </li>
          <li>deck transformation constraints: 共2x2g个
            <ul>
              <li>${a_1,\dots,a_g,b_1,\dots,b_g}$ 对应的路径在horizontal, vertical 方向是有理数</li>
            </ul>
          </li>
          <li>face constraints: 共2(F-1)个
            <ul>
              <li>四边形相对边等长</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>变量: 边长的改变量 ${x_e:e\in E}$</li>
    </ul>
  </li>
</ul>

<h2 id="reference">reference</h2>
<p><span id="ref"></span></p>

<p>[quad.1] Chen, Wei, Xiaopeng Zheng, Jingyao Ke, Na Lei, Zhongxuan Luo, and Xianfeng Gu. “Quadrilateral Mesh Generation I : Metric Based Method.” <em>Computer Methods in Applied Mechanics and Engineering</em> 356 (November 2019): 652–68. <a href="https://doi.org/10.1016/j.cma.2019.07.023">https://doi.org/10.1016/j.cma.2019.07.023</a>.</p>

<p>[quad.2] Lei, Na, Xiaopeng Zheng, Zhongxuan Luo, Feng Luo, and Xianfeng Gu. “Quadrilateral Mesh Generation II: Meromorphic Quartic Differentials and Abel–Jacobi Condition.” <em>Computer Methods in Applied Mechanics and Engineering</em> 366 (July 2020): 112980. <a href="https://doi.org/10.1016/j.cma.2020.112980">https://doi.org/10.1016/j.cma.2020.112980</a>.</p>

<p>[quad.3]  Zheng, Xiaopeng, Yiming Zhu, Wei Chen, Na Lei, Zhongxuan Luo, and Xianfeng Gu. “Quadrilateral Mesh Generation III : Optimizing Singularity Configuration Based on Abel–Jacobi Theory.” <em>Computer Methods in Applied Mechanics and Engineering</em> 387 (December 2021): 114146. <a href="https://doi.org/10.1016/j.cma.2021.114146">https://doi.org/10.1016/j.cma.2021.114146</a>.</p>

<p>[4] K, DeyTamal, FanFengtao, and WangYusu. “An Efficient Computation of Handle and Tunnel Loops via Reeb Graphs.” <em>ACM Transactions on Graphics (TOG)</em>, July 21, 2013. <a href="https://doi.org/10.1145/2461912.2462017">https://doi.org/10.1145/2461912.2462017</a>. <strong>计算homology group</strong></p>

<p>[5] ACM Other conferences. “Global Conformal Surface Parameterization Proceedings of the 2003 Eurographics/ACM SIGGRAPH Symposium on Geometry Processing.” World. Accessed June 5, 2024. <a href="https://doi.org/10.5555/882370.882388">https://doi.org/10.5555/882370.882388</a>.    <strong>计算holomorphic 1-form basis</strong></p>

<p>[6] Jin, Miao, Junho Kim, Feng Luo, and Xianfeng Gu. “Discrete Surface Ricci Flow.” <em>IEEE Transactions on Visualization and Computer Graphics</em> 14 (September 1, 2008): 1030–43. <a href="https://doi.org/10.1109/TVCG.2008.57">https://doi.org/10.1109/TVCG.2008.57</a>.  <strong>计算foundamental domain的参数化</strong></p>

<p>[7] Eppstein, David, Michael Goodrich, Ethan Kim, and Rasmus Tamstorf. “Motorcycle Graphs: Canonical Quad Mesh Partitioning.” <em>Comput. Graph. Forum</em> 27 (July 1, 2008): 1477–86. <a href="https://doi.org/10.1111/j.1467-8659.2008.01288.x">https://doi.org/10.1111/j.1467-8659.2008.01288.x</a>.  <strong>计算T-mesh</strong></p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="algorithm" /><category term="content" /><category term="mesh" /><category term="quad-mesh" /><summary type="html"><![CDATA[-&gt;]]></summary></entry><entry><title type="html">python工具</title><link href="https://roshameow.github.io//personal_homepage/docs/tool/python-tool/" rel="alternate" type="text/html" title="python工具" /><published>2024-06-03T00:00:00+00:00</published><updated>2024-06-03T19:04:53+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/tool/python-tool</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/tool/python-tool/"><![CDATA[<h2 id="启动脚本">启动脚本</h2>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="tool" /><category term="content" /><summary type="html"><![CDATA[启动脚本]]></summary></entry><entry><title type="html">blender学习: 冰材质</title><link href="https://roshameow.github.io//personal_homepage/docs/blender/blender-learning13/" rel="alternate" type="text/html" title="blender学习: 冰材质" /><published>2024-05-27T00:00:00+00:00</published><updated>2024-05-28T20:46:36+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/blender/blender-learning13</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/blender/blender-learning13/"><![CDATA[<p>在IOR=1.31的透明材质基础上, 添加表面的凹凸和内部的裂痕, 气泡</p>

<h2 id="制作冰材质">制作冰材质:</h2>

<h3 id="用volume-shader">用volume shader</h3>

<p>参考<a href="https://www.youtube.com/watch?v=EUvNwscez-w">这个教学</a></p>

<ol>
  <li>用Cycles渲染器, 打开Render-&gt;<a href="https://docs.blender.org/manual/en/latest/render/cycles/render_settings/film.html">Film-&gt;Transparent-&gt; Transparent Glass</a>
    <ul>
      <li>但是没有用到composition所以开不开无所谓吧?</li>
    </ul>
  </li>
  <li><strong>表面增加凹凸</strong>: 用Bump节点
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240527221548.png" alt="Pasted image 20240527221548.png" width="100" /></li>
      <li>用<a href="https://docs.blender.org/manual/en/4.1/render/shader_nodes/vector/bump.html">Bump</a> 更改normal的方向: 根据输入的局部高度差
        <ul>
          <li>用noise texture生成纹理, 应用到bump的高度</li>
        </ul>
      </li>
      <li>用相同的noise texture生成纹理, 应用到roughness
        <ul>
          <li>目的是让凸出的地方更粗糙? 感觉和实际不太相符</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>在内部添加crack</strong>: 用<a href="https://docs.blender.org/manual/en/latest/render/shader_nodes/textures/voronoi.html">Voronoi Texture</a> 复合Noise Texture的扭曲
    <ul>
      <li></li>
      <li>texture color: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240528093833.png" alt="Pasted image 20240528093833.png" width="100" />  添加到volume后: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240528102634.png" alt="Pasted image 20240528102634.png" width="100" /></li>
      <li>Voronoi Texture由<a href="https://en.wikipedia.org/wiki/Worley_noise">Worley noise</a> 生成
        <ul>
          <li>选择Distance to Edge: 生成distance map</li>
        </ul>
      </li>
      <li>用<a href="https://docs.krita.org/en/reference_manual/blending_modes/lighten.html#bm-linear-light">Linear Light(线性光)</a> 的方式混合: 和add差不多, 但是会对可能saturated的值特殊处理</li>
    </ul>
  </li>
  <li><strong>在内部添加一些雾气</strong>: 用noise texture生成</li>
</ol>

<ul>
  <li>结果: 没太复刻出冰的质感, 还是更像玻璃
    <ul>
      <li><img src="/personal_homepage/docs/attachment/ice_glass_cycle.png" alt="ice_glass_cycle.png" width="480" /></li>
    </ul>
  </li>
</ul>

<h3 id="用粒子系统">用粒子系统</h3>

<p>参考<a href="https://www.bilibili.com/video/BV1i5411e7VZ/">这个教学</a></p>

<h2 id="实物参考">实物参考</h2>

<iframe src="//player.bilibili.com/player.html?isOutside=true&amp;aid=422168352&amp;bvid=BV1a3411477N&amp;cid=458238306&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>

<ul>
  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240527221116.png" alt="Pasted image 20240527221116.png" width="480" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240527221224.png" alt="Pasted image 20240527221224.png" width="320" /></li>
  <li>冻的漂亮的冰里面本来就不应该有那些crack和气泡嘛</li>
</ul>

<h2 id="blender用法">blender用法</h2>

<ul>
  <li>displacement和noise texture+bump的凹凸效果区别: displacement会确实更改mesh上点的位置, bump不会, bump只是改变表面法线方向来模拟.</li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="blender" /><category term="content" /><category term="shader" /><summary type="html"><![CDATA[在IOR=1.31的透明材质基础上, 添加表面的凹凸和内部的裂痕, 气泡]]></summary></entry><entry><title type="html">阿那亚戏剧节的海报制作</title><link href="https://roshameow.github.io//personal_homepage/docs/design/poster1/" rel="alternate" type="text/html" title="阿那亚戏剧节的海报制作" /><published>2024-05-24T00:00:00+00:00</published><updated>2024-05-27T19:08:11+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/design/poster1</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/design/poster1/"><![CDATA[<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240524215103.png" alt="Pasted image 20240524215103.png" width="300" /></p>

<ul>
  <li>想法:
    <ul>
      <li>想着 🙌没有人👐比我👌更懂☝伽利略 选了这个主题,</li>
      <li>虽然知道戏剧是改编自《伽利略传》, 讲的是伽利略和教廷之间的比较肮脏?的拉扯.</li>
      <li>我希望海报呈现的是他的动机: 希望世界上所有事情都和谐漂亮的执着和品味(我个人理解).</li>
      <li>所以希望海报是抽象的, 现代的, 干净的
        <ul>
          <li>因此 pass掉了非常具象的指代人身份的元素, 比如伽利略头像啊, ❗️没有语境的数学公式啊. 选了伽利略至今仍有影响的工作, 密度天平和潮汐现象</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="制作">制作</h2>

<ul>
  <li>背景
    <ul>
      <li>画了草图后用stable-diffusion的ipadapter做风格转换</li>
    </ul>
  </li>
  <li>前景</li>
</ul>

<h2 id="素材">素材</h2>

<p>[1] https://www.pinterest.com/pin/58546863899073827/  背景风格</p>

<p>[2] https://www.pinterest.com/pin/363102788722082645/ 前景风格</p>

<h2 id="后续">后续</h2>

<p>发了之后完全没有流量, 而且我也看不出其他作品的好坏和点赞的关系, 看来我吃不上这碗饭😮‍💨</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="design" /><category term="content" /><category term="photoshop" /><category term="stable-diffusion" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">FFT计算</title><link href="https://roshameow.github.io//personal_homepage/docs/algorithm/fft/" rel="alternate" type="text/html" title="FFT计算" /><published>2024-05-19T00:00:00+00:00</published><updated>2024-05-20T21:02:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/algorithm/fft</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/algorithm/fft/"><![CDATA[<ul>
  <li>fourier Series 定义:
    <ul>
      <li>$F(f)(u)=\int_{-\infty}^{\infty} f(x)e^{-2\pi i x u} dx$</li>
      <li>2维：$G(p,q)=F(g(x,y)) = \int\int^\infty_\infty g(x,y)e^{-i2\pi(px+qy)}dxdy$</li>
    </ul>
  </li>
  <li>离散形式: 信号$x$ 的FFT 信号$X$
    <ul>
      <li>$X_k=\sum_{m=0}^{N-1}x_m\cdot e^{-i\cdot 2\pi km/N}=\sum_{m=0}^{N-1}x_m\cdot TW(N,k)^m$
        <ul>
          <li>$N$ 是信号长度</li>
          <li>$TW(N,k) = e^{-i*2k\pi/N}$ 是<a href="https://en.wikipedia.org/wiki/Twiddle_factor#:~:text=A%20twiddle%20factor%2C%20in%20fast,papers%20of%20the%20FFT%20literature.">FFT 的twiddle factor(旋转因子)</a>
            <ul>
              <li>$TW(N,k)=\cos(-2k\pi/N)+i\cdot \sin(-2k\pi/N)=TW_r(N,k)+i\cdot TW_i(N,k)$</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="butterfly-diagram">butterfly diagram</h3>

<p>利用fft的对称性和周期性</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="algorithm" /><category term="content" /><summary type="html"><![CDATA[fourier Series 定义: $F(f)(u)=\int_{-\infty}^{\infty} f(x)e^{-2\pi i x u} dx$ 2维：$G(p,q)=F(g(x,y)) = \int\int^\infty_\infty g(x,y)e^{-i2\pi(px+qy)}dxdy$ 离散形式: 信号$x$ 的FFT 信号$X$ $X_k=\sum_{m=0}^{N-1}x_m\cdot e^{-i\cdot 2\pi km/N}=\sum_{m=0}^{N-1}x_m\cdot TW(N,k)^m$ $N$ 是信号长度 $TW(N,k) = e^{-i*2k\pi/N}$ 是FFT 的twiddle factor(旋转因子) $TW(N,k)=\cos(-2k\pi/N)+i\cdot \sin(-2k\pi/N)=TW_r(N,k)+i\cdot TW_i(N,k)$]]></summary></entry><entry><title type="html">劳动仲裁流程和资料整理</title><link href="https://roshameow.github.io//personal_homepage/docs/affair/labor-disputes-arbitration/" rel="alternate" type="text/html" title="劳动仲裁流程和资料整理" /><published>2024-05-15T00:00:00+00:00</published><updated>2024-05-21T18:45:39+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/affair/labor-disputes-arbitration</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/affair/labor-disputes-arbitration/"><![CDATA[<h2 id="材料">材料</h2>

<ul>
  <li>信息:
    <ul>
      <li>身份证复印件</li>
      <li>公司注册信息: 在<a href="https://shiming.gsxt.gov.cn/">国家企业信用信息公示系统</a> 查找公司信息并打印</li>
    </ul>
  </li>
  <li>证据清单
    <ul>
      <li>社保缴费记录:  <a href="https://zwdtuser.sh.gov.cn/uc/login/login.jsp?redirect_uri=&amp;type=">一网通办</a> 登陆打印 参保人员城镇职工基本养老保险缴费情况</li>
      <li>银行流水: 在银行app里就可以打印</li>
      <li>劳动合同</li>
      <li>在企业微信里: 企业微信里的内容很难作为证据, 1. 都是聊天格式, 自己重新整理是没有法律效力的, 2. 而且企业微信被人事踢出后backup也没法恢复
        <ul>
          <li>工资条</li>
          <li>聊天记录</li>
          <li>打卡记录: 企业微信可以导出2个月的, 很麻烦</li>
          <li>工时统计表: 没用到, 没研究怎么导出</li>
          <li>周报邮件: 没用到</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>申请书
    <ul>
      <li>申请人信息: (姓名、性别、出生日期、身份证号码、住址、联系方式）</li>
      <li>被申请人信息: (单位名称、统一社会信用代码、法定代表人、单位地址、联系方式）</li>
      <li>仲裁请求(需要计算赔偿)
        <ol>
          <li>裁决劳动关系</li>
          <li>请求被申请人支付拖欠的工资和年终奖 x元（截至申请仲裁之日）；</li>
          <li>请求支付被动解除劳动合同的经济补偿金x元。</li>
        </ol>
      </li>
      <li>事实与理由
        <ul>
          <li>按照模版写</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>地址送达确认书</li>
</ul>

<p>我遇到的情况: 1. 续签劳动合同没给是按照签订了劳动合同处理, 不能索要赔偿, 用社保记录证明劳动关系即可 2. 除了社保记录和银行流水, 其它跟公司的文件都很难作为证据. 但是因为我有收集, 仲裁委的工作人员和调解员迅速的了解了我的情况和薪资结构, 所以应该还算有点用的 3. 在职的情况没法请求经济补偿金, 要先给公司发被动解除劳动合同的通知书 4. 我同意了减少补偿金离职, 所以也就没经历后面的流程了. 工作人员对我的材料给了很具体的指导, 总共一个小时就结束了.</p>

<h2 id="法律依据">法律依据</h2>

<p><a href="https://www.gov.cn/flfg/2007-06/29/content_669394.htm">劳动合同法</a></p>

<p>跟被动离职有关的是: 第38条, 46条, 47条</p>

<h2 id="相关的机构">相关的机构</h2>

<ul>
  <li>xx区劳动仲裁委</li>
  <li>劳动监察大队: 投诉公司欠薪, 处理结果一般比较慢</li>
  <li>地方调解(xx区xx地社区事务受理服务中心): 调解员可以代为联系公司, 同意牺牲一部分补偿金就可以快速结束流程</li>
  <li>工会: 提供法律援助</li>
</ul>

<h2 id="身在其中的感触">身在其中的感触</h2>

<p>公司是15号发工资, 因为公司在工资发放上已经多次食言, 已读不回, 本来已经决定这是最后一次机会, 15号到了一定要去仲裁, 在这之前就应该写好材料.</p>

<p>我对公司产生过侥幸心理: 中间大概10多号的时候, 同事跟我说15号可能会发工资. 虽然我当时有理有据的反驳了, 内心还是松懈了下来, 希望15号可以正常发工资不用去仲裁. 然后15号果然如我本来所料想继续拖欠, 结果还是要临时整理资料.</p>

<p>好在, 资料并不复杂, 只要一鼓作气就可以摆脱和现在公司这种不健康的关系.</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="affair" /><category term="content" /><summary type="html"><![CDATA[材料]]></summary></entry><entry><title type="html">blender学习: 用布料系统做膨胀效果</title><link href="https://roshameow.github.io//personal_homepage/docs/blender/blender-learning12/" rel="alternate" type="text/html" title="blender学习: 用布料系统做膨胀效果" /><published>2024-05-13T00:00:00+00:00</published><updated>2024-05-16T19:48:22+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/blender/blender-learning12</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/blender/blender-learning12/"><![CDATA[<p>参考<a href="https://www.bilibili.com/video/BV13C41177Ze">这个教学</a></p>

<h3 id="建模">建模</h3>

<p>球和boundary两部分</p>

<ul>
  <li>新建一个Ico Sphere(棱角球)</li>
  <li>在Edit Mode选中一些顶点作为boundary, 设为顶点组</li>
  <li>给棱角球做一个表面细分并应用</li>
  <li>在Edit Mode里用Bevel把boundary拉出一点宽度, 把顶点组改为新的boundary
    <ul>
      <li>要先应用表面细分再Bevel? 不然boundary的mesh会变得很复杂</li>
    </ul>
  </li>
  <li>在原位把boundary复制一份(Shift+D), 和球分离(P), 稍微拉大一点(S)</li>
  <li>给boundary添加一个2的表面细分</li>
  <li>设置shade smooth</li>
</ul>

<h3 id="制作膨胀效果">制作膨胀效果:</h3>

<ul>
  <li>选择Physics-&gt;Cloth
    <ul>
      <li>Pressure = 25</li>
      <li><a href="https://docs.blender.org/manual/en/latest/physics/cloth/settings/shape.html">Shape</a>选择boundary的顶点组
        <ul>
          <li>Shrinking Factor = -0.3 负数表示要cloth膨胀</li>
        </ul>
      </li>
      <li>Field Weights-&gt;Gravity=0</li>
    </ul>
  </li>
  <li>结果:
    <ul>
      <li><img src="/personal_homepage/docs/attachment/inhale.mp4" alt="inhale.mp4" width="400" /></li>
    </ul>
  </li>
</ul>

<h3 id="用到的blender的一些快捷键">用到的blender的一些快捷键</h3>

<ul>
  <li>Command+A(应用modifier)</li>
  <li>Shift+D(<a href="https://docs.blender.org/manual/en/2.82/scene_layout/object/editing/duplication.html">Duplication</a>): 复制物体
    <ul>
      <li>RMB(右键): 保留在原来的位置</li>
    </ul>
  </li>
  <li>P(<a href="https://docs.blender.org/manual/en/latest/modeling/meshes/editing/mesh/separate.html">分离</a>)
    <ul>
      <li>把选中的顶点建一个新的object</li>
    </ul>
  </li>
  <li>Command+P(<a href="https://docs.blender.org/manual/en/latest/scene_layout/object/editing/parent.html">Parent</a>)
    <ul>
      <li>把后选中的object设置为先选中的object的parent </li>
    </ul>
  </li>
  <li>Ctrl+B( <a href="https://docs.blender.org/manual/en/2.81/modeling/meshes/editing/subdividing/bevel.html#:~:text=The%20Bevel%20tool%20smooths%20the,above%20to%20run%20the%20tool.">Bevel</a>, 拉伸, 倒角): 把一个edge变成多个edge, 使物体边缘光滑
    <ul>
      <li><img src="https://docs.blender.org/manual/zh-hans/2.81/_images/modeling_meshes_editing_subdividing_bevel_example-4.png" alt="drawing" width="150" /></li>
      <li>按Shift微调: 移动的幅度降1k倍</li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="blender" /><category term="content" /><category term="physics" /><category term="shortcut" /><summary type="html"><![CDATA[参考这个教学]]></summary></entry><entry><title type="html">给网页添加 logo</title><link href="https://roshameow.github.io//personal_homepage/docs/photo/jekyll-add-logo/" rel="alternate" type="text/html" title="给网页添加 logo" /><published>2024-05-09T00:00:00+00:00</published><updated>2024-05-10T20:36:50+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/photo/jekyll-add-logo</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/photo/jekyll-add-logo/"><![CDATA[<p><img src="/personal_homepage/docs/attachment/logo.svg" alt="logo.svg" width="200" /></p>

<h2 id="用照片制作svg">用照片制作svg</h2>

<p>这次只描了轮廓</p>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240510121915.png" alt="Pasted image 20240510121915.png" width="200" /></p>

<ul>
  <li>用钢笔工具和选择工具画路径:
    <ul>
      <li>在最凸，最凹的地方加锚点</li>
      <li>添加锚点时拉拽得到切线</li>
      <li>按command 单独调整锚点和切线的端点</li>
      <li>option调整切线</li>
      <li>用直接选择工具(白色箭头)调整锚点位置</li>
      <li>用路径选择工具(黑色箭头)复制路径</li>
      <li>用颜色填充功能实时查看路径闭包</li>
    </ul>
  </li>
  <li>导出:
    <ul>
      <li>选中填充图层复制svg</li>
    </ul>
  </li>
</ul>

<h2 id="设置网页的favicon">设置网页的favicon</h2>

<ul>
  <li>在对应html设置icon:  <code class="language-plaintext highlighter-rouge">&lt;link rel="shortcut icon" type="image/x-icon" href="/personal_homepage/docs/images/logo.ico"&gt;</code>
    <ul>
      <li>我的路径是<code class="language-plaintext highlighter-rouge">head.html-&gt;head-custom.html</code></li>
    </ul>
  </li>
</ul>

<h2 id="资源">资源</h2>

<p>[1]  <a href="https://www.bilibili.com/video/BV1pP4y1R7r6/">https://www.bilibili.com/video/BV1pP4y1R7r6</a> 钢笔工具使用</p>

<p>[2]  <a href="https://www.taoxuemei.com/chuli/ps/754.html">https://www.taoxuemei.com/chuli/ps/754.html</a> 钢笔工具画的形状-&gt;svg</p>

<p>[3]  <a href="https://zhuanlan.zhihu.com/p/446194623">https://zhuanlan.zhihu.com/p/446194623</a> 路径转形状</p>

<p>[4]  https://stackoverflow.com/questions/30551501/unable-to-set-favicon-using-jekyll-and-github-pages  关于icon路径的讨论</p>

<p>[5]  https://convertio.co/download/9dceab468ba01473f3d49fc765b6f73f983c7f/ svg转ico</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="photo" /><category term="content" /><category term="jekyll" /><category term="photoshop" /><category term="logo" /><summary type="html"><![CDATA[]]></summary></entry></feed>