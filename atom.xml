<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://roshameow.github.io//personal_homepage/atom.xml" rel="self" type="application/atom+xml" /><link href="https://roshameow.github.io//personal_homepage/" rel="alternate" type="text/html" /><updated>2024-08-31T09:26:45+00:00</updated><id>https://roshameow.github.io//personal_homepage/atom.xml</id><title type="html">Liu, Wen’s Home Page</title><subtitle>Work, Experiments and Ideas.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><entry><title type="html">掼蛋规则</title><link href="https://roshameow.github.io//personal_homepage/docs/game/card/" rel="alternate" type="text/html" title="掼蛋规则" /><published>2024-08-26T00:00:00+00:00</published><updated>2024-08-29T19:09:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/game/card</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/game/card/"><![CDATA[<ul>
  <li>升级规则</li>
  <li>特殊花色
    <ul>
      <li>普通</li>
      <li>炸弹</li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="game" /><category term="content" /><summary type="html"><![CDATA[升级规则 特殊花色 普通 炸弹]]></summary></entry><entry><title type="html">搬家相关准备</title><link href="https://roshameow.github.io//personal_homepage/docs/affair/cat-airline/" rel="alternate" type="text/html" title="搬家相关准备" /><published>2024-08-20T00:00:00+00:00</published><updated>2024-08-29T18:50:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/affair/cat-airline</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/affair/cat-airline/"><![CDATA[<h3 id="猫的托运">猫的托运</h3>

<p>目前只有海南航空可以, 不过没有到家直飞的航班
只能选南航有氧舱, 小程序买票</p>

<h3 id="电脑">电脑</h3>

<h3 id="大件">大件</h3>

<h3 id="零散物件">零散物件</h3>

<p>各式调料</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="affair" /><category term="content" /><summary type="html"><![CDATA[猫的托运]]></summary></entry><entry><title type="html">conformal geometry学习 (九 ) – atlas</title><link href="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry9/" rel="alternate" type="text/html" title="conformal geometry学习 (九 ) – atlas" /><published>2024-08-18T00:00:00+00:00</published><updated>2024-08-18T17:40:07+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry9</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry9/"><![CDATA[<table>
  <thead>
    <tr>
      <th>manifold</th>
      <th>$U_\alpha$ homeomorphism to $\mathbb R^n$,</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>smooth manifold<br />(differential manifold)</td>
      <td>transition map $\phi_{\alpha\beta}\in C^\infty(\mathbb R^n)$ smooth</td>
    </tr>
    <tr>
      <td>Riemann manifold</td>
      <td>transition map 是holomorphic(conformal)</td>
    </tr>
  </tbody>
</table>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="content" /><summary type="html"><![CDATA[manifold $U_\alpha$ homeomorphism to $\mathbb R^n$, smooth manifold(differential manifold) transition map $\phi_{\alpha\beta}\in C^\infty(\mathbb R^n)$ smooth Riemann manifold transition map 是holomorphic(conformal)]]></summary></entry><entry><title type="html">猫罐头调查</title><link href="https://roshameow.github.io//personal_homepage/docs/affair/cat-can/" rel="alternate" type="text/html" title="猫罐头调查" /><published>2024-08-16T00:00:00+00:00</published><updated>2024-08-18T17:39:46+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/affair/cat-can</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/affair/cat-can/"><![CDATA[<p>金交的罐头上有很多黑色的地方</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="affair" /><category term="content" /><summary type="html"><![CDATA[金交的罐头上有很多黑色的地方]]></summary></entry><entry><title type="html">柳树怎么表现</title><link href="https://roshameow.github.io//personal_homepage/docs/photo/willow-art/" rel="alternate" type="text/html" title="柳树怎么表现" /><published>2024-08-15T00:00:00+00:00</published><updated>2024-08-16T16:36:37+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/photo/willow-art</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/photo/willow-art/"><![CDATA[<p>在上海的春天到处去赏花, 感觉没有一种花有柳树的视觉冲击力. 嫩黄的叶子让我有生命的实感, 看到叶子泛白干燥的时候, 我知道春天过去了.</p>

<p>但是柳树很难在照片上表现</p>

<p>全景: <a href="https://p8.itc.cn/q_70/images03/20200609/8bcdbf54c9ba4b24be90fbc5e3503e0e.jpeg"><img src="https://p8.itc.cn/q_70/images03/20200609/8bcdbf54c9ba4b24be90fbc5e3503e0e.jpeg" width="178" /></a> 正视像怪物一样: <a href="https://www.pinterest.com/pin/970877632168572508/"><img src="https://i.pinimg.com/564x/55/78/a5/5578a516d74309456c1f4c46dc945f54.jpg" width="178" /></a>  局部又很呆板: <a href="https://pin.it/1Qjh7THkh"><img src="https://i.pinimg.com/564x/f3/94/60/f394605380c365b66f8ff7199baeb4bf.jpg" width="178" /></a>  侧面视角: <a href="https://pin.it/2ofEP97QO"><img src="https://i.pinimg.com/564x/74/01/37/74013711a66205577cf58a8af5afcad9.jpg" width="178" /></a></p>

<ul>
  <li>人眼看柳树很有层次感, 枝干和叶子都很清晰 Vs 照片上互相遮挡没有主次</li>
</ul>

<p>国画的柳树:</p>

<p>傅抱石: <a href="https://p8.itc.cn/q_70/images03/20200609/108e1ee119a0493f8d13779b80a63daa.jpeg"><img src="https://p8.itc.cn/q_70/images03/20200609/108e1ee119a0493f8d13779b80a63daa.jpeg" width="178" /></a> 吴冠中: <a href="https://p7.itc.cn/q_70/images03/20200609/b28f3949065b494eb5f0abbc5f942923.jpeg"><img src="https://p7.itc.cn/q_70/images03/20200609/b28f3949065b494eb5f0abbc5f942923.jpeg" width="178" /></a> 谢稚柳: <a href="https://p5.itc.cn/q_70/images03/20200609/6d93102f78854222bdff0249e87a1a47.jpeg"><img src="https://p5.itc.cn/q_70/images03/20200609/6d93102f78854222bdff0249e87a1a47.jpeg" width="178" /></a> 郑午昌: <a href="https://p2.itc.cn/q_70/images03/20200609/26e10603f58f4e7f880dec68d06753ef.jpeg"><img src="https://p2.itc.cn/q_70/images03/20200609/26e10603f58f4e7f880dec68d06753ef.jpeg" width="178" /></a> 乔木: <a href="https://p6.itc.cn/q_70/images03/20200609/f6d4c29cce074a4587a96426dff8ee14.jpeg"><img src="https://p6.itc.cn/q_70/images03/20200609/f6d4c29cce074a4587a96426dff8ee14.jpeg" width="178" /></a> 黄幻吾: <a href="https://p7.itc.cn/q_70/images03/20200609/a5c33c92cd264e10833ff21d8dde6d9c.jpeg "><img src="https://p7.itc.cn/q_70/images03/20200609/a5c33c92cd264e10833ff21d8dde6d9c.jpeg " width="178" /></a></p>

<p>日本画的柳树:</p>

<p><a href="https://www.pinterest.com/pin/564216659574040541/"><img src="https://i.pinimg.com/564x/90/a1/e6/90a1e67f2471518700e59e32e2699773.jpg" width="400" /></a></p>

<ul>
  <li>有风吹的动态</li>
  <li>省略了枝干看着像紫藤花了</li>
</ul>

<p>https://www.sohu.com/a/400613164_99921257</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="photo" /><category term="content" /><summary type="html"><![CDATA[在上海的春天到处去赏花, 感觉没有一种花有柳树的视觉冲击力. 嫩黄的叶子让我有生命的实感, 看到叶子泛白干燥的时候, 我知道春天过去了.]]></summary></entry><entry><title type="html">conformal geometry学习 (八 ) – Persistent homology</title><link href="https://roshameow.github.io//personal_homepage/docs/math/algorithm/conformal-geometry8/" rel="alternate" type="text/html" title="conformal geometry学习 (八 ) – Persistent homology" /><published>2024-08-07T00:00:00+00:00</published><updated>2024-08-30T15:31:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/algorithm/conformal-geometry8</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/algorithm/conformal-geometry8/"><![CDATA[<p>一种计算 $H_k(\Sigma,\mathbb Z_2)$ 的方法, 计算filtration $\mathbb K$ 中homology的变化</p>

<ul>
  <li>Persistent Homology $H_k^{l,p}=H_k(\mathbb K_{l+p},\mathbb Z_2)=\frac{Z^l_k}{B_{k}^{l+p}\cap Z^l_k}$
    <ul>
      <li>k-th homology: 和$\mathbb K$ 中 (k-1)-simplex, k-simplex, (k+1)-simplex部分有关</li>
      <li>$\mathbb K$ 中到第l 个simplex cycle和到第(l+p) 个 simplex的image
        <ul>
          <li>一般到第l 个是 k-simplex, l 到 (l+p) 个是(k+1)-simplex</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="filtration定义">filtration定义</h2>

<ul>
  <li>filtration: $\emptyset=\mathbb K_{-1}\subset \mathbb K_0\subset \mathbb K_1\subset\cdots\subset \mathbb K_n=\mathbb K$ 是simplicial complex的序列
    <ul>
      <li>每个$\mathbb K_{i}$ 在$\mathbb K_{i-1}$ 基础上添加一个simplex $\sigma_i$</li>
      <li>单调性(monotonous): 添加$\sigma_i$ 的顺序是包含关系, 每个$\sigma$ 的face都在它前面</li>
    </ul>
  </li>
  <li>induced p阶homology group 的map序列: $0=H_p(\mathbb K_{-1})\rightarrow H_p(\mathbb K_0)\rightarrow \cdots \rightarrow H_p(\mathbb K_n)=H_p(\mathbb K)$</li>
</ul>

<h3 id="点云---čech-complex-filtration">点云 -&gt; Čech Complex filtration</h3>

<p><img src="/personal_homepage/docs/attachment/Persistent%20homology%20classification%20algorithm.jpg" alt="Persistent homology classification algorithm.jpg" width="500" /></p>
<ul>
  <li><a href="https://en.wikipedia.org/wiki/Čech_complex">Čech complex</a>  $\mathcal C_\epsilon$ : 把点云中 $\epsilon/2$ 球相交的点相连得到的simplicial complex
    <ul>
      <li><a href="https://en.wikipedia.org/wiki/Vietoris–Rips_complex">Vietoris-Rips Complex</a> $\mathcal R_\epsilon$ : 把点云中距离&lt; $\epsilon$ 的点相连得到的simplicial complex($\mathbb R^n$ 中两种定义等价)</li>
    </ul>
  </li>
</ul>

<h2 id="filtration同调分解">filtration同调分解</h2>

<p><strong>新添加的simplex分为两种: 1. 构成cycle的 2. 不构成cycle的</strong></p>

<ul>
  <li><strong>positive(generator, creator)</strong>: k-simplex $\sigma_i\subset$ 一个 k-cycle $c_i$
    <ul>
      <li>相当于, $\sigma_i$ 是<strong>构成 k-cycle $c_i$的最后一个边</strong>(youngest)</li>
      <li>添加到$\sigma_i$ 的时候还没有 (k+1)-simplex 呢, 所以 $c_i$ 是non-exact的</li>
      <li>可以让 $c_i$ 只包含$\sigma_i$ 一个positive k-simplex (lemma)
        <ul>
          <li>归纳法证明: 如果包含其他 positive  $\sigma_j$ 出现在$\sigma_i$ 之前, 把当时对应的cycle $c_j$ 只包含$\sigma_j$ 一个positive, 让$c_i\texttt{ += }c_i+c_j$</li>
        </ul>
      </li>
      <li>$[c_i]$ 是构成$H_k(\mathbb K_i)$ 的basis</li>
    </ul>
  </li>
  <li><strong>negative(killer)</strong>:
    <ul>
      <li>killer 导致前面相邻的(k-1)-simplex 变成boundary(kill行为)</li>
      <li>和其<strong>kill掉的最近(youngest)的positive (k-1)-simplex组成一对pair</strong>
        <ul>
          <li>kill掉的 (k-1)-simplex 不一定和killer直接相邻</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><strong>youngest positive simplex  在同调等价类中传递</strong></p>

<ul>
  <li>Collision lemma: 一对generator,killer pair $(\sigma_i,\sigma_j)$ , 如果$e$ 是Collision Free Cycle, 并且$[e]=[\partial \sigma_j]$ (和$\partial \sigma_j$ 同调等价) -&gt; $e$ 的youngest positive simplex也是 $\sigma_i$ .
    <ul>
      <li>Collision Free Cycle: 里面的最近的generator还没被kill</li>
      <li>$e$ 的youngest positive simplex如果不在$\partial \sigma_j$ 中, 就在另一个更早出现的$\partial \sigma$ 里, 和Collision Free 矛盾. (证明没懂)</li>
    </ul>
  </li>
</ul>

<p><strong>同调分解</strong></p>

<ul>
  <li>$rk(H_k(\mathbb K,\mathbb Z_2))=pos_k-neg_{k+1}$
    <ul>
      <li>每个新出现的<strong>positive simplex对应linearly indepdent cycle</strong>
        <ul>
          <li>$\mathbb Z_2$-module里, linearly depdent的意思是 $c=\sum_i c_i$</li>
          <li>就是说 $c$ 的youngest simplex $\sigma$ 肯定在某个之前的$c_i$ 里, 但是$\sigma$ 是刚出来的, 所以不可能</li>
        </ul>
      </li>
      <li>每个新添加的<strong>negative (k+1)-simplex -&gt; 对应killed k-positive simplex -&gt; 对应kill linearly indepdent cycle</strong></li>
    </ul>
  </li>
  <li>$num_k = pos_k + neg_k = rk(Z_k) + rk(B_k)$
    <ul>
      <li>用incidence matrix $M$ 表示(k-1)-simplex $\times$ k-simplex 的相连关系
        <ul>
          <li>$M$ 的列数 $num_k$ 为 $\mathbb K$ 中添加的 k-simplex的个数: 不是positive, 就是negative</li>
          <li>每个新出现的positive simplex对应linearly indepdent cycle
            <ul>
              <li>经过column operation会变成0</li>
              <li>$rkM-rkB_p=rk Z_p=pos_k$</li>
            </ul>
          </li>
          <li>每个新添加的negative simplex对应killed (k-1)-simplex: pair
            <ul>
              <li>$rk M = rk B_p=neg_k$</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>计算同调群需要计算两个incidence matrix : (k-1)-simplex $\times$ k-simplex 和 k-simplex $\times$ (k+1)-simplex, 以得到$rk Z_k$ 和$rk B_{k+1}$</li>
    </ul>
  </li>
</ul>

<p><strong>记号</strong></p>

<ul>
  <li>$\Gamma(d)$ : 被killer $d$ kill掉的generator</li>
  <li>persistence life: $j-i-1$ , 从simplex $\sigma_i$  generated 到被 $\sigma_j$ kill的时间
    <ul>
      <li>表示了$\sigma_i$ 对应cycle $c_i$ 的拓扑稳定性</li>
    </ul>
  </li>
</ul>

<h2 id="pair-algorithm-计算">Pair Algorithm 计算</h2>

<p>计算每个simplex的生命周期</p>

<ul>
  <li>输入: filtration 当前的simplex $\sigma$</li>
  <li>
    <p>输出: 判断$\sigma$ 是generator还是killer, 如果是killer, 记录它的pair</p>
  </li>
  <li>plain(Algorithm1):
    <ul>
      <li>记录cycle $c=\partial \sigma=\sum_i \tau_i$
        <ul>
          <li>检查里面最近的(youngest) positive $\tau$ ((k-1)-simplex)
            <ul>
              <li>如果 $\tau$ 还没被kill过, $(\tau,\sigma)$ 组成pair, 记录$\tau$ 的killer为$\sigma$</li>
              <li>如果$\tau$ 已经被其他killer kill过
                <ul>
                  <li>不停往前追踪, 用$\tau$ 对应的killer(的boundary cycle)更新 $c$ 的表达
                    <ul>
                      <li>更新过的$c$ 的simplex全比 $\tau$ older(检查的simplex越来越往前-&gt; 算法肯定能停止)</li>
                      <li>如图, $\partial e_5=v_4+v_0$ , 最新点 $v_4$ 已经被$e_3$ kill, 得到$\partial e_5=v_3+v_0$, 一直往前追踪, 得到$\partial e_5=v_0+v_0=0$</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>如果追踪到最后结果为0 -&gt; $\sigma$ 是generator</li>
    </ul>
  </li>
  <li>优化1(Algorithm2, 用空间换时间):
    <ul>
      <li>在generator被kill时, 同时记录当时对应的boundary cycle $\Lambda_\tau$
        <ul>
          <li>在pair不相邻时节省计算时间</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>并行计算(代数方法): 步骤数=追踪的最长链路?
    <ul>
      <li>incidence matrix: k-simplex $\times$ (k+1)-simplex 的相连关系
        <ul>
          <li>检查每列值为 1 最后一行 (即对应的youngest simplex)
            <ul>
              <li>如果在之前列出现相同的index, 用前面的列更新后面的列(cycle更新的过程)</li>
            </ul>
          </li>
          <li>直到所有非0的列的最后一行index都不一样
            <ul>
              <li>全是0的列对应generator</li>
              <li>非零的列和最后一行index对应pair</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="pair-graph">pair graph</h2>

<ul>
  <li>下标表示在filtration中的前后关系.</li>
  <li>蓝色表示killer, 红色表示generator, 弧线表示kill关系.</li>
</ul>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240821180208.png" alt="Pasted image 20240821180208.png" width="138" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240822181442.png" alt="Pasted image 20240822181442.png" width="150" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240821175655.png" alt="Pasted image 20240821175655.png" width="300" /></p>
<ul>
  <li>topological annulus(环带, cylinder)</li>
  <li>$H_0$ 的生成元是$v_0$</li>
  <li>$H_1$ 的生成元是$e_2$ (对应cycle $e_0+e_1+e_2$ )</li>
</ul>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240821175958.png" alt="Pasted image 20240821175958.png" width="100" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240822181535.png" alt="Pasted image 20240822181535.png" width="150" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240821175901.png" alt="Pasted image 20240821175901.png" width="300" /></p>

<ul>
  <li>topological torus</li>
  <li>$H_0$ 的生成元为 $v_0$</li>
  <li>$H_1$ 的生成元为$e_3$( 对应cycle $e_0+e_1+e_2+e_3$) , $e_{20}$ (对应cycle $e_{12}+e_{16}+e_{20}$)</li>
</ul>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240822194920.png" alt="Pasted image 20240822194920.png" width="150" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240822194939.png" alt="Pasted image 20240822194939.png" width="200" /></p>

<ul>
  <li>topological quadrilateral(四边形)</li>
  <li>$H_0$ 的生成元为$v_0$ , $H_1$ 的生成元为$e_{11}$</li>
</ul>

<h3 id="应用">应用</h3>

<ul>
  <li>计算oriented surface的homology: $H_1(S)\cong H_1(I)\oplus H_1(O)$ (<a href="https://en.wikipedia.org/wiki/Mayer–Vietoris_sequence">Mayer–Vietoris_sequence</a>)
    <ul>
      <li>用persistent homology计算$H_1(I)$ 和$H_1(O)$ 的生成元</li>
      <li>$H_1(S,\mathbb Z_2)$ 和$H_1(S,\mathbb Z)$ 有相同的生成元?</li>
    </ul>
  </li>
  <li>
    <p>计算三流型的homology: $H_1(M,\mathbb Z_2)\cong H_2(M,\partial M,\mathbb Z_2)$ (Lefschetz duality)</p>
  </li>
  <li>persistent diagram: 也可以只取k-simplex的部分
    <ul>
      <li>simplex 添加时间 x simplex death(被kill) 时间 $(i,j)$</li>
      <li>simplex 添加时间 x simplex 的persistence life $(i,j-i-1)$</li>
    </ul>
  </li>
  <li>persistent surface:
    <ul>
      <li>persistent diagram连续化: 把persistent diagram上的点 $(i,j-i-1)$ 用在位置 $(i,j-i-1)$ , 方差为$\sigma$ 的高斯分布替代</li>
    </ul>
  </li>
  <li>
    <p>persistent image: persistent surface像素化得到persistent image</p>
  </li>
  <li>DNA序列的linked twist map形成一个二维的点集. 用persistent image提取特征再做分类.</li>
  <li>解Kuramoto-Sivashinsky (KS) PDE
    <ul>
      <li>是二维的heat image</li>
      <li>根据不同的heat threshold(等高线), 构成image的子集的filtration
        <ul>
          <li>把image的像素点看成0-simplex,  相邻像素看成1-simplex, 周围2x2像素看成2-simplex</li>
        </ul>
      </li>
      <li>用filtration生成的persistent image做为特征分类</li>
    </ul>
  </li>
  <li>
    <p>barcode: 横坐标 为距离 $\epsilon$ , 纵坐标为 homology的persistence life</p>
  </li>
  <li>自然图像: 3x3的灰度图patch, 看作9-dim的点云, 形成一个Klein bottle的拓扑</li>
  <li>时间序列的周期性
    <ul>
      <li>每个长为$M$, 间隔为$\tau$ 的sliding window构成一个M维vector, 改变时间t, 得到$\mathbb R^M$ 里的一个点云</li>
      <li>检查这个设置下, persistence diagram中最长的persistence life作为这个周期($M,\tau$ ) 的分数</li>
      <li>分数越高, 说明点云在$\mathbb R^M$ 里(拓扑意义上)越像一个closed loop, 和时间序列本身的周期越匹配</li>
    </ul>
  </li>
</ul>

<p>[1]  Carlsson, Gunnar. “Topological Pattern Recognition for Point Cloud Data.” <em>Acta Numerica</em> 23 (May 2014): 289–368. <a href="https://doi.org/10.1017/S0962492914000051">https://doi.org/10.1017/S0962492914000051</a>.</p>

<p>[2]  Perea, Jose, and John Harer. “<strong>Sliding Windows and Persistence</strong>: An Application of Topological Methods to Signal Analysis.” arXiv, November 25, 2013. <a href="https://doi.org/10.48550/arXiv.1307.6188">https://doi.org/10.48550/arXiv.1307.6188</a>.</p>

<p>[3]  Adams, Henry, Sofya Chepushtanova, Tegan Emerson, Eric Hanson, Michael Kirby, Francis Motta, Rachel Neville, Chris Peterson, Patrick Shipman, and Lori Ziegelmeier. “Persistence Images: A Stable Vector Representation of Persistent Homology.” arXiv, July 11, 2016. <a href="https://doi.org/10.48550/arXiv.1507.06217">https://doi.org/10.48550/arXiv.1507.06217</a>.</p>

<p>[4] https://github.com/ctralie/TDALabs/blob/master/SlidingWindow2-PersistentHomology.ipynb</p>

<p>[5] https://ripser.scikit-tda.org/en/latest/ 计算persistent homology的python封装包</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="algorithm" /><category term="content" /><summary type="html"><![CDATA[一种计算 $H_k(\Sigma,\mathbb Z_2)$ 的方法, 计算filtration $\mathbb K$ 中homology的变化]]></summary></entry><entry><title type="html">conformal geometry学习 (七 ) – Duality, homology relation</title><link href="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry7/" rel="alternate" type="text/html" title="conformal geometry学习 (七 ) – Duality, homology relation" /><published>2024-07-29T00:00:00+00:00</published><updated>2024-08-20T04:11:09+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry7</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry7/"><![CDATA[<h2 id="poincaré-duality"><a href="https://en.wikipedia.org/wiki/Poincaré_duality">Poincaré Duality</a></h2>

<p><a href="https://www.researchgate.net/profile/Clement-Cances/publication/278829092/figure/fig3/AS:667718760022016@1536207966130/Triangular-mesh-T-and-Donald-dual-mesh-M-dual-volumes-vertices-interfaces.png"><img src="https://www.researchgate.net/profile/Clement-Cances/publication/278829092/figure/fig3/AS:667718760022016@1536207966130/Triangular-mesh-T-and-Donald-dual-mesh-M-dual-volumes-vertices-interfaces.png" width="200" /></a></p>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Poincaré_duality">Poincaré Duality</a>: n-dim的manifold $M$, 三角剖分$T$, 和cell decomposition $T^*$ 对偶.
    <ul>
      <li><strong>把每个k-simplex $\sigma$ 映射成(n-k)-cell $\sigma^\ast$</strong>: 对于包含$\sigma$ 的n-simplex $\Delta$,  $\Delta\cap\sigma^*$ 是取$\sigma\subset …\subset \Delta$ 之间的simplex的barycentres(重心点) 的convex hull
        <ul>
          <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240727223859.png" alt="Pasted image 20240727223859.png" width="100" /> 顶点(1-simplex) $\sigma$, 面(2-simplex) $\Delta$ , 灰色部分 $\Delta\cap\sigma^*$ 是顶点$\sigma$,两条边, 面$\Delta$ 的重心点的convex hull</li>
          <li>$\sigma^*$ 只和$\sigma$ 相交, 这个intersection给出了对偶关系</li>
        </ul>
      </li>
      <li><strong>把k-chain $C_k(T)$映射到(n-k)-chain $C_{n-k}(T^*)$</strong> :
        <ul>
          <li>$C_{n-k}(T^\ast)$ 是定义在$T^\ast$ 的多边形cell上的? 这样也可以吗?</li>
        </ul>
      </li>
      <li><strong>把$H_k(M,\mathbb Z)$ 映射到 $H_{n-k}(M,\mathbb Z)$</strong>: $H_k(M,\mathbb Z)\cong H_{n-k}(M,\mathbb Z)$</li>
    </ul>
  </li>
</ul>

<h4 id="例子">例子</h4>

<ul>
  <li>closed oriented 曲面$S=T_1 \texttt{#}T_2 \texttt{#}\cdots  \texttt{#} T_g$, 只有一个连通分支, $H_0(S,\mathbb Z)=H_2(S,\mathbb Z)=\mathbb Z$</li>
  <li>closed oriented 三流型$M$, $H_0(M)=H_3(M)=\mathbb Z$. $H_2(M)=H^1(M)$.</li>
</ul>

<h2 id="lefschetz-duality"><a href="https://en.wikipedia.org/wiki/Lefschetz_duality">Lefschetz Duality</a></h2>

<p>在带边界($\partial M$)的manifold $M$上, Poincaré Duality的推广</p>

<ul>
  <li>相交关系: intersection form: $\omega: H_k(M,\mathbb Z)\times H_{n-k}(M,\partial M,\mathbb Z)\rightarrow \mathbb Z$
    <ul>
      <li>把k-chain(k-submanifold) $[S]$ 和(n-k)-submanifold $[S^\prime]$ 映射到它们的代数相交数(<strong>algebraic intersection number</strong>)
        <ul>
          <li>properly embedding(横截相交): $\partial S^\prime=\partial M\cap S^\prime$</li>
          <li>$S$ 和 $S^\prime$ 的交点是isolated, 在交点x的方向($\pm 1$ )由$T_x S\oplus T_x S^\prime$ 和$T_x M$ 确定, 代数相交数是所有交点相交数相加
            <ul>
              <li>$M$ 是曲面, $S,S^\prime$ 是两条曲线的情况: 切向量的cross product和法向量方向确定</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>$\omega$ 是<a href="https://en.wikipedia.org/wiki/Symplectic_vector_space">symplectic(辛形式)</a> , 即 $\omega$ 是non-degenerate + skew-symmetric(反交换)的
        <ul>
          <li>non-degenerate: 对于任何$\sigma$, $\omega(\sigma, \cdot)\ne 0$</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>相交关系-&gt; 对偶关系: $H^k(M,\mathbb Z)\cong H_{n-k}(M,\partial M, \mathbb Z)$
    <ul>
      <li>$\omega(\cdot,\sigma)\mapsto \sigma$</li>
    </ul>
  </li>
</ul>

<h4 id="例子-1">例子</h4>

<ul>
  <li>如果$\partial M=\emptyset$, Lefschetz Duality退化成Poincaré Duality</li>
  <li>connected, oriented, compact manifold $M$, $H^0(M,\mathbb Z)=H_n(M,\partial M,\mathbb Z)=\mathbb Z$
    <ul>
      <li>$H_n(M,\partial M,\mathbb Z)$ 的元素 $[M]$ 由n-simplex的orientation确定, 叫M的 <a href="https://en.wikipedia.org/wiki/Fundamental_class">fundamental class</a></li>
    </ul>
  </li>
</ul>

<h2 id="一些manifold特征">一些manifold特征</h2>

<ul>
  <li>compact oriented connected n-manifold with (possibly empty) boundary $M$ , $H_k(M,\mathbb Z)\cong F_k\oplus T_k$
    <ul>
      <li>$F_k$ 是自由生成群, $T_k$ 是torsion(挠, 阶数有限的部分)</li>
    </ul>
  </li>
  <li>k-th <a href="https://en.wikipedia.org/wiki/Betti_number">Betti number</a>:  $b_k(M)=rk(H_k(M,\mathbb Z))$</li>
  <li><a href="https://en.wikipedia.org/wiki/Euler_characteristic">Euler characteristic</a> (sheaf定义):  $\chi(M)=\sum_{i=0}^n (-1)^ib_i$
    <ul>
      <li>如果$M$ 是compact三流型, $\chi(M)=\frac{1}{2}\chi(\partial M)$
        <ul>
          <li>如果$M$ 是closed:  $\chi(M)=0$
            <ul>
              <li>oriented : 由Poincaré duality, $b_i=b_{n-1}$ 相互抵消</li>
              <li>non-orientable:  有一个oriented double cover N, $\chi(M)=\frac{1}{2}\chi(N)=0$</li>
            </ul>
          </li>
          <li>如果M有boundary $\partial M$
            <ul>
              <li>把两个$M$ 沿$\partial M$  粘成一个double cover $N$ . $\chi(N)=2\chi(M)-\chi(\partial M)$</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="m-是oriented-compact-3-manifold的情况">$M$ 是oriented compact 3-manifold的情况</h2>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240805071909.png" alt="Pasted image 20240805071909.png" width="150" /> $M$(3-manifold) : 中间部分, $\alpha$(2-chain): 中间圆盘, $\beta$(1-chain): 沿边界的curve</p>

<ol>
  <li>有(relative homology) long exact sequence: $\cdots\rightarrow  H_2(M,\partial M)\overset{\partial}\rightarrow H_{1}(\partial M)\overset{i_\ast}\rightarrow H_1(M)\cdots$</li>
  <li>有Lefschetz duality:  $\eta: H_2(M,\partial M,\mathbb Z)\times H_1(M,\mathbb Z) \rightarrow \mathbb Z$</li>
  <li>有Poincaré duality: $\omega: H_1(\partial M)\times H_1(\partial M)\rightarrow Z$</li>
  <li>边界surface $\partial M$ 有inherited orientation, 有 $H_1(\partial M)\cong \mathbb Z^{b_1(\partial M)}$ .</li>
  <li>$H_2(M,\partial M,\mathbb Z)\cong \mathbb Z^{b_1(M)}\oplus T_2$ .</li>
</ol>

<p>(2+3). 对任意$\alpha\in H_2(M,\partial M,\mathbb Z)$, $\beta\in H_1(\partial M)$ 有$\omega(\partial \alpha,\beta)=\eta(\alpha,i_\ast\beta)$ (curve $\beta$ 和$\alpha$ (圆盘)相交 = $\beta$ 和 $\alpha$ 的边界(圆)相交)</p>

<h3 id="自身和边界的oriented-dimension">自身和边界的oriented dimension</h3>

<p>free generated部分, $H_2(M,\partial M, \mathbb Z_2)$ 的曲面对应边界的meridians(纬线), 由Lefschetz duality和曲面对偶的curve对应边界的longitude(经线)部分</p>

<ul>
  <li>$\partial:  H_2(M,\partial M,\mathbb Z)\rightarrow H_1(\partial M, \mathbb Z)$ 的image是 Lagrangian + max rank 的
    <ul>
      <li>Lagrangian: $H_1(\partial M)$ 上的intersection form $\omega\vert_{\text{img}\partial}\equiv 0$ (所有的image curve, 图上$\partial \alpha$ ,不相交)</li>
      <li>maximal rank:  $\text{img}\partial$ 是rank n的. ( $rk(\text{img}\partial)= \frac{b_1(\partial M)}{2}$ )</li>
      <li>证明:
        <ul>
          <li>Lagrangian: $\omega(\partial \alpha,\partial \alpha^\prime)=\eta(\alpha,i_\ast\partial\alpha^\prime)=\eta(\alpha,0)=0$
            <ul>
              <li>long exact sequence: $\cdots\rightarrow  H_2(M,\partial M)\overset{\partial}\rightarrow H_{1}(\partial M)\overset{i_\ast}\rightarrow H_1(M)\cdots$ 有$i_\ast\partial=0$</li>
            </ul>
          </li>
          <li>rank &lt;= n: (由Poincaré duality)
            <ul>
              <li>$\omega$ 是<a href="https://en.wikipedia.org/wiki/Symplectic_vector_space">symplectic</a> 的 -&gt; $H_1(\partial M)$ 上有basis $\lbrace x_1,\cdots,x_n,y_1,\cdots,y_n\rbrace$ , 使$\omega(x_k,y_k)=1$ , -&gt; $\text{img}\partial$ 不能同时包含各组中的 $x_k,y_k$  -&gt; rank &lt;= n.</li>
            </ul>
          </li>
          <li>rank &gt;= n: (由Lefschetz duality + exact sequence)
            <ul>
              <li>有以下关系:
                <ul>
                  <li>$rk(H_2(M,\partial M))=rk(H_1(M))=b_1(M)$ : 由Lefschetz duality</li>
                  <li>$rk(H_1(\partial M))=b_1(\partial M)$</li>
                  <li>$b_1(M)=rk(\text{ker}\partial) +rk(\text{img }\partial)$ : 由$\partial$ 的构造</li>
                  <li>$b_1(\partial M)=rk(\text{ker }i_\ast)+rk(\text{img }i_\ast)$ : 由 $i_\ast$ 的构造</li>
                  <li>$rk(\text{img}\partial)=rk(\text{ker }i_\ast)$ : 由exact sequence可得</li>
                  <li>$rk(\text{ker}\partial)+rk(\text{img }i_\ast)\le b_1(M)$ : 对 $\alpha\in \text{ker}\partial$ , 有 $\eta(\alpha,i_\ast \beta)=\omega(\partial \alpha,\beta)=\omega(0,\beta)=0$ -&gt; $\text{ker}\partial\perp_\eta \text{img }i_\ast$</li>
                </ul>
              </li>
              <li>解得$\text{img}\partial$ 和$b_1(\partial M)$ 的关系
                <ul>
                  <li>$rk(\text{img}\partial)&gt;=b_1(\partial M)/2$</li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>$b_1(M)\ge \frac{b_1(\partial M)}{2}$ (由Lefschetz duality, $b_1(M)=rk(H_2(M,\partial M))&gt;rk(\text{img}\partial)$ )
    <ul>
      <li>$b_1(M)=0$ -&gt; $b_1(\partial M)=0$ : 如果$M$ 是simply connected, $\partial M$ 由sphere组成</li>
    </ul>
  </li>
</ul>

<h3 id="non-orientable-embedding曲面">non-orientable embedding曲面</h3>

<p>torsion部分, 由Lefschetz duality和曲面对偶的curve在曲面的tubular neighborhood里</p>
<ul>
  <li>non-orientable 曲面$S$ 嵌入$M$ (properly embedding: 横截相交, $\partial S=\partial M\cap S$ )
    <ul>
      <li>每个曲面$S$ 定义$H_2(M,\partial M, \mathbb Z_2)$ 中的一个non-trival class</li>
      <li>$M$ 最多包含 $\text{dim} H_2(M,\partial M, \mathbb Z_2)$ 个不相交的non-orientable 曲面
        <ul>
          <li>对于每个non-orientable 曲面$S$, 把$S$ 加厚, 得到tubular neighborhood $S\times I$</li>
          <li>tubular neighborhood的boundary 给出了$S$ 的一个double cover $\tilde S$</li>
          <li>$S$ 上过$p$ 点的closed loop $\gamma$ , lift to $\tilde \gamma$ + 把$\tilde p_1$ 和 $\tilde p_2$ 连上得到的$\tilde \eta$ = closed loop $\alpha=\tilde \gamma \cdot \tilde \eta$ , $\alpha$ 和 $S$ 只交于一点</li>
          <li>所有的$\alpha_i$ 不相交, 是linearly independent的, 最多有 $\text{dim} H_2(M,\partial M, \mathbb Z_2)$ 个</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>$b_1(M)=0$ -&gt; $\text{dim} H_2(M,\partial M, \mathbb Z_2)=0$ : 如果$M$ 是simply connected, 不包含non-orientable 曲面</li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="content" /><category term="homology" /><category term="duality" /><category term="betti_number" /><category term="euler_character" /><category term="3-manifold" /><summary type="html"><![CDATA[Poincaré Duality]]></summary></entry><entry><title type="html">conformal geometry学习 (六 ) – cohomology group</title><link href="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry6/" rel="alternate" type="text/html" title="conformal geometry学习 (六 ) – cohomology group" /><published>2024-07-26T00:00:00+00:00</published><updated>2024-08-26T13:29:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry6</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry6/"><![CDATA[<p>上同调是同调的对偶</p>

<table>
  <thead>
    <tr>
      <th>同调 homology</th>
      <th>上同调 <a href="https://en.wikipedia.org/wiki/Cohomology">(Simplicial) cohomology</a><br /><br />最初是为了表示<a href="https://en.wikipedia.org/wiki/Stiefel–Whitney_class.">stiefel whitney class</a></th>
      <th>对偶记号</th>
      <th>tangent space</th>
      <th>de Rham cohomology<br /><br />$\Omega^k(\Sigma)$</th>
      <th>积分记号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>k-chain $\sigma$ <br />$C_k$</td>
      <td>k-cochain(k-form) $\omega$ <br />$C^k$</td>
      <td>bilinear operator<br />$&lt;\omega,\sigma&gt;:=\omega(\sigma)$</td>
      <td> </td>
      <td>Differential 1-form<br />co-tangent space<br /></td>
      <td> </td>
    </tr>
    <tr>
      <td>(k+1)-boundary<br />$\partial_{k+1}:C_{k+1}\rightarrow C_{k}$</td>
      <td>k-coboundary(微分算子)<br />$\delta_k: C^k\rightarrow C^{k+1}$<br />$\delta_k(\omega)=\omega\circ \partial_{k+1},\omega\in C^k$</td>
      <td>$&lt;\delta\omega,\sigma&gt;=&lt;\omega,\partial\sigma&gt;$ <br /><br /><a href="https://en.wikipedia.org/wiki/Stokes%27_theorem">Stokes Theorem</a></td>
      <td> </td>
      <td>exterior differential<br /> operator(外微分算子)<br />$d^k:\Omega^k(\Sigma)\rightarrow \Omega^{k+1}(\Sigma)$</td>
      <td>$\int_{\partial M}\omega=\int_M d\omega$<br /><a href="https://en.wikipedia.org/wiki/Stokes%27_theorem">Stokes Theorem</a></td>
    </tr>
    <tr>
      <td>adjoint boundary<br />operator<br />$\partial_{k+1}^\ast:C_{k}\rightarrow C_{k+1}$</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td>codifferential operator<br />$\delta:\Omega^k(\Sigma)\rightarrow \Omega^{k-1}(\Sigma)$</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>closed form $\delta_k\omega=0$</td>
      <td> </td>
      <td> </td>
      <td>closed form $d^k\omega=0$</td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>exact form $\omega=\delta_{k-1}\sigma$</td>
      <td> </td>
      <td> </td>
      <td>exact form $\omega=d^{k-1}\sigma$</td>
      <td> </td>
    </tr>
    <tr>
      <td>$H_n$<br />closed, but not exact</td>
      <td>$H^n=\frac{\text{ker}\delta^n}{\text{img}\delta^{n-1}}$ <br />curl free, but not =gradient</td>
      <td> </td>
      <td> </td>
      <td>$H^n_{dR}$</td>
      <td> </td>
    </tr>
    <tr>
      <td>$f_\ast: H_n(M)\rightarrow H_n(N)$</td>
      <td>$f^\ast: H^n(N)\rightarrow H^n(M)$<br />是$f_\ast$ 的pull back</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h3 id="一阶-cohomology-basis-计算">一阶 cohomology basis 计算</h3>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240731000546.png" alt="Pasted image 20240731000546.png" width="150" /></p>

<ul>
  <li>$H^1$ 是在边(1-simplex)上的函数, 使得沿每个三角形(2-chain)路径和为0 ( $\omega\in\text{ker}\delta^1$ )</li>
  <li>$H^1\cong H_1$  可以找到一组dual basis.</li>
  <li>closed, genus g的曲面($\Sigma$) 上<strong>一阶 cohomology basis 计算</strong> $H^1(\Sigma,\mathbb Z)$ (或$H^1(\Sigma,\mathbb R)$) : <strong>用homology basis的dual basis组成</strong>
    <ul>
      <li>计算homology basis $H_1(\Sigma,\mathbb Z)=span&lt;\gamma_1,\dots,\gamma_{2g}&gt;$
        <ul>
          <li>想办法让除同一组(tunnel, handle)之外的basis都不相交</li>
        </ul>
      </li>
      <li>每个1-cycle $\gamma_i$ 定义一个1-form $\omega_i$
        <ul>
          <li>把$\Sigma$ 沿$\gamma_i$ 切开, 得到 $M_i$ , 边界$\partial M_i=\gamma_i^+-\gamma_i^-$</li>
          <li>在$M_i$ 上定义 0-form $\tau_i$ , 在$\gamma_i^+$ 的顶点上取1, 在$\gamma_i^-$ 的顶点上取0, 得到1-form $\omega_i=d\tau_i$ (在边上取值是起点值-终点值)
            <ul>
              <li>其他地方的$\tau_i$ 可以随便取值</li>
              <li>$\omega_i$ 在$\gamma_i^+, \gamma_i^-$ 上的边都取0, 所以是well-defined</li>
              <li>$w_i$ 在同组$\gamma_j$ 上取1: 展开成$M_i$ 后, $\gamma_j$ 变为$\gamma_i^+$ 到$\gamma_i^-$ 的path, $d\tau_i=1$
                <ul>
                  <li>$w_i$ 是同组$\gamma_j$ 的对偶</li>
                </ul>
              </li>
              <li>$w_i$ 在其他$\gamma_j$ 上取0: 展开成$M_i$ 后, $\gamma_j$ 依然是loop, $d\tau_i=0$</li>
              <li>$\omega_i=d\tau_i$, 所以$d\omega_i$ 处处为0</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>所有$\omega_i$ 组成$H^1(\Sigma, \mathbb Z)$ 的basis</li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="content" /><summary type="html"><![CDATA[上同调是同调的对偶]]></summary></entry><entry><title type="html">conformal geometry学习 (五 ) – homology group</title><link href="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry5/" rel="alternate" type="text/html" title="conformal geometry学习 (五 ) – homology group" /><published>2024-07-22T00:00:00+00:00</published><updated>2024-08-20T01:49:08+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry5</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry5/"><![CDATA[<h2 id="曲面的离散表示">曲面的离散表示</h2>

<p>曲面可以离散化用Simplicial Complex表示</p>

<ul>
  <li>曲面 $\Sigma$ 上的triangulation(三角剖分) $T$
    <ul>
      <li>每个三角形边的方向沿曲面法向的逆时针</li>
      <li>每个边有两条相互反向的half-edge</li>
    </ul>
  </li>
</ul>

<h3 id="simplex-chain-boundary">simplex-&gt;chain-&gt;boundary</h3>

<p><a href="https://commons.wikimedia.org/wiki/File:Simplicial_complex_example.svg#/media/File:Simplicial_complex_example.svg"><img src="https://upload.wikimedia.org/wikipedia/commons/5/50/Simplicial_complex_example.svg" alt="Simplicial complex example.svg" width="200" /></a></p>

<ul>
  <li>单纯复形(<a href="https://en.wikipedia.org/wiki/Simplicial_complex">Simplicial Complex</a>) $\Sigma=\cup \sigma$ 是由simplices(单型) 粘合而成
    <ul>
      <li>“粘合”条件: 1. simplex $\sigma\subset \Sigma$ -&gt; $\sigma$ 的facets $\tau\subset \Sigma$  2. $\sigma_1,\sigma_2\subset \Sigma$, $\sigma_1\cap \sigma_2=\tau\ne \emptyset$ 是两个simplex的交 -&gt; $\tau\subset \sigma_1$, $\tau\subset \sigma_2$ 是一个common facet</li>
      <li><a href="https://en.wikipedia.org/wiki/Simplex">Simplex</a> $\sigma$ 是$\mathbb R^n$ 中的点集的minimal convex hull(0: simplex 是点, 1-simplex: 线段, 2-simplex: 三角形, 3-simplex: 四面体 …, k-simplex有k+1
        <ul>
          <li>facet:  $\tau\subset \sigma$ , $\tau$ 也是个simplex</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Chain: k-chain $C_k(\Sigma,\mathbb Z)$ 是单纯复形$\Sigma$ 上同维数的simplices(单型) 的集合, with multiplicity $\sigma=\sum_i\lambda_i\sigma_i, \lambda_i\in\mathbb Z$
    <ul>
      <li>其中系数$\lambda_i$ 是multiplicity(经过同一个simplex的次数), 系数为负表示方向相反
        <ul>
          <li>$C_k(\Sigma,\mathbb Z_2)$ 的情况,  $\lambda_i=1$ ,$\lambda_i^2=0$</li>
        </ul>
      </li>
      <li>chain不要求是连续的</li>
      <li>example: 曲面上curve是1-chain, patch是2-chain</li>
    </ul>
  </li>
  <li>Boundary Operator $\partial_n:C_n\rightarrow C_{n-1}$ 定义在chain上, 取simplex的边界
    <ul>
      <li>表达式: $\partial_n[v_0,v_1,\cdots,v_n]=\sum_{i} (-1)^i[v_0,\cdots,v_{i-1},v_{i+1},\cdots, v_n]$
        <ul>
          <li>$\partial_k$把$\sigma$ 映射到$\sigma$ 的边界(k-1)-simplex $\tau_i$ 的线性组合, 系数为$\tau_i\subset \sigma$ 的次序</li>
        </ul>
      </li>
      <li>exact性质(boundary of a boundary): $\partial_{n-1}\partial_n=\emptyset$
        <ul>
          <li>boundary operator生成的(n-1)-simplex会在交接的(n-2)-simplex处方向相反
            <ul>
              <li>比如$[v_0,\cdots,v_{i-1},v_{i+1},\cdots,v_{j-1},v_{j+1},\cdots,v_n]$ 的两项参数为$(-1)^i(-1)^{j-1}$ (先去掉$v_i$ )和$(-1)^j(-1)^i$ (先去掉$v_j$)</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>adjoint: $\partial_n^*: C_{n-1}\rightarrow C_n$
        <ul>
          <li>表达式:  $\partial_n[v_0,v_1,\cdots,v_n]=\sum_{i} (-1)^i[v_0,\cdots,v_{i-1},v_{i+1},\cdots, v_n]$
            <ul>
              <li>把(k-1)-simplex $\tau$ 映射到相邻的k-simplex $\sigma_i$ 的线性组合, 系数为$\tau\subset \sigma_i$ 的次序</li>
            </ul>
          </li>
          <li>$\partial_n^\ast\partial_n$ 表示n-simplex的相邻关系</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>closed ($Z_n$,cycles): k-chain $\gamma\in C_k(\Sigma)$ 没有boundary, 即$\partial_k \gamma=0$</li>
  <li>exact ($B_{n+1}$,boundaries): k-chain $\gamma\in C_k(\Sigma)$ 是某个k+1-chain的boundary, 即 $\gamma=\partial_{k+1} \sigma$</li>
</ul>

<table>
  <thead>
    <tr>
      <th>一般表示</th>
      <th>离散表示</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>surface</td>
      <td>Simplicial Complex<br />(三角剖分得到的)</td>
    </tr>
    <tr>
      <td>path</td>
      <td>1-chain</td>
    </tr>
    <tr>
      <td>loop</td>
      <td>closed 1-chain</td>
    </tr>
  </tbody>
</table>

<h2 id="homology同调-group-simplicial-homology"><a href="https://en.wikipedia.org/wiki/Simplicial_homology">Homology(同调) group</a> (Simplicial homology)</h2>

<ul>
  <li>homologous同调等价: $\gamma_1-\gamma_2=\partial_{k+1}\sigma$</li>
  <li>simplical form 的同调群 $H_k(\Sigma, \mathbb Z)=\frac{\text{ker}\partial_k}{\text{img}\partial_{k+1}}$
    <ul>
      <li>closed, not exact</li>
    </ul>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>fundamental group $\pi_1(\Sigma)$</th>
      <th>first homology group $H_1(\Sigma,\mathbb Z)$</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>定义</td>
      <td>从曲面上某个点$p$</td>
      <td>从曲面的三角剖分, 可以定义在任意维度</td>
    </tr>
    <tr>
      <td>生成元</td>
      <td>经过点p的loop</td>
      <td>closed 1-chain<br /> $\sigma=\sum_i\lambda_i\sigma_i, \lambda_i\in\mathbb Z$</td>
    </tr>
    <tr>
      <td>等价关系</td>
      <td>$\gamma\sim e$ <br />可以连续缩成一个点<br />即, 是disk的边</td>
      <td>exact: $\gamma$ homological to 0<br />是某个平面patch(2-chain)的边<br />即, $\Sigma$ 沿$\gamma$ cut会分为两片</td>
    </tr>
    <tr>
      <td><strong>性质</strong></td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>一般不是可交换群</td>
      <td>可交换(1-chain没有经过simplex的前后顺序之分)<br /> $\gamma_1\gamma_2=\gamma_2\gamma_1$ <br />commutator $[\gamma_1,\gamma_2]=\gamma_1\gamma_2\gamma_1^{-1}\gamma_2^{-1}$ 是trival的</td>
    </tr>
    <tr>
      <td><strong>关系</strong><br />Abelianization</td>
      <td> </td>
      <td>$H_1(\Sigma,\mathbb Z)=\pi_1(\Sigma)^{ab}=\pi_1(\Sigma)/[\pi_1(\Sigma),\pi_1(\Sigma)]$ <br />$[\pi_1(\Sigma),\pi_1(\Sigma)]$ 是commutator<br />$H_1$和$\pi_1$ generator相同</td>
    </tr>
    <tr>
      <td>合并<br />$U\cup V$</td>
      <td>$&lt;u_1,\dots,u_k,v_1,\dots,v_m\vert \alpha_i,\beta_j,i(w_1)j(w_1)^{-1},\dots,i(w_p)j(w_p)^{-1}&gt;$ <br /><a href="https://en.wikipedia.org/wiki/Seifert–Van_Kampen_theorem">Seifert-Van Kampen Theorem</a></td>
      <td>$&lt;u_1,\dots,u_k,v_1,\dots,v_m\vert \alpha_i,\beta_j,i(w_1),j(w_1),\dots,i(w_p),j(w_p)&gt;$<br />$H_1(U\cup V)\cong (H_1(U)\oplus H_1(V))/\text{img}(i_\ast,j_\ast)$  <br /><a href="https://en.wikipedia.org/wiki/Mayer–Vietoris_sequence">Mayer–Vietoris_sequence</a></td>
    </tr>
    <tr>
      <td>high-genus <br />oriented surface<br />$T_1 \texttt{#}T_2 \texttt{#}\cdots  \texttt{#} T_g$</td>
      <td>$&lt;a_1,\cdots,a_g,b_1,\cdots, b_g\vert \prod_{i=1}^g a_ib_ia_i^{-1} b_i^{-1}&gt;$</td>
      <td>$&lt;a_1,\cdots,a_g,b_1,\cdots, b_g&gt;^{ab}$ <br /><br />free Abelian group $\mathbb Z^{2g}$</td>
    </tr>
    <tr>
      <td>non-orientable<br /> surface<br />$\mathbb {R}P^2$</td>
      <td>$&lt;\gamma\ \vert\  \gamma^2&gt;$</td>
      <td>$\mathbb Z/2\mathbb Z$ <br />torsion(生成元阶数有限)</td>
    </tr>
  </tbody>
</table>

<p><strong>同调分类比同伦分类粒度更粗</strong></p>

<ul>
  <li>homology(同调) group trival -/-&gt; 曲面trival: <a href="https://en.wikipedia.org/wiki/Homology_sphere">同调球</a></li>
  <li>loop $\gamma$ 在homology(同调) group trival -/-&gt; 在fundamental group trival:
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240726111536.png" alt="Pasted image 20240726111536.png" width="250" /> $\gamma=a_1b_1a_1^{-1}b_1^{-1}$ 在$H_1(\Sigma,\mathbb Z)$ trival, 但是在$\pi_1(\Sigma)$ 不trival</li>
    </ul>
  </li>
</ul>

<h3 id="topological-space分解">topological space分解</h3>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Mayer–Vietoris_sequence">Mayer–Vietoris_sequence</a>: $U, V$ open, $H_n(U\cup V)$ 和$H_n(U)$ , $H_n(V)$ 的关系
    <ul>
      <li>
\[\cdots\rightarrow H_{n+1}(U\cup V)\overset{\partial_\ast}\rightarrow H_n(U\cap V)\overset{i_\ast,j_\ast}\rightarrow H_n(U)\oplus H_n(V)\overset{k_\ast-l_\ast}\rightarrow H_{n}(U\cup V)\rightarrow \cdots\]
        <ul>
          <li>i, j, k, l都是inclusion</li>
          <li><a><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Mayer_Vietoris_sequence_boundary_map_on_torus.png/224px-Mayer_Vietoris_sequence_boundary_map_on_torus.png" width="112" /></a> $\partial_\ast:[x]\mapsto [\partial u]$</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h4 id="例子">例子</h4>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240731133300.png" alt="Pasted image 20240731133300.png" width="100" /> tunnel loop <img src="/personal_homepage/docs/attachment/Pasted%20image%2020240731133422.png" alt="Pasted image 20240731133422.png" width="100" /> handle loop</p>

<ul>
  <li>closed, orientable 曲面$S$ , 内部三流型为$I$, 外部为$O$ , 有
    <ul>
      <li>
\[\cdots\rightarrow H_2(\mathbb R^3)\overset{\partial_\ast}\rightarrow H_1(S)\overset{i_\ast,j_\ast}\rightarrow H_1(I)\oplus H_1(O)\overset{k_\ast-l_\ast}\rightarrow H_1(\mathbb R^3)\rightarrow \cdots\]
        <ul>
          <li>$H_2(\mathbb R^3)=H_1(\mathbb R^3)=0$ ($\mathbb R^3$ 可以缩到一个点, 是同伦trival-&gt; 同调trival, Poincaré duality给出$H_2\cong H_1$ )</li>
        </ul>
      </li>
      <li>$H_1(S)\cong H_1(I)\oplus H_1(O)$ 由内外三流型的同调确定
        <ul>
          <li>$H_1(I)$ 的generator是tunnel loop(外部可以缩成一个点), $H_1(O)$ 的generator是handle loop</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="homology-basis同调群基底计算">Homology Basis(同调群基底)计算</h3>

<ul>
  <li>Smith Norm方法(线性代数): 因为<strong>同调群是Abel群</strong>, 可以有$\mathbb Z$-module(向量)表示
    <ul>
      <li>把k-chain $C_k$ :  $\sigma=\sum_i\lambda_i\sigma_i, \lambda_i\in\mathbb Z$ 用以simplex为basis的vector表示</li>
      <li>Boundary Operator $\partial_k:C_k\rightarrow C_{k-1}$ 用矩阵表示, adjoint Boundary Operator $\partial_k^*=\partial_{k}^T$
        <ul>
          <li>$\partial_k=([\sigma_i^{k-1},\sigma_j^k]_{ij})$ , $[\sigma_i^{k-1},\sigma_j^k]$ 是k-simplex和(k-1)-simplex的连接数, 可能是+/- 1, 0(包含定向)</li>
        </ul>
      </li>
      <li>表示 <a href="https://en.wikipedia.org/wiki/Laplacian_matrix">Combinatorial Laplacian matrix</a>   $\Delta_k=\partial_k^T\partial_k+\partial_{k+1}\partial_{k+1}^T$
        <ul>
          <li>$\text{ker}\Delta_k=H_k$
            <ul>
              <li>$\text{ker}\Delta_k= \text{ker}\partial_k\cap\text{ker}\partial_{k+1}^T$
                <ul>
                  <li>$\subset$:  对于k-chain $\gamma$,  $\Delta_k\gamma=0$ -&gt; $\gamma^T\Delta_k\gamma=0$ -&gt; $\gamma^T\partial_k^T\partial_k\gamma+\gamma^T\partial_{k+1}\partial_{k+1}^T\gamma=0$ -&gt; $\gamma^T\partial_k^T\partial_k\gamma=0$, $\gamma^T\partial_{k+1}\partial_{k+1}^T\gamma=0$ -&gt; $\partial_k\gamma=0$, $\partial_{k+1}^T\gamma=0$</li>
                </ul>
              </li>
              <li>$\text{ker}\partial_k\cap\text{ker}\partial_{k+1}^T=\frac{\text{ker}\partial_k}{\text{img}\partial_{k+1}}=H_k$
                <ul>
                  <li>inj:  k-chain $\gamma\in \text{img}\partial_{k+1}$ -&gt; $\gamma=\partial_{k+1}\tau$ -&gt; $\partial_{k+1}^T\gamma=\partial_{k+1}^T\partial_{k+1} \tau\ne 0$
                    <ul>
                      <li>即, $\gamma$ 在$\text{ker}\partial_{k+1}^T$ 中表示$\gamma$ 不是exact, 在$H_k$ 中非0</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>用integer matrix的Smith norm计算$\Delta_k$ 的zero eigen vector(即$\text{ker}\Delta_k$ )
        <ul>
          <li>Smith Norm计算也是指数级, NP-hard?</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="closed-surface映射的degree"><a href="https://en.wikipedia.org/wiki/Degree_of_a_continuous_mapping">closed surface映射的degree</a></h3>

<ul>
  <li>degree of mapping由homology(同调)映射的层数$c$ 定义(同调的用途)</li>
  <li>closed surface之间的连续映射$f: M\rightarrow N$ , induce homology group之间的映射$f_\ast: H_2(M,\mathbb Z)\rightarrow H_2(N,\mathbb Z)$
    <ul>
      <li>-&gt; $f_\ast: \mathbb Z\rightarrow \mathbb Z$</li>
      <li>-&gt; $f_\ast(z)=cz, c\in \mathbb Z$</li>
      <li>-&gt; $deg(f)=c$</li>
    </ul>
  </li>
</ul>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240731003422.png" alt="Pasted image 20240731003422.png" width="400" />  $p_1,p_2,p_3$ 都映射到$q$.  $p_3$ 是往右凸起, $K(p_3)$ 应该&gt;0?</p>
<ul>
  <li>例子1(<a href="https://en.wikipedia.org/wiki/Gauss–Bonnet_theorem">Gauss-Bonnet</a>): Gauss映射$G:S\rightarrow \mathbb S^2$ , 把点映射到normal vector($p\mapsto n(p)$ ).
    <ul>
      <li>$deg(G)=1-g$. 覆盖球面1-g次</li>
    </ul>
  </li>
</ul>

<h2 id="relative-homology相对同调">Relative Homology(相对同调)</h2>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>定义</th>
      <th>maps</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>simplicial complex</td>
      <td>$K_0\subset K$ 是subcomplex</td>
      <td>$f:K\rightarrow L$<br />并且, $f(K_0)\subset L_0$</td>
    </tr>
    <tr>
      <td>relative p-chain</td>
      <td>$C_n(K,K_0)=C_n(K)/C_n(K_0)$<br />元素是coset $c+C_n(K_0)$</td>
      <td>$f_\texttt{#}: C_n(K,K_0)\rightarrow C_n(L,L_0)$</td>
    </tr>
    <tr>
      <td>relative boundary operator</td>
      <td>$\partial_n:C_n(K,K_0)\rightarrow C_{n-1}(K,K_0)$<br />其中, $c\mapsto \partial_n c+C_{n-1}K_0$</td>
      <td>$f_\texttt{#}$ 和$\partial_n$ 可交换</td>
    </tr>
    <tr>
      <td>relative cycles</td>
      <td>$Z_n(K,K_0)=\text{ker}\partial_n$<br />$\partial_n(Z_n(K,K_0))$ 在$C_{n-1}(K,K_0)$ 中trival<br />即有, $\partial_n: Z_n(K,K_0)\hookrightarrow C_{n-1}(K_0)$</td>
      <td> </td>
    </tr>
    <tr>
      <td>relative boundary</td>
      <td>$B_n(K,K_0)=\text{img}\partial_{n+1}$</td>
      <td> </td>
    </tr>
    <tr>
      <td>relative homology</td>
      <td>$H_n(K,K_0)=Z_n(K,K_0)/B_n(K,K_0)$</td>
      <td>$f_\ast: H_n(K,K_0)\rightarrow H_n(L,L_0)$</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h3 id="分解性质">分解性质</h3>

<ul>
  <li>得到long exact sequence:</li>
  <li>
\[\cdots\rightarrow H_n(K_0)\overset{i_\ast}\rightarrow H_n(K)\overset{\pi_\ast}\rightarrow H_n(K,K_0)\overset{\partial}\rightarrow H_{n-1}(K_0)\rightarrow \cdots\]
    <ul>
      <li>$i_\ast: H_n(K_0)\rightarrow H_n(K)$
        <ul>
          <li>$i: K_0\rightarrow K$ 是inclusion</li>
        </ul>
      </li>
      <li>$\pi_\ast: H_p(K)\rightarrow H_p(K,K_0)$ 给出absolute homology和relative homology的映射
        <ul>
          <li>$\pi:(K,\emptyset)\rightarrow (K,K_0)$ 是identity</li>
        </ul>
      </li>
      <li>$\partial: H_n(K,K_0)\rightarrow H_{n-1}(K_0)$ 把relative cycle映射到boundary
        <ul>
          <li>由, $\partial_n: Z_n(K,K_0)\rightarrow C_{n-1}(K_0)$ 和$\partial_n(B_n)=0$ 定义</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="切除性质">切除性质</h3>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Excision_theorem">excision theorem(切除定理)</a>: $U\subset K_0\subset K$, 则切除$U$ 后relative homology不变,  即$H_n(K,K_0)\cong H_n(K-U,K_0-U)=H_n(L,L_0)$
    <ul>
      <li>证明1: 用Smith Norm方法, $H_n$ 的basis由矩阵$\Delta_n$ 的0-eigenvector得到(具体细节🤔️?)
        <ul>
          <li>写出$\partial_n: C_n(K)\rightarrow C_{n-1}(K)$ 和$\partial_n: C_n(L)\rightarrow C_{n-1}(L)$ 的矩阵表示</li>
          <li>$C_n(K)$ 可以分解为$C_n(K_0)\oplus C_n(K,K_0)$ 两部分, 后部分又分解出$Z_n(K,K_0)$ 部分
            <ul>
              <li>$Z_n(K,K_0)$ 和$Z_n(L,L_0)$ 部分维数相等?</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>证明2: 用long exact sequence分解(具体细节🤔️?)
        <ul>
          <li>$K=K_0\cup(K-U)=K_0\cup L$ , $K_0\cap L=K_0-U=L_0$</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="content" /><category term="discrete" /><category term="triangulation" /><category term="三角剖分" /><category term="chain" /><category term="simplex" /><category term="simplical_complex" /><category term="homology" /><summary type="html"><![CDATA[曲面的离散表示]]></summary></entry><entry><title type="html">conformal geometry学习 (四 ) – 3-manifold</title><link href="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry4/" rel="alternate" type="text/html" title="conformal geometry学习 (四 ) – 3-manifold" /><published>2024-07-21T00:00:00+00:00</published><updated>2024-08-18T05:32:57+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry4</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/math/conformal-geometry4/"><![CDATA[<p>3维流型, 在局部和$\mathbb R^3$ homeomorphic(同胚)</p>

<h2 id="3-manifold和knot的本质关联">3-manifold和knot的本质关联</h2>

<ul>
  <li>所有的3-manifold都可以由$S^3$(3 sphere) 通过Dehn Surgery得到(<a href="https://en.wikipedia.org/wiki/Lickorish–Wallace_theorem">Lickorish-Wallace, 1960</a>)
    <ul>
      <li><a href="https://en.wikipedia.org/wiki/Dehn_surgery">Dehn Surgery</a> : 从3-manifold $M$ <strong>drill</strong> 一个link的tubular neighborhood(管状邻域), 用solid torus <strong>fill</strong> 每个knot的部分.
        <ul>
          <li>link $L$由一系列knots组成, $L=\cup_i K_i$</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>不同的link可能得到相同的3-manifold, 研究这个的是<a href="https://en.wikipedia.org/wiki/Kirby_calculus">Kirby Calculus学科</a> .</li>
</ul>

<h2 id="hyperbolic-3-manifold双曲三流型"><a href="https://en.wikipedia.org/wiki/Hyperbolic_3-manifold">hyperbolic 3-manifold(双曲三流型)</a></h2>

<p>具有恒定负曲率</p>

<h3 id="poincare-half-space-modelmathbb-h3">Poincare half-space model($\mathbb H^3$)</h3>

<ul>
  <li>定义: $\mathbb H^3=\lbrace(x,y,t)\vert\ t&gt;0\rbrace$, 有双曲度量 $ds^2=\frac{dx^2+dy^2+dt^2}{t^2}$</li>
  <li>boundary $\partial \mathbb H^3=\mathbb C\cup\infty$ 又叫sphere at infinity</li>
  <li>测地平面 $\mathbb H^2$ 是正交于xy-plane的vertical planes , 或上半球面</li>
  <li>测地线是正交于xy-plane 的直线或半圆</li>
  <li>$\text{Isom}^+(\mathbb H^3)=PSL_2(\mathbb C)$ 在$\mathbb C\cup \infty$ 上是<a href="https://en.wikipedia.org/wiki/Möbius_transformation">Möbius transforms</a></li>
  <li>horizontal planes $t=$ 是scaled Euclidean planes, 叫<a href="https://en.wikipedia.org/wiki/Horosphere">horospheres</a></li>
</ul>

<h3 id="性质拓扑确定几何">性质(拓扑确定几何)</h3>

<ul>
  <li>双曲三流型的基本群$\pi_1(M)$ -&gt; 在covering space上是等距同构 -&gt; 有到 $PSL_2(\mathbb C)$ 的离散, faithful 表示
    <ul>
      <li>基本群的不同元素对应 $PSL_2(\mathbb C)$ 的不同元素(faithful)</li>
    </ul>
  </li>
  <li>双曲三流型$M$, 给定一个 $\epsilon&gt;0$, 可以把$M$ 分解为厚部分和薄部分 $M=M_{thick}\cup M_{thin}$ (Margulis thick-thin theorem, 1978)
    <ul>
      <li>$M_{thin}$ 是注入半径&lt;$\epsilon$ 的部分, 是tube和cusp
        <ul>
          <li>cusp是$T^2\times [0,\infty)$ with  $ds^2=\frac{dx^2+dy^2+dz^2}{z^2}$ (scaled Euclidean metric, $z\in [z_0,\infty)$ 是scale部分, x,y是$T^2$ 部分坐标)</li>
        </ul>
      </li>
      <li>$M_{thick}$ 是注入半径&gt;$\epsilon$ 的部分</li>
      <li>表示度量(注入半径)确定了几何(是否是cusp)</li>
    </ul>
  </li>
  <li>双曲三流型上的双曲度量是唯一的.(Mostow-Prasad Rigidity theorem, 1968)
    <ul>
      <li>表示几何不变量-&gt;拓扑不变量. 即可以通过研究拓扑研究几何.</li>
    </ul>
  </li>
</ul>

<table>
  <thead>
    <tr>
      <th>3-manifold</th>
      <th>surface</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hyperbolic structure唯一(刚性定理)<br />即拓扑(度量)决定几何<br />可以用几何分析方法: PDE-&gt; 黎曼度量 -&gt; 拓扑</td>
      <td>high genus surface上有双曲度量<br />不唯一, 取决于canonical basis的选取<br />不同的度量构成<a href="https://en.wikipedia.org/wiki/Teichmüller_space">Teichmüller_space</a></td>
    </tr>
  </tbody>
</table>

<h3 id="应用">应用</h3>

<p>存在双曲三流型结构的场景: 这些场景😮‍💨全都不太理解</p>
<ol>
  <li>如果三流型 $M$ 是 compact, irreducible, atoroidal(无环面), Haken manifold(有不可缩面embed) with torus boundary, $M$ 的内部是双曲的.(Geometrization of Haken manifolds, 几何化猜想的一部分)</li>
  <li>一些link of knot的补空间有双曲结构
    <ul>
      <li>可以用circle packing 描述?</li>
      <li>$S^2$ 球面的三角剖分和对偶的剖分对应circle packing(<a href="https://en.wikipedia.org/wiki/Circle_packing_theorem">Koebe-Andreev-Thurston circle packing theorem</a>)?</li>
    </ul>
  </li>
  <li>fibered 3-manifolds(surface bundles)
    <ul>
      <li>通过曲面$S$ 上的pseudo-Anosov monodromy(单值变换) 构造的fiber bundle上, 有双曲结构</li>
      <li>表示可以用双曲三流型理论研究曲面上的动态</li>
    </ul>
  </li>
  <li>$PSL_2(\mathbb C)$ 的算术lattice $\Gamma$ 的quotient上有双曲三流型结构
    <ul>
      <li>比如$PSL_2(\mathcal O)$ 的finite index subgroup, 其中$\mathcal O$ 是某个数域的整数环</li>
      <li>首先, 我都没明白这为什么是三流型…</li>
    </ul>
  </li>
</ol>

<h3 id="离散化">离散化</h3>

<ul>
  <li>离散化成双曲多边形</li>
  <li>基本元素是ideal tetrahedra(理想四面体):  $\mathbb H^3$ 上所有顶点在sphere at infinity($\partial \mathbb H^3=\mathbb C\cup\infty$ ) 的测地四面体
    <ul>
      <li>每个边有一个edge parameter $z\in \mathbb C$ , 由周围顶点的cross ratio定义.</li>
      <li>体积计算: $Vol(\Delta(z))=Im(Li_2(z))+\log\vert z\vert \cdot arg(1-z)$
        <ul>
          <li>$Li_2$ 是dilogarithm function</li>
          <li>regular ideal tetrahedron(所有两面夹角$\pi/3$) 是体积最大的</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>cusped(non-compact)双曲三流型$M$ 上的理想三角剖分:
    <ul>
      <li>由ideal tetrahedra(理想四面体)在faces处粘起来, 把顶点删除
        <ol>
          <li>edge粘合处需要乘$\pm 1$ 保证依然是双曲结构(曲率条件)</li>
          <li>对edge parameter也需要添加condition保证completeness(完备条件)</li>
        </ol>
      </li>
      <li>以上两个条件(curvature and completeness equations) 的solution set是离散的, (parameters决定了$M$ 上双曲结构?)</li>
    </ul>
  </li>
</ul>

<h2 id="另外">另外</h2>

<p>3-manifold的很多内容我还没理解, 只是分类记录下来</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="math" /><category term="content" /><category term="3-manifold" /><category term="knot" /><category term="hyperbolic_geometry" /><summary type="html"><![CDATA[3维流型, 在局部和$\mathbb R^3$ homeomorphic(同胚)]]></summary></entry></feed>