<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://roshameow.github.io//personal_homepage/atom.xml" rel="self" type="application/atom+xml" /><link href="https://roshameow.github.io//personal_homepage/" rel="alternate" type="text/html" /><updated>2023-12-27T21:53:20+00:00</updated><id>https://roshameow.github.io//personal_homepage/atom.xml</id><title type="html">Liu, Wen’s Home Page</title><subtitle>Work, Experiments and Ideas.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><entry><title type="html">传感器颜色调制 (二)</title><link href="https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate1/" rel="alternate" type="text/html" title="传感器颜色调制 (二)" /><published>2023-12-26T00:00:00+00:00</published><updated>2023-12-27T20:34:40+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate1</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate1/"><![CDATA[<h2 id="通过coded-aperture-和-dispenser进行颜色调制">通过coded-aperture 和 dispenser进行颜色调制</h2>

<ul>
  <li>
    <p>仿真数据：</p>

    <ul>
      <li>
        <p>CASSI: coded_apeture+dispenser</p>

        <ul>
          <li>
            <p>coded_apeture把mask应用于所有通道</p>
          </li>
          <li>
            <p>dispenser依次给mask的通道图像y-axis 2pixel的shift</p>
          </li>
          <li>
            <p>所有通道叠加(一个像素是同行28x2=56个不同通道像素的叠加，出来的图像是很模糊的)</p>
          </li>
          <li>
            <p>仿真通过shot noise: \(Y_{sim}=B(Y/QE,QE)\)</p>

            <ul>
              <li>
                <p>本来读数是Y, qe是quantum efficiency</p>
              </li>
              <li>
                <p>B是binomial 分布</p>
              </li>
              <li>
                <p>这段其实没懂为什么要用binomial分布，而不是poisson分布\(P(Y)\) , 大概Y/QE是平均光子数，所以sample这么多次，每次都有qe的概率转换为电子；但是仍然不理解为什么要在光电转换的部分随机</p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>数据集使用：</p>
<ul>
  <li>simulation:
    <ul>
      <li>训练：
        <ul>
          <li>data: cave_1024_28</li>
          <li>crop_size: 随机crop到256x256, 和mask做simulation
            <ul>
              <li>shift3d mask: 28x256x310</li>
            </ul>
          </li>
          <li>mask: TSA_simu_data/mask.mat</li>
          <li>test:  TSA_simu_data/Truth/</li>
        </ul>
      </li>
      <li>测试：
        <ul>
          <li>mask: TSA_simu_data/mask.mat</li>
          <li>test: TSA_simu_data/Truth/</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>real:
    <ul>
      <li>训练:
        <ul>
          <li>size: 96</li>
          <li>data: CAVE_512_28 and KAIST_CVPR2021
            <ul>
              <li>CAVE_512_28 ：原数据集512x512x28 30个图片</li>
              <li>KAIST_CVPR2021： 2704x3376x28 30个图片</li>
            </ul>
          </li>
          <li>mask: TSA_real_data/mask.mat
            <ul>
              <li>660x660 0-1的数据</li>
              <li><img src="/personal_homepage/docs/attachment/mask.png" alt="mask.png" width="300" /></li>
            </ul>
          </li>
        </ul>
      </li>
      <li>测试
        <ul>
          <li>size: 714x660</li>
          <li>data: TSA_real_data/Measurements/
            <ul>
              <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231226120247.png" alt="Pasted image 20231226120247.png" width="300" /></li>
            </ul>
          </li>
          <li>mask: TSA_real_data/mask.mat</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="algorithm" /><category term="content" /><category term="sensor" /><summary type="html"><![CDATA[通过coded-aperture 和 dispenser进行颜色调制]]></summary></entry><entry><title type="html">传感器颜色调制 (一)</title><link href="https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate/" rel="alternate" type="text/html" title="传感器颜色调制 (一)" /><published>2023-12-23T00:00:00+00:00</published><updated>2023-12-27T23:14:21+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate/"><![CDATA[<h2 id="调制">调制</h2>

<p>一般把信号区分出来的过程叫调制。现在一般的传感器只能感应2d的光学信号强度(就是灰度图)，把不同波长的光分离，以获取特定光谱范围的信息的过程，就叫颜色调制。比如信号经过rgb的滤光片，得到彩色图像。</p>

<p>所有调制都是通过牺牲一部分空间精度为代价获得其他层次信息。</p>

<h2 id="通过排布滤光片进行颜色调制">通过排布滤光片进行颜色调制</h2>

<p>像传统的rggb bayer和quad bayer一样，可以用不同方式排布多光谱的滤光片。如：</p>
<h3 id="几种排布像素的方法">几种排布像素的方法</h3>

<ol>
  <li><strong>把像素不断二分<a href="#ref">1</a></strong>
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231227093202.png" alt="Pasted image 20231227093202.png" width="400" /></li>
      <li>如果不是\(2^n\) 个通道，没法保证所有通道的像素密度一样。比如图上5个通道的情况。1，2通道的密度就比3，4，5的密度低。</li>
      <li>但是这样做可以让每个相同通道的间距相等。</li>
    </ul>
  </li>
  <li><strong>间隔相等斜向排布<a href="#ref">2</a></strong>
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231227093439.png" alt="Pasted image 20231227093439.png" width="200" /></li>
      <li>能保证每个channel的像素相邻的channel一直是一样的</li>
      <li>但是这样在各个方向上像素密度极度不均匀：比如图上5个通道情况，横竖方向相隔4个像素，斜向却相隔0个，3个像素</li>
    </ul>
  </li>
  <li><strong>分成primary channel和secondary channel两组 <a href="#ref">3</a></strong>
    <ul>
      <li>把secondary channel穿插在primay channel中</li>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231227100416.png" alt="Pasted image 20231227100416.png" width="200" /></li>
      <li>图中a,b,c是primary channel，像素密度高； d,e,f,g 是secondary channel，像素密度低</li>
    </ul>
  </li>
  <li><strong>一个实拍的样例</strong>
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231227114816.png" alt="Pasted image 20231227114816.png" width="300" /></li>
      <li>图中是8个通道的sensor实拍图做了伪彩变换之后的样例</li>
      <li>filter不同channel之间贴了黑胶阻挡(除了阻挡更多光线进入sensor以外，没什么积极意义)</li>
    </ul>
  </li>
</ol>

<h3 id="排布像素的规则">排布像素的规则</h3>

<ul>
  <li>根据不同通道的功能先确定需要的像素密度</li>
</ul>

<h3 id="采用滤光片排布调制的问题">采用滤光片排布调制的问题：</h3>

<ul>
  <li>技术本身的问题：
    <ul>
      <li>现在一般用<a href="https://en.wikipedia.org/wiki/Fabry–Pérot_interferometer">FP-干涉</a>技术来制作多光谱sensor需要的窄波段，FP-干涉需要使用多层透镜实现，相当于严重降低光线透过率</li>
      <li>mask均匀排布，会导致有些地方的傅立叶系数是0，不利于做reconstruction</li>
    </ul>
  </li>
  <li>工厂生产的问题：
    <ul>
      <li>生产的一个filter的尺寸最小在10um左右，但是目前的手机用的单像素尺寸在<a href="https://www.igao7.com/news/202204/Xo2jTjWP67ayPtIA.html">0.6～2.4um</a>(单像素2.4um已经是非常好的CMOS了)，不得不用类似quad bayer的做法让一个filter对应多个像素，无疑会影响调制的精度</li>
      <li>透镜部分和成像部分不贴合：透镜距离sensor的感光区域有大约3um的垂直距离，会导致像素中有效信息进一步降低</li>
      <li>透镜偏移，没有和像素的位置对应：导致传感器之间的差异很大</li>
    </ul>
  </li>
</ul>

<p><span id="ref"></span>
[1]  Lidan Miao and Hairong Qi. “The Design and Evaluation of a Generic Method for Generating Mosaicked Multispectral Filter Arrays.” <em>IEEE Transactions on Image Processing</em> 15, no. 9 (September 2006): 2780–91. <a href="https://doi.org/10.1109/TIP.2006.877315">https://doi.org/10.1109/TIP.2006.877315</a>.</p>

<p>[2] Aggarwal, Hemant Kumar, and Angshul Majumdar. “Single-Sensor Multi-Spectral Image Demosaicing Algorithm Using Learned Interpolation Weights.” In <em>2014 IEEE Geoscience and Remote Sensing Symposium</em>, 2011–14. Quebec City, QC: IEEE, 2014. <a href="https://doi.org/10.1109/IGARSS.2014.6946857">https://doi.org/10.1109/IGARSS.2014.6946857</a>.</p>

<p>[3] Yasuma, Fumihito, Tomoo Mitsunaga, Daisuke Iso, and Shree K. Nayar. “Generalized Assorted Pixel Camera: Postcapture Control of Resolution, Dynamic Range, and Spectrum.” <em>IEEE Transactions on Image Processing</em> 19, no. 9 (September 2010): 2241–53. <a href="https://doi.org/10.1109/TIP.2010.2046811">https://doi.org/10.1109/TIP.2010.2046811</a>.</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="algorithm" /><category term="content" /><category term="sensor" /><summary type="html"><![CDATA[调制]]></summary></entry><entry><title type="html">双十二装机</title><link href="https://roshameow.github.io//personal_homepage/docs/photo/new-computer/" rel="alternate" type="text/html" title="双十二装机" /><published>2023-12-22T00:00:00+00:00</published><updated>2023-12-22T16:21:32+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/photo/new-computer</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/photo/new-computer/"><![CDATA[<p>趁着双十二激情下单，前后不到一天，选的配件都没什么性价比。</p>

<h3 id="配置">配置：</h3>
<ul>
  <li>不想再等了，买了4080</li>
  <li>cpu实际换了7900x3d</li>
  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231222024142.png" alt="Pasted image 20231222024142.png" width="400" /></li>
</ul>

<h3 id="外观">外观：</h3>
<ul>
  <li>买完发现灯光处于一个过饱和状态，显卡还带屏幕。不过再增加发光的东西就怎么都看不顺眼了，暂时只能保持这样的状态。</li>
  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231222072754.png" alt="Pasted image 20231222072754.png" width="300" /> 	<img src="/personal_homepage/docs/attachment/Pasted%20image%2020231222071842.png" alt="Pasted image 20231222071842.png" width="250" /></li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="photo" /><category term="content" /><category term="device" /><category term="life" /><summary type="html"><![CDATA[趁着双十二激情下单，前后不到一天，选的配件都没什么性价比。]]></summary></entry><entry><title type="html">小红书学到的几种图片调色</title><link href="https://roshameow.github.io//personal_homepage/docs/photo/photo-color/" rel="alternate" type="text/html" title="小红书学到的几种图片调色" /><published>2023-12-21T00:00:00+00:00</published><updated>2023-12-22T15:10:39+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/photo/photo-color</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/photo/photo-color/"><![CDATA[<p>感觉共同点是：为了追求画面简洁有冲击力，不约而同的压缩了亮度和颜色的动态范围。</p>
<h2 id="版画滤镜">版画滤镜</h2>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221113525.png" alt="Pasted image 20231221113525.png" width="300" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221113539.png" alt="Pasted image 20231221113539.png" width="300" /></p>
<ul>
  <li>醒图4个滤镜依次叠加，透明度依次减小
    <ul>
      <li>千禧-&gt;幻想蝴蝶</li>
      <li>新中式-&gt;空谷</li>
      <li>千禧-&gt;数字彩虹</li>
      <li>新中式-&gt;烟霞</li>
    </ul>
  </li>
  <li>实际实验结果
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221114420.png" alt="Pasted image 20231221114420.png" width="300" /></li>
      <li>调整亮度曲线如图，暗部切断，亮部反色，压缩动态范围</li>
      <li>添加噪声</li>
      <li>去掉图片原有颜色</li>
      <li>按照亮暗调节新的颜色</li>
    </ul>
  </li>
</ul>

<h2 id="白夜之树">白夜之树</h2>

<ul>
  <li>
    <p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221121648.png" alt="Pasted image 20231221121648.png" width="300" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221121655.png" alt="Pasted image 20231221121655.png" width="300" /></p>
  </li>
  <li>
    <p>方法：</p>
    <ul>
      <li>醒图滤镜：千禧-&gt;午夜 把照片变成蓝色，就是为了伪造天空部分吧？</li>
      <li>曲线反色：画面要避开一些常见的物品，不然很容易看出其实是反色，就感觉出戏了</li>
      <li>光感-100：作用是，把有颜色的部分变暗？</li>
    </ul>
  </li>
</ul>

<h2 id="单色涂鸦">单色涂鸦</h2>

<p><img src="/personal_homepage/docs/attachment/IMG_8192.jpg" alt="IMG_8192.jpg" width="300" />   <img src="/personal_homepage/docs/attachment/IMG_8193.jpg" alt="IMG_8193.jpg" width="300" /></p>

<ul>
  <li>方法：
    <ul>
      <li>醒图特效：单色填充：可能是根据饱和度？把饱和度高的部分填充了粉色。因为图片里红色和蓝色都被填充了，所以不是根据主体色识别。其他位置变为灰度图</li>
      <li>醒图特效：单色涂鸦：检测边缘，设置白边
        <ul>
          <li>可能是检测闭合的部分，处理成涂鸦的斜线</li>
          <li>检测线条少的位置加文字</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="photo" /><category term="content" /><category term="醒图" /><summary type="html"><![CDATA[感觉共同点是：为了追求画面简洁有冲击力，不约而同的压缩了亮度和颜色的动态范围。 版画滤镜]]></summary></entry><entry><title type="html">用 jekyll+obsidian生成个人主页并部署到 github pages的工作流</title><link href="https://roshameow.github.io//personal_homepage/docs/webpage/jekyll-blog-deploy/" rel="alternate" type="text/html" title="用 jekyll+obsidian生成个人主页并部署到 github pages的工作流" /><published>2023-12-20T00:00:00+00:00</published><updated>2023-12-28T01:26:34+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/webpage/jekyll-blog-deploy</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/webpage/jekyll-blog-deploy/"><![CDATA[<p>用jekyll的原因无需多说。这样配置好工作流之后，除了编写内容基本没有什么麻烦的操作(登录在线网页，换编辑器，按照统一格式改文件名之类在我看来都很麻烦。。)。</p>
<h3 id="ruby的环境管理包管理方式">Ruby的环境管理，包管理方式</h3>

<ul>
  <li><strong>管理顺序：</strong> churby -&gt; ruby -&gt; bundle -&gt; gem -&gt; jekyll
    <ul>
      <li><strong>ruby：</strong> 是经常在 web 开发中使用的一种动态语言。</li>
      <li><strong>churby：</strong> Ruby 的环境管理工具，用于管理不同版本的 Ruby。</li>
      <li><strong>gem：</strong> Ruby 编写的软件包的统称，Jekyll 也是一个 gem。</li>
      <li><strong>bundler：</strong> 用于管理项目 gem 的工具，根据 Gemfile 管理不同版本的 gem。bundler自己本身也是gem。</li>
    </ul>
  </li>
</ul>

<p>如果用 Python 来类比，关系大概是这样：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">ruby</th>
      <th style="text-align: center">python</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">churby 版本号</code></td>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">conda create -n my_env python=版本号;</code><br /> <code class="language-plaintext highlighter-rouge">conda activate my_env</code></td>
    </tr>
    <tr>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">gem install 某个包</code></td>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">pip install 某个包</code></td>
    </tr>
    <tr>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">bundler install</code></td>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">pip install -r requirements.txt</code></td>
    </tr>
  </tbody>
</table>

<h3 id="具体配置流程">具体配置流程</h3>

<ol>
  <li><strong>安装ruby</strong>
    <ul>
      <li>按照 <a href="https://jekyllrb.com/docs/installation/macos/">Jekyll 网站</a> 的方法，安装 Chruby 和 Ruby-install。</li>
      <li>切换到对应版本的 Ruby。</li>
      <li>在 macOS 中我遇到的问题是系统中已经安装了 Miniforge3，其中包含了 OpenSSL，但不能正常使用。通过 <a href="https://medium.com/@canerten/building-ruby-3-1-3-fails-with-openssl-1-0-2o-1-on-m1-apple-silicon-mac-with-brew-89d7e550420b">Homebrew 安装 OpenSSL@1.1</a> 解决。</li>
    </ul>
  </li>
  <li><strong>本地配置</strong>
    <ul>
      <li>选择一个博客主题，例如 <a href="https://github.com/mmistakes/so-simple-theme">So Simple</a>，fork 对应主题的 GitHub 代码，然后根据自己的需要修改 <code class="language-plaintext highlighter-rouge">_config.yml</code>。</li>
      <li>运行 <code class="language-plaintext highlighter-rouge">bundler install</code> 安装项目所需的 gem。</li>
      <li>运行 <code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code>，此时可以在本地进行预览。</li>
    </ul>
  </li>
  <li><strong>利用 GitHub Actions 部署到 GitHub Pages</strong>
    <ul>
      <li>将下面的 Action 脚本添加到项目的 <code class="language-plaintext highlighter-rouge">.github/workflows/main.yml</code> 文件。等待执行完成，可以通过浏览器访问 <code class="language-plaintext highlighter-rouge">http://name.github.io/base_url/</code>。</li>
    </ul>

    <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="na">name</span><span class="pi">:</span> <span class="s">Homepage Project Deploy to GitHub Pages</span>
	
 <span class="na">on</span><span class="pi">:</span>
   <span class="na">push</span><span class="pi">:</span>
     <span class="na">branches</span><span class="pi">:</span>
       <span class="pi">-</span> <span class="s">master</span> <span class="c1">#设置每次将代码推送到 master 分支时自动执行</span>
<span class="err">	</span>
 <span class="na">permissions</span><span class="pi">:</span>
   <span class="na">contents</span><span class="pi">:</span> <span class="s">write</span>
	
 <span class="na">jobs</span><span class="pi">:</span>
     <span class="na">deploy</span><span class="pi">:</span>
       <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
       <span class="na">steps</span><span class="pi">:</span>
       <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout repository</span>
         <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v4</span>
	
       <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Set up ruby and gems</span>
         <span class="na">uses</span><span class="pi">:</span> <span class="s">ruby/setup-ruby@v1</span> <span class="c1">#如果用ruby install的话好像没法切换版本</span>
         <span class="na">with</span><span class="pi">:</span>
           <span class="na">ruby-version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3.2'</span> <span class="c1"># Not needed with a .ruby-version file</span>
           <span class="na">bundler-cache</span><span class="pi">:</span> <span class="kc">true</span> <span class="c1"># runs 'bundle install' and caches installed gems automatically</span>
<span class="err">	</span>
       <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build and deploy</span>
         <span class="na">run</span><span class="pi">:</span> <span class="pi">|</span>
             <span class="s">bundle exec jekyll build</span>
             <span class="s">echo 'personal-homepage' &gt; _site/CNAME</span>
             <span class="s">cp _site/index.html _site/404.html</span>
             <span class="s">touch _site/.nojekyll #必须的，gh-pages分支没有环境，必须要跳过build</span>
         <span class="na">env</span><span class="pi">:</span>
             <span class="na">JEKYLL_ENV</span><span class="pi">:</span> <span class="s">production</span>
	
       <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy to GitHub Pages</span>
         <span class="na">uses</span><span class="pi">:</span> <span class="s">JamesIves/github-pages-deploy-action@releases/v3</span>
         <span class="na">with</span><span class="pi">:</span>
             <span class="na">GITHUB_TOKEN</span><span class="pi">:</span> <span class="s">$$</span>
             <span class="na">BRANCH</span><span class="pi">:</span> <span class="s">gh-pages</span>
             <span class="na">FOLDER</span><span class="pi">:</span> <span class="s">_site</span>
</code></pre></div>    </div>
    <ul>
      <li>因为actions里有写入操作，需要先去账户生成一个有权限的token。具体参考<a href="https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens">github文档</a></li>
      <li>还需要在repo setting里把gh-pages<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site">设置为pages对应的branch</a> 。</li>
    </ul>
  </li>
  <li><strong>更新内容：</strong>
    <ul>
      <li>在 <code class="language-plaintext highlighter-rouge">docs/_posts</code> 中更新内容。因为我平时笔记都是在 Obsidian 中编辑的，决定在 Obsidian 中设置一个文件夹，然后将每篇笔记同步到 <code class="language-plaintext highlighter-rouge">docs/_posts</code> 文件夹中。</li>
      <li>用obsidian的优点：
        <ul>
          <li>Markdown 格式, 包括Front Matter在 Obsidian 中显示非常舒适。</li>
          <li>
            <p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221194128.png" alt="Pasted image 20231221194128.png" width="600" /></p>
          </li>
          <li>利用 Obsidian 的<a href="https://github.com/beaussan/update-time-on-edit-obsidian"><code class="language-plaintext highlighter-rouge">update-time-on-edit</code></a> 插件，可以自动更新 <code class="language-plaintext highlighter-rouge">last_modified_date</code>。</li>
          <li>利用 Obsidian 的 <code class="language-plaintext highlighter-rouge">unique note</code> 插件，可以通过点击生成符合格式的笔记模板。</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>同步：</strong>
    <ul>
      <li>大部分 Obsidian 的 Markdown 格式是直接兼容的。为了同步，我编写了一个 Bash 脚本<code class="language-plaintext highlighter-rouge">sync_homepage.sh</code> ，把双链改成 Markdown 链接，并将文章中链接的图片同步到 <code class="language-plaintext highlighter-rouge">docs/attachment</code> 文件夹下。</li>
      <li>注意代码块可能会解析错误，所以在脚本里把ruby的代码块都替换成Liquid语法。</li>
      <li>问题：目前不支持增量同步，每次同步都需要遍历所有文件，但由于都是文本文件，影响较小。</li>
    </ul>
  </li>
  <li><strong>和raycast联动:</strong>
    <ul>
      <li>然后给脚本设置raycast的标记。这样每次在obsidian里面编辑完，直接用raycast快捷键同步。
 <img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221195227.png" alt="Pasted image 20231221195227.png" width="600" /></li>
    </ul>
  </li>
</ol>

<p><code class="language-plaintext highlighter-rouge">sync_homepage.sh</code> 示范：</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby">	<span class="c1">#!/bin/bash</span>
	
	<span class="c1"># Required parameters:</span>
	<span class="c1"># @raycast.schemaVersion 1</span>
	<span class="c1"># @raycast.title sync_homepage</span>
	<span class="c1"># @raycast.mode compact</span>
	
	<span class="c1"># obsidian文件夹路径</span>
	<span class="n">source_folder</span><span class="o">=</span><span class="s2">"..."</span>
	
	<span class="c1"># homepage项目doc/_post文件夹路径</span>
	<span class="n">target_folder</span><span class="o">=</span><span class="s2">".../docs/_posts"</span>
	
	<span class="c1"># 附件源文件夹路径</span>
	<span class="n">attachment_source</span><span class="o">=</span><span class="s2">"..."</span>
	
	<span class="c1"># 附件目标文件夹路径</span>
	<span class="n">attachment_target</span><span class="o">=</span><span class="s2">".../docs/attachment"</span>
	
	<span class="c1"># 检查附件目标文件夹是否存在，如果不存在则创建</span>
	<span class="k">if</span> <span class="p">[</span> <span class="o">!</span> <span class="o">-</span><span class="n">d</span> <span class="s2">"$$attachment_target"</span> <span class="p">];</span> <span class="k">then</span>
		<span class="n">mkdir</span> <span class="o">-</span><span class="nb">p</span> <span class="s2">"$$attachment_target"</span>
	<span class="n">fi</span>
	
	<span class="c1"># 遍历源文件夹中的所有 .md 文件</span>
	<span class="k">for</span> <span class="n">file</span> <span class="k">in</span> <span class="s2">"$$source_folder"</span><span class="o">/*</span><span class="p">.</span><span class="nf">md</span><span class="p">;</span> <span class="k">do</span>
		<span class="c1"># 获取文件名（不包含路径）</span>
		<span class="n">filename</span><span class="o">=</span><span class="vg">$$</span><span class="p">(</span><span class="n">basename</span> <span class="s2">"$$file"</span><span class="p">)</span>
		
		<span class="c1"># 复制 .md 文件到目标文件夹</span>
		<span class="n">cp</span> <span class="s2">"$$file"</span> <span class="s2">"$$target_folder/$$filename"</span>
		<span class="n">echo</span> <span class="s2">"Copying $$file to $$target_folder/$$filename"</span>
		<span class="c1"># 遍历文件中的每个匹配的图片链接，提取图片文件名</span>
		<span class="n">grep</span> <span class="o">-</span><span class="n">oE</span> <span class="s2">"!</span><span class="se">\[\[</span><span class="s2">([^]]+)</span><span class="se">\]\]</span><span class="s2">"</span> <span class="s2">"$$target_folder/$$filename"</span> <span class="o">|</span> <span class="k">while</span> <span class="no">IFS</span><span class="o">=</span> <span class="n">read</span> <span class="o">-</span><span class="n">r</span> <span class="n">image_link</span><span class="p">;</span> <span class="k">do</span>
	
	
			<span class="n">image_name</span><span class="o">=</span><span class="vg">$$</span><span class="p">(</span><span class="n">echo</span> <span class="s2">"$$image_link"</span> <span class="o">|</span> <span class="n">sed</span> <span class="o">-</span><span class="no">E</span> <span class="s1">'s/!\[\[([^|]+)\|[^]]+\]\]/\1/g'</span><span class="p">)</span> 
			<span class="n">image_width</span><span class="o">=</span><span class="vg">$$</span><span class="p">(</span><span class="n">echo</span> <span class="s2">"$$image_link"</span> <span class="o">|</span> <span class="n">grep</span> <span class="o">-</span><span class="n">o</span> <span class="o">-</span><span class="no">E</span> <span class="s1">'\|\d+'</span> <span class="o">|</span> <span class="n">sed</span> <span class="s1">'s/|//'</span><span class="p">)</span>
	
			<span class="n">sed</span> <span class="o">-</span><span class="n">i</span> <span class="s1">''</span> <span class="o">-</span><span class="no">E</span> <span class="s1">'s/!\[\[([^|]+)\|'</span><span class="vg">$$</span><span class="p">{</span><span class="n">image_width</span><span class="p">}</span><span class="s1">'\]\]/\!\[\1\]\({{ '</span><span class="p">\</span><span class="s1">''</span><span class="p">\</span><span class="sr">/docs\/attachment\/\1'\'' | relative_url }}\){:width="'$${image_width}'"}/</span><span class="n">g</span><span class="s1">' "$$target_folder/$$filename"
	
			# 复制附件文件到目标附件文件夹
			cp "$$attachment_source/$$image_name" "$$attachment_target/"
			echo "Copying $$attachment_source/$$image_name to $$attachment_target/"
		done
		# 替换ruby 代码块为Liquid语法
		...
		# 替换latex公式，Replace $$...$$ with $$$$...$$$$ using sed
		sed -i '' -E '</span><span class="n">s</span><span class="o">/</span><span class="p">\</span><span class="vg">$$</span><span class="o">/</span><span class="p">\</span><span class="vg">$$</span><span class="p">\</span><span class="vg">$$</span><span class="o">/</span><span class="n">g</span><span class="err">'</span> <span class="s2">"$$target_folder/$$filename"</span>
	<span class="n">done</span>
	</code></pre></figure>

<h3 id="其他配置">其他配置</h3>

<ol>
  <li><strong>配置latex风格的公式：</strong>
    <ul>
      <li>用<a href="https://stackoverflow.com/questions/26275645/how-to-support-latex-in-github-pages">mathjax@3</a> : 只支持<code class="language-plaintext highlighter-rouge">$$...$$</code>风格的语法，要自己在脚本里转换一下</li>
    </ul>
  </li>
  <li>配置google analysis:
    <ul>
      <li>我用的模版比较老，需要<a href="https://blog.jakelee.co.uk/migrating-jekyll-minima-from-ua-to-ga4/">把Universal analysis换成GA4</a></li>
    </ul>
  </li>
</ol>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="WebPage" /><category term="content" /><category term="jekyll" /><category term="markdown" /><category term="obsidian" /><category term="raycast" /><summary type="html"><![CDATA[用jekyll的原因无需多说。这样配置好工作流之后，除了编写内容基本没有什么麻烦的操作(登录在线网页，换编辑器，按照统一格式改文件名之类在我看来都很麻烦。。)。 Ruby的环境管理，包管理方式]]></summary></entry><entry><title type="html">Hidden Post</title><link href="https://roshameow.github.io//personal_homepage/docs/hidden-post/" rel="alternate" type="text/html" title="Hidden Post" /><published>2018-02-25T00:00:00+00:00</published><updated>2018-02-25T00:00:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/hidden-post</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/hidden-post/"><![CDATA[<p>This post has YAML Front Matter of <code class="language-plaintext highlighter-rouge">hidden: true</code> and should not appear in <code class="language-plaintext highlighter-rouge">paginator.posts</code>.</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><summary type="html"><![CDATA[This post has YAML Front Matter of hidden: true and should not appear in paginator.posts.]]></summary></entry><entry><title type="html">MathJax Example</title><link href="https://roshameow.github.io//personal_homepage/docs/mathjax-example/" rel="alternate" type="text/html" title="MathJax Example" /><published>2015-08-10T12:08:50+00:00</published><updated>2015-08-10T12:08:50+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/mathjax-example</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/mathjax-example/"><![CDATA[<p><a href="http://www.mathjax.org/">MathJax</a> is a simple, yet powerful, way of
including Tex/LaTex/MathML based mathematics in HTML webpages.</p>

<h2 id="usage">Usage</h2>

<p>To enable MathJax support configure your <code class="language-plaintext highlighter-rouge">_config.xml</code> to:</p>
<ul>
  <li>Set <code class="language-plaintext highlighter-rouge">kramdown</code> as the Markdown parser.</li>
  <li>Enable MathJax.</li>
</ul>

<p>The version of MathJax enabled is v3.</p>

<p>An example setting for <code class="language-plaintext highlighter-rouge">_config.xml</code> is shown below:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">markdown</span><span class="pi">:</span> <span class="s">kramdown</span>
<span class="na">mathjax</span><span class="pi">:</span>
  <span class="na">enable</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">combo</span><span class="pi">:</span> <span class="s2">"</span><span class="s">tex-svg"</span>
  <span class="na">tags</span><span class="pi">:</span> <span class="s2">"</span><span class="s">ams"</span>
</code></pre></div></div>

<p>Use <code class="language-plaintext highlighter-rouge">$$</code> as delimiters to enable TeX math mode, both for inline and display (i.e. block) rendering.</p>

<p>Here is an example equation that is inline: \(a^2 + b^2 = c^2\), where
\(a\), \(b\), and \(c\) are variables.</p>

<p>Here is a block rendering with no default equation numbering:</p>

\[\frac{1}{n^{2}}\]

<p>And, below is a block using the <code class="language-plaintext highlighter-rouge">\begin{equation}</code> and
<code class="language-plaintext highlighter-rouge">\end{equation}</code> LaTeX delimiters.  This equation will be numbered in
the <code class="language-plaintext highlighter-rouge">ams</code> and <code class="language-plaintext highlighter-rouge">all</code> setting for <code class="language-plaintext highlighter-rouge">mathjax.tags</code>.</p>

\[\begin{equation}
\mathbf{X}_{n,p} = \mathbf{A}_{n,k} \mathbf{B}_{k,p}    \label{test}
\end{equation}\]

<p>If equation numbering is turned on, we should see an equation number here: \(\eqref{test}\).</p>

<p>An example using the <code class="language-plaintext highlighter-rouge">{align}</code> LaTeX environment is below.  The first equation has a <code class="language-plaintext highlighter-rouge">\notag</code> directive.</p>

\[\begin{align}
(x + y) (x - y) &amp;= x^2 + xy - xy + y^2   \notag \\
    &amp;= x^2 - y^2
\end{align}\]]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><summary type="html"><![CDATA[MathJax is a simple, yet powerful, way of including Tex/LaTex/MathML based mathematics in HTML webpages.]]></summary></entry><entry><title type="html">Markup: Syntax Highlighting</title><link href="https://roshameow.github.io//personal_homepage/docs/markup-syntax-highlighting/" rel="alternate" type="text/html" title="Markup: Syntax Highlighting" /><published>2013-08-16T00:00:00+00:00</published><updated>2017-03-09T15:27:01+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/markup-syntax-highlighting</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/markup-syntax-highlighting/"><![CDATA[<p>Syntax highlighting is a feature that displays source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a structured language such as a programming language or a markup language as both structures and syntax errors are visually distinct. Highlighting does not affect the meaning of the text itself; it is intended only for human readers.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<h2 id="gfm-code-blocks">GFM Code Blocks</h2>

<p>GitHub Flavored Markdown <a href="https://help.github.com/articles/creating-and-highlighting-code-blocks/">fenced code blocks</a> are supported by default with Jekyll. You may need to update your <code class="language-plaintext highlighter-rouge">_config.yml</code> file to enable them if you’re using an older version.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">kramdown</span><span class="pi">:</span>
  <span class="na">input</span><span class="pi">:</span> <span class="s">GFM</span>
</code></pre></div></div>

<p>Here’s an example of a CSS code snippet written in GFM:</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">#container</span> <span class="p">{</span>
  <span class="nl">float</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
  <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="m">-240px</span> <span class="m">0</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Yet another code snippet for demonstration purposes:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">class</span> <span class="nc">TagIndex</span> <span class="o">&lt;</span> <span class="no">Page</span>
    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">site</span><span class="p">,</span> <span class="n">base</span><span class="p">,</span> <span class="n">dir</span><span class="p">,</span> <span class="n">tag</span><span class="p">)</span>
      <span class="vi">@site</span> <span class="o">=</span> <span class="n">site</span>
      <span class="vi">@base</span> <span class="o">=</span> <span class="n">base</span>
      <span class="vi">@dir</span> <span class="o">=</span> <span class="n">dir</span>
      <span class="vi">@name</span> <span class="o">=</span> <span class="s1">'index.html'</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">process</span><span class="p">(</span><span class="vi">@name</span><span class="p">)</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">read_yaml</span><span class="p">(</span><span class="no">File</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">base</span><span class="p">,</span> <span class="s1">'_layouts'</span><span class="p">),</span> <span class="s1">'tag_index.html'</span><span class="p">)</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'tag'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tag</span>
      <span class="n">tag_title_prefix</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">config</span><span class="p">[</span><span class="s1">'tag_title_prefix'</span><span class="p">]</span> <span class="o">||</span> <span class="s1">'Tagged: '</span>
      <span class="n">tag_title_suffix</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">config</span><span class="p">[</span><span class="s1">'tag_title_suffix'</span><span class="p">]</span> <span class="o">||</span> <span class="s1">'&amp;#8211;'</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'title'</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"</span><span class="si">#{</span><span class="n">tag_title_prefix</span><span class="si">}#{</span><span class="n">tag</span><span class="si">}</span><span class="s2">"</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'description'</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"An archive of posts tagged </span><span class="si">#{</span><span class="n">tag</span><span class="si">}</span><span class="s2">."</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<h2 id="jekyll-highlight-liquid-tag">Jekyll Highlight Liquid Tag</h2>

<p>Jekyll also has built-in support for syntax highlighting of code snippets using either Rouge or Pygments, using a dedicated Liquid tag as follows:</p>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">highlight</span><span class="w"> </span><span class="nv">scss</span><span class="w"> </span><span class="cp">%}</span>
.highlight {
  margin: 0;
  padding: 1em;
  font-family: $monospace;
  font-size: $type-size-7;
  line-height: 1.8;
}
<span class="cp">{%</span><span class="w"> </span><span class="nt">endhighlight</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div>

<p>And the output will look like this:</p>

<figure class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="nc">.highlight</span> <span class="p">{</span>
  <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1em</span><span class="p">;</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="nv">$monospace</span><span class="p">;</span>
  <span class="nl">font-size</span><span class="p">:</span> <span class="nv">$type-size-7</span><span class="p">;</span>
  <span class="nl">line-height</span><span class="p">:</span> <span class="m">1</span><span class="mi">.8</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<p>Here’s an example of a code snippet using the Liquid tag and <code class="language-plaintext highlighter-rouge">linenos</code> enabled.</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="nt">&lt;nav</span> <span class="na">class=</span><span class="s">"pagination"</span> <span class="na">role=</span><span class="s">"navigation"</span><span class="nt">&gt;</span>
  {% if page.previous %}
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ site.url }}{{ page.previous.url }}"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">title=</span><span class="s">"{{ page.previous.title }}"</span><span class="nt">&gt;</span>Previous article<span class="nt">&lt;/a&gt;</span>
  {% endif %}
  {% if page.next %}
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ site.url }}{{ page.next.url }}"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">title=</span><span class="s">"{{ page.next.title }}"</span><span class="nt">&gt;</span>Next article<span class="nt">&lt;/a&gt;</span>
  {% endif %}
<span class="nt">&lt;/nav&gt;</span><span class="c">&lt;!-- /.pagination --&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="code-blocks-in-lists">Code Blocks in Lists</h2>

<p>Indentation matters. Be sure the indent of the code block aligns with the first non-space character after the list item marker (e.g., <code class="language-plaintext highlighter-rouge">1.</code>). Usually this will mean indenting 3 spaces instead of 4.</p>

<ol>
  <li>Do step 1.</li>
  <li>
    <p>Now do this:</p>

    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span>
</code></pre></div>    </div>
  </li>
  <li>Now you can do this.</li>
</ol>

<h2 id="github-gist-embed">GitHub Gist Embed</h2>

<p>GitHub Gist embeds can also be used:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://gist.github.com/mmistakes/77c68fbb07731a456805a7b473f47841.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<p>Which outputs as:</p>

<script src="https://gist.github.com/mmistakes/77c68fbb07731a456805a7b473f47841.js"></script>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><a href="http://en.wikipedia.org/wiki/Syntax_highlighting">http://en.wikipedia.org/wiki/Syntax_highlighting</a> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="code" /><category term="syntax highlighting" /><summary type="html"><![CDATA[Post displaying the various ways one can highlight code blocks with Jekyll. Some options include standard Markdown, GitHub Flavored Markdown, and Jekyll's `{% highlight %}` tag.]]></summary></entry><entry><title type="html">Markup: HTML Elements and Formatting</title><link href="https://roshameow.github.io//personal_homepage/docs/markup/markup-html-elements-and-formatting/" rel="alternate" type="text/html" title="Markup: HTML Elements and Formatting" /><published>2013-01-11T00:00:00+00:00</published><updated>2018-02-01T15:16:49+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/markup/markup-html-elements-and-formatting</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/markup/markup-html-elements-and-formatting/"><![CDATA[<p>A variety of common HTML elements to demonstrate the theme’s stylesheet and verify they have been styled appropriately.</p>

<h1 id="header-one">Header one</h1>

<h2 id="header-two">Header two</h2>

<h3 id="header-three">Header three</h3>

<h4 id="header-four">Header four</h4>

<h5 id="header-five">Header five</h5>

<h6 id="header-six">Header six</h6>

<h2 id="blockquotes">Blockquotes</h2>

<p>Single line blockquote:</p>

<blockquote>
  <p>Stay hungry. Stay foolish.</p>
</blockquote>

<p>Multi line blockquote with a cite reference:</p>

<blockquote>
  <p>People think focus means saying yes to the thing you’ve got to focus on. But that’s not what it means at all. It means saying no to the hundred other good ideas that there are. You have to pick carefully. I’m actually as proud of the things we haven’t done as the things I have done. Innovation is saying no to 1,000 things.</p>

  <footer><strong>Steve Jobs</strong> &mdash; Apple Worldwide Developers' Conference, 1997</footer>
</blockquote>

<p>Quoted text inline using <code class="language-plaintext highlighter-rouge">&lt;q&gt;</code> element:</p>

<p>Luke continued, <q>And then she called him a <q>scruffy-looking nerf-herder</q>! I think I’ve got a chance!</q> The poor naive fool&hellip;</p>

<h2 id="tables">Tables</h2>

<table>
  <thead>
    <tr>
      <th>Employee</th>
      <th>Salary</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="#">John Doe</a></td>
      <td>$1</td>
      <td>Because that’s all Steve Jobs needed for a salary.</td>
    </tr>
    <tr>
      <td><a href="#">Jane Doe</a></td>
      <td>$100K</td>
      <td>For all the blogging she does.</td>
    </tr>
    <tr>
      <td><a href="#">Fred Bloggs</a></td>
      <td>$100M</td>
      <td>Pictures are worth a thousand words, right? So Jane × 1,000.</td>
    </tr>
    <tr>
      <td><a href="#">Jane Bloggs</a></td>
      <td>$100B</td>
      <td>With hair like that?! Enough said.</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Header1</th>
      <th style="text-align: center">Header2</th>
      <th style="text-align: right">Header3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">cell1</td>
      <td style="text-align: center">cell2</td>
      <td style="text-align: right">cell3</td>
    </tr>
    <tr>
      <td style="text-align: left">cell4</td>
      <td style="text-align: center">cell5</td>
      <td style="text-align: right">cell6</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td style="text-align: left">cell1</td>
      <td style="text-align: center">cell2</td>
      <td style="text-align: right">cell3</td>
    </tr>
    <tr>
      <td style="text-align: left">cell4</td>
      <td style="text-align: center">cell5</td>
      <td style="text-align: right">cell6</td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <td style="text-align: left">Foot1</td>
      <td style="text-align: center">Foot2</td>
      <td style="text-align: right">Foot3</td>
    </tr>
  </tfoot>
</table>

<h2 id="definition-lists">Definition Lists</h2>

<dl>
  <dt>Definition List Title</dt>
  <dd>Definition list division.</dd>
  <dt>Startup</dt>
  <dd>A startup company or startup is a company or temporary organization designed to search for a repeatable and scalable business model.</dd>
  <dt>#dowork</dt>
  <dd>Coined by Rob Dyrdek and his personal body guard Christopher “Big Black” Boykins, “Do Work” works as a self motivator, to motivating your friends.</dd>
  <dt>Do It Live</dt>
  <dd>I’ll let Bill O’Reilly <a href="https://www.youtube.com/watch?v=O_HyZ5aW76c" title="We'll Do It Live">explain</a> this one.</dd>
</dl>

<h2 id="unordered-lists-nested">Unordered Lists (Nested)</h2>

<ul>
  <li>List item one
    <ul>
      <li>List item one
        <ul>
          <li>List item one</li>
          <li>List item two</li>
          <li>List item three</li>
          <li>List item four</li>
        </ul>
      </li>
      <li>List item two</li>
      <li>List item three</li>
      <li>List item four</li>
    </ul>
  </li>
  <li>List item two</li>
  <li>List item three</li>
  <li>List item four</li>
</ul>

<h2 id="ordered-list-nested">Ordered List (Nested)</h2>

<ol>
  <li>List item one
    <ol>
      <li>List item one
        <ol>
          <li>List item one</li>
          <li>List item two</li>
          <li>List item three</li>
          <li>List item four</li>
        </ol>
      </li>
      <li>List item two</li>
      <li>List item three</li>
      <li>List item four</li>
    </ol>
  </li>
  <li>List item two</li>
  <li>List item three</li>
  <li>List item four</li>
</ol>

<h2 id="buttons">Buttons</h2>

<p>Make any link standout more when applying the <code class="language-plaintext highlighter-rouge">.btn</code> class.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span class="na">class=</span><span class="s">"btn--success"</span><span class="nt">&gt;</span>Success Button<span class="nt">&lt;/a&gt;</span>
</code></pre></div></div>

<p><a href="#" class="btn">Default Button</a>
<a href="#" class="btn btn--primary">Primary Button</a>
<a href="#" class="btn btn--accent">Accent Button</a>
<a href="#" class="btn btn--success">Success Button</a>
<a href="#" class="btn btn--warning">Warning Button</a>
<a href="#" class="btn btn--danger">Danger Button</a>
<a href="#" class="btn btn--info">Info Button</a>
<a href="#" class="btn btn--inverse">Inverse Button</a>
<a href="#" class="btn btn--light-outline">Light Outline Button</a></p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nv">Default Button Text</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn}
<span class="p">[</span><span class="nv">Primary Button Text</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--primary}
<span class="p">[</span><span class="nv">Accent Button Text</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--accent}
<span class="p">[</span><span class="nv">Success Button Text</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--success}
<span class="p">[</span><span class="nv">Warning Button Text</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--warning}
<span class="p">[</span><span class="nv">Danger Button Text</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--danger}
<span class="p">[</span><span class="nv">Info Button Text</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--info}
<span class="p">[</span><span class="nv">Inverse Button</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--inverse}
<span class="p">[</span><span class="nv">Light Outline Button</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--light-outline}
</code></pre></div></div>

<p><a href="#" class="btn btn--primary btn--x-large">X-Large Button</a>
<a href="#" class="btn btn--primary btn--large">Large Button</a>
<a href="#" class="btn btn--primary">Default Button</a>
<a href="#" class="btn btn--primary btn--small">Small Button</a></p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nv">X-Large Button</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--primary .btn--x-large}
<span class="p">[</span><span class="nv">Large Button</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--primary .btn--large}
<span class="p">[</span><span class="nv">Default Button</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--primary }
<span class="p">[</span><span class="nv">Small Button</span><span class="p">](</span><span class="sx">#link</span><span class="p">)</span>{: .btn .btn--primary .btn--small}
</code></pre></div></div>

<h2 id="notices">Notices</h2>

<p class="notice"><strong>Watch out!</strong> This paragraph of text has been <a href="#">emphasized</a> with the <code class="language-plaintext highlighter-rouge">{: .notice}</code> class.</p>

<p class="notice--primary"><strong>Watch out!</strong> This paragraph of text has been <a href="#">emphasized</a> with the <code class="language-plaintext highlighter-rouge">{: .notice--primary}</code> class.</p>

<p class="notice--accent"><strong>Watch out!</strong> This paragraph of text has been <a href="#">emphasized</a> with the <code class="language-plaintext highlighter-rouge">{: .notice--accent}</code> class.</p>

<p class="notice--info"><strong>Watch out!</strong> This paragraph of text has been <a href="#">emphasized</a> with the <code class="language-plaintext highlighter-rouge">{: .notice--info}</code> class.</p>

<p class="notice--warning"><strong>Watch out!</strong> This paragraph of text has been <a href="#">emphasized</a> with the <code class="language-plaintext highlighter-rouge">{: .notice--warning}</code> class.</p>

<p class="notice--success"><strong>Watch out!</strong> This paragraph of text has been <a href="#">emphasized</a> with the <code class="language-plaintext highlighter-rouge">{: .notice--success}</code> class.</p>

<p class="notice--danger"><strong>Watch out!</strong> This paragraph of text has been <a href="#">emphasized</a> with the <code class="language-plaintext highlighter-rouge">{: .notice--danger}</code> class.</p>

<h2 id="address-element">Address element</h2>

<address>
  1 Infinite Loop<br /> Cupertino, CA 95014<br /> United States
</address>

<h2 id="anchor-element-aka-link">Anchor element (aka. Link)</h2>

<p>This is an example of a <a href="http://apple.com" title="Apple">link</a>.</p>

<h2 id="abbreviation-element">Abbreviation element</h2>

<p>The abbreviation <abbr title="Cascading Style Sheets">CSS</abbr> stands for “Cascading Style Sheets”.</p>

<h2 id="cite-element">Cite element</h2>

<p>“Code is poetry.” —<cite>Automattic</cite></p>

<h2 id="code-element">Code element</h2>

<p>You will learn later on in these tests that <code class="language-plaintext highlighter-rouge">word-wrap: break-word;</code> will be your best friend.</p>

<h2 id="strike-element">Strike element</h2>

<p>This element will let you <strike>strikeout text</strike>.</p>

<h2 id="emphasize-element">Emphasize element</h2>

<p>The emphasize element should <em>italicize</em> text.</p>

<h2 id="insert-element">Insert element</h2>

<p>This element should denote <ins>inserted</ins> text.</p>

<h2 id="keyboard-element">Keyboard element</h2>

<p>This scarcely known element emulates <kbd>keyboard text</kbd>, which is usually styled like the <code class="language-plaintext highlighter-rouge">&lt;code&gt;</code> element.</p>

<h2 id="preformatted-element">Preformatted element</h2>

<p>This element styles large blocks of code.</p>

<pre>
.post-title {
	margin: 0 0 5px;
	font-weight: bold;
	font-size: 38px;
	line-height: 1.2;
	and here's a line of some really, really, really, really long text, just to see how the PRE element handles it and to find out how it overflows;
}
</pre>

<h2 id="quote-element">Quote element</h2>

<p><q>Developers, developers, developers…</q> –Steve Ballmer</p>

<h2 id="strong-element">Strong element</h2>

<p>This element shows <strong>bold text</strong>.</p>

<h2 id="subscript-element">Subscript element</h2>

<p>Getting our science styling on with H<sub>2</sub>O, which should push the “2” down.</p>

<h2 id="superscript-element">Superscript element</h2>

<p>Still sticking with science and Isaac Newton’s E = MC<sup>2</sup>, which should lift the 2 up.</p>

<h2 id="variable-element">Variable element</h2>

<p>This allows you to denote <var>variables</var>.</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="Markup" /><summary type="html"><![CDATA[A variety of common HTML elements to demonstrate the theme’s stylesheet and verify they have been styled appropriately.]]></summary></entry><entry><title type="html">Markup: Image Alignment</title><link href="https://roshameow.github.io//personal_homepage/docs/markup/markup-image-alignment/" rel="alternate" type="text/html" title="Markup: Image Alignment" /><published>2013-01-10T00:00:00+00:00</published><updated>2018-02-05T21:19:55+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/markup/markup-image-alignment</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/markup/markup-image-alignment/"><![CDATA[<p>The best way to demonstrate the ebb and flow of the various image positioning options is to nestle them snuggly among an ocean of words. Grab a paddle and let’s get started.</p>

<p>Assign classes with HTML:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"image.jpg"</span> <span class="na">class=</span><span class="s">"align-left"</span> <span class="na">alt=</span><span class="s">""</span><span class="nt">&gt;</span>
<span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"image.jpg"</span> <span class="na">class=</span><span class="s">"align-center"</span> <span class="na">alt=</span><span class="s">""</span><span class="nt">&gt;</span>
<span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"image.jpg"</span> <span class="na">class=</span><span class="s">"align-right"</span> <span class="na">alt=</span><span class="s">""</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p>Or use Kramdown and <a href="https://kramdown.gettalong.org/syntax.html#inline-attribute-lists">inline attribute lists</a>:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">left-aligned-image</span><span class="p">](</span><span class="sx">image.jpg</span><span class="p">)</span>{: .align-left}
<span class="p">![</span><span class="nv">center-aligned-image</span><span class="p">](</span><span class="sx">image.jpg</span><span class="p">)</span>{: .align-center}
<span class="p">![</span><span class="nv">right-aligned-image</span><span class="p">](</span><span class="sx">image.jpg</span><span class="p">)</span>{: .align-right}
</code></pre></div></div>

<p><img src="https://roshameow.github.io//personal_homepage/images/image-alignment-580x300.jpg" alt="image-center" class="align-center" /></p>

<p>The image should be <strong>centered</strong> with the <code class="language-plaintext highlighter-rouge">.align-center</code> class.</p>

<p><img src="https://roshameow.github.io//personal_homepage/images/image-alignment-150x150.jpg" alt="image-left" class="align-left" /> The rest of this paragraph is filler for the sake of seeing the text wrap around the 150×150 image, which is <strong>left aligned</strong> with the <code class="language-plaintext highlighter-rouge">.align-left</code> class.</p>

<p>As you can see the should be some space above, below, and to the right of the image. The text should not be creeping on the image. Creeping is just not right. Images need breathing room too. Let them speak like you words. Let them do their jobs without any hassle from the text. In about one more sentence here, we’ll see that the text moves from the right of the image down below the image in seamless transition. Again, letting the do it’s thing. Mission accomplished!</p>

<p>And now for a <strong>massively large image</strong> — it has <strong>no alignment</strong>.</p>

<p><img src="https://roshameow.github.io//personal_homepage/images/image-alignment-1200x4002.jpg" alt="no-alignment" /></p>

<p>The image above, though <code class="language-plaintext highlighter-rouge">1200px</code> wide, should not overflow the content area. It should remain contained with no visible disruption to the flow of content.</p>

<p><img src="https://roshameow.github.io//personal_homepage/images/image-alignment-300x200.jpg" alt="image-right" class="align-right" /></p>

<p>And now we’re going to shift things to the <strong>right</strong> with the <code class="language-plaintext highlighter-rouge">.align-right</code> class. Again, there should be plenty of room above, below, and to the left of the image. Just look at him there — Hey guy! Way to rock that right side. I don’t care what the left aligned image says, you look great. Don’t let anyone else tell you differently.</p>

<p>In just a bit here, you should see the text start to wrap below the right aligned image and settle in nicely. There should still be plenty of room and everything should be sitting pretty. Yeah — Just like that. It never felt so good to be right.</p>

<p>And just when you thought we were done, we’re going to do them all over again with captions!</p>

<figure class="align-center">
  <a href="#"><img src="https://roshameow.github.io//personal_homepage/images/image-alignment-580x300.jpg" alt="" /></a>
  <figcaption>Look at 580 x 300 <a href="#">getting some</a> love.</figcaption>
</figure>

<p>The figure above happens to be <strong>centered</strong>. The caption also has a link in it, just to see if it does anything funky.</p>

<figure style="width: 150px" class="align-left">
  <img src="https://roshameow.github.io//personal_homepage/images/image-alignment-150x150.jpg" alt="" />
  <figcaption>Itty-bitty caption.</figcaption>
</figure>

<p>The rest of this paragraph is filler for the sake of seeing the text wrap around the 150×150 image, which is <strong>left aligned</strong> with the <code class="language-plaintext highlighter-rouge">.align-left</code> class.</p>

<p>As you can see the should be some space above, below, and to the right of the image. The text should not be creeping on the image. Creeping is just not right. Images need breathing room too. Let them speak like you words. Let them do their jobs without any hassle from the text. In about one more sentence here, we’ll see that the text moves from the right of the image down below the image in seamless transition. Again, letting the do it’s thing. Mission accomplished!</p>

<p>And now for a massively large image with <strong>no alignment</strong>.</p>

<figure style="width: 1200px">
  <img src="https://roshameow.github.io//personal_homepage/images/image-alignment-1200x4002.jpg" alt="" />
  <figcaption>Massive image comment for your eyeballs.</figcaption>
</figure>

<p>The figure element above has an inline style of <code class="language-plaintext highlighter-rouge">width: 1200px</code> set which should cause it to break outside of the normal content flow.</p>

<figure style="width: 300px" class="align-right">
  <img src="https://roshameow.github.io//personal_homepage/images/image-alignment-300x200.jpg" alt="" />
  <figcaption>Feels good to be on the right.</figcaption>
</figure>

<p>And now we’re going to shift things to the <strong>right</strong> with the <code class="language-plaintext highlighter-rouge">.align-right</code> class. Again, there should be plenty of room above, below, and to the left of the image. Just look at him there — Hey guy! Way to rock that right side. I don’t care what the left aligned image says, you look great. Don’t let anyone else tell you differently.</p>

<p>In just a bit here, you should see the text start to wrap below the right aligned image and settle in nicely. There should still be plenty of room and everything should be sitting pretty. Yeah — Just like that. It never felt so good to be right.</p>

<p>And that’s a wrap, yo! You survived the tumultuous waters of alignment. Image alignment achievement unlocked!</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="Markup" /><category term="alignment" /><category term="captions" /><category term="content" /><category term="css" /><category term="image" /><category term="markup" /><summary type="html"><![CDATA[The best way to demonstrate the ebb and flow of the various image positioning options is to nestle them snuggly among an ocean of words. Grab a paddle and let’s get started.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://roshameow.github.io//personal_homepage/images/so-simple-sample-image-5.jpg" /><media:content medium="image" url="https://roshameow.github.io//personal_homepage/images/so-simple-sample-image-5.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>