<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://roshameow.github.io//personal_homepage/atom.xml" rel="self" type="application/atom+xml" /><link href="https://roshameow.github.io//personal_homepage/" rel="alternate" type="text/html" /><updated>2024-01-11T15:42:32+00:00</updated><id>https://roshameow.github.io//personal_homepage/atom.xml</id><title type="html">Liu, Wen’s Home Page</title><subtitle>Work, Experiments and Ideas.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><entry><title type="html">aperture衍射模型</title><link href="https://roshameow.github.io//personal_homepage/docs/simulation/diffraction/" rel="alternate" type="text/html" title="aperture衍射模型" /><published>2024-01-03T00:00:00+00:00</published><updated>2024-01-12T07:38:29+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/simulation/diffraction</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/simulation/diffraction/"><![CDATA[<h2 id="光的传播理论">光的传播理论</h2>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/4/48/Diffraction_geometry_2.svg" alt="image" /></p>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Huygens–Fresnel_principle">Huygens–Fresnel principle理论</a>：
    <ul>
      <li>假设光源在$(x^\prime,y^\prime,0)$ , 方向是$z$ 方向，能量是$E$</li>
      <li>传播到$(x,y,z)$ 的electric field是$E(x,y,z)=\frac{1}{i\lambda}\cdot E \cdot\frac{e^{ikr}}{r}\cdot \frac{z}{r}$
        <ul>
          <li>$r$ 是$(x,y,z)$ 到光源的距离</li>
          <li>$\lambda$ 是波长</li>
          <li>$k$ 是wavenumber: $\frac{2\pi}{\lambda}$</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<!--more-->
<h2 id="diffraction">diffraction</h2>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/b/b8/Wavelength%3Dslitwidth.gif" alt="image1" /></p>

<p>考虑由光圈所在平面到sensor这一段, 假设$z$ 固定为aperture和sensor的距离，光源为从aperture向sensor方向的平行光</p>

<p>从aperture $A$ 透过的能量是 $E(x,y,z)= \int\int_A \frac{z}{i\lambda r^2} E(x^\prime,y^\prime,0)\cdot e^{ikr}\cdot dx^\prime dy^\prime$  ，形成的pattern主要受$e^{ikr}$ 这个高频项的影响, 主要能观测到的pattern可以用下面两类衍射模型近似</p>

<!--more-->
<h3 id="fresnel-diffraction菲涅耳衍射">Fresnel diffraction(<a href="https://en.wikipedia.org/wiki/Fresnel_diffraction">菲涅耳衍射</a>)</h3>

<ul>
  <li>假设 : $r\approx z+\frac{(x-x^\prime)^2+(y-y^\prime)^2}{2z}$
    <ul>
      <li>$r=\sqrt{z^2+\rho^2}=z\sqrt{1+\frac{\rho^2}{z^2}}$ , 其中$\rho^2=(x-x^\prime)^2+(y-y^\prime)^2$
        <ul>
          <li>展开为 $r=z(1+\frac{\rho^2}{2z^2}-\frac{1}{8}(\frac{\rho^2}{z^2})^2+\cdots)\approx z+\frac{\rho^2}{2z}$</li>
          <li>近似条件为$z\frac{1}{8}(\frac{\rho^2}{z^2})^2=o(2\pi/k)$ , 即$\frac{\rho^4}{z^3\lambda}=o(1)$, 因为我们主要关注的是$e^{ikr}$ 这个高频项的周期</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>化简成Fourier变换的格式：
    <ul>
      <li>$\begin{align}E(x,y,z)&amp;=\frac{e^{ikz}}{i\lambda z} \int\int_A E(x^\prime,y^\prime,0)\cdot e^{\frac{ik}{2z}((x-x^\prime)^2+(y-y^\prime)^2)} dx^\prime dy^\prime \\ &amp;=\frac{e^{ikz}}{i\lambda z} \int\int_A E(x^\prime,y^\prime,0)\cdot e^{\frac{i\pi}{\lambda z}(x^2+y^2+{x^\prime}^2+{y^\prime}^2-2xx^\prime-2yy^\prime)} dx^\prime dy^\prime\ (k\text{还原成 }\frac{2\pi}{\lambda}) \\ &amp; =\frac{e^{ikz}}{i\lambda z}e^{\frac{i\pi}{\lambda z}(x^2+y^2)} \int\int_A E(x^\prime,y^\prime,0)e^{\frac{i\pi}{\lambda z}({x^\prime}^2+{y^\prime}^2)}\cdot e^{\frac{i\pi}{\lambda z}(-2xx^\prime-2yy^\prime)} dx^\prime dy^\prime \\ &amp;=\frac{e^{ikz}}{i\lambda z}e^{\frac{i\pi}{\lambda z}(x^2+y^2)} \int\int \mathbb 1_A(x^\prime,y^\prime)\cdot E(x^\prime,y^\prime,0)e^{\frac{i\pi}{\lambda z}({x^\prime}^2+{y^\prime}^2)}\cdot e^{\frac{i\pi}{\lambda}(px^\prime+py^\prime)} dx^\prime dy^\prime\ (\text{ 带入 }p=\frac{x}{\lambda z}, q=\frac{y}{\lambda z})\end{align}$</li>
      <li>记 impulse response: $h(x,y,z)= \frac{e^{ikz}}{i\lambda z}\cdot e^{\frac{ik}{2z}(x^2+y^2)}$</li>
      <li>记aperture function: $g(x^\prime,y^\prime)=\mathbb 1_A(x^\prime,y^\prime)\cdot E(x^\prime,y^\prime,0)e^{\frac{i\pi}{\lambda z}({x^\prime}^2+{y^\prime}^2)}$</li>
      <li><a href="https://en.wikipedia.org/wiki/Fourier_transform#Applications">Fourier transform</a> : $G(p,q)=F(g(x^\prime,y^\prime))$</li>
      <li>得到$E(x,y,z)=h(x,y,z)\cdot G(p,q)$ 的形式</li>
    </ul>
  </li>
</ul>

<h3 id="fraunhofer-diffraction夫琅禾费衍射">Fraunhofer diffraction(<a href="https://en.wikipedia.org/wiki/Fraunhofer_diffraction">夫琅禾费衍射</a>)</h3>

<ul>
  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240110160604.png" alt="Pasted image 20240110160604.png" width="500" /></li>
  <li>假设1：$r\approx r_1-b\cdot\cos(\phi-\Phi)\cdot\sin\theta$  (有如图几何直观，对于圆形aperture有个简便的表达方法)
    <ul>
      <li>近似条件：图中红线 $\approx$ 图中绿线部分
        <ul>
          <li>$r_1$ 是aperture中心到观测点$(x,y)$ 的距离</li>
          <li>光源点$(x^\prime,y^\prime)$ 到中心距离为$b$ ,角度为$\phi$, 观测点$(x,y)$ 的角度为$\Phi$, $b$ 往$(x,y)$ 所在角度投影为$b\cos(\phi-\Phi)$ , 图中蓝色三角形的短边</li>
          <li>对图中蓝色三角形$(b\cos(\phi-\Phi),\pi/2-\theta,r_1)$  用<a href="https://en.wikipedia.org/wiki/Law_of_cosines">余弦公式</a> 得到图上蓝色$r_2$ 的距离：$r_2=\sqrt{r_1^2+b^2\cos^2(\phi-\Phi)-2br_1(\cos(\pi/2-\theta)\cos(\phi-\Phi))}$</li>
          <li>则 $r=\sqrt{r_2^2+b^2\sin^2(\phi-\Phi)}=\sqrt{r_1^2+b^2-2br_1\sin(\theta)\cos(\phi-\Phi)}$</li>
          <li>展开为：$r=r_1(1-\frac{b}{r_1}\sin(\theta)\cos(\phi-\Phi)+\frac{b^2}{2r_1^2}\cos^2(\theta)\cos^2(\phi-\Phi)+\cdots)$</li>
          <li>在$\frac{b^2}{2r_1}\cos^2(\theta)=o(2\pi/k)$ 条件下，即$\frac{b^2}{\lambda r_1}\cos^2\theta=o(1)$ 的情况下，得到我们的假设</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>假设2: $r\approx z+\frac{x^2+y^2-2xx^\prime-2yy^\prime}{2z}$ (和Fresnel的形式更统一，也方便写成Fourier变换的形式)
    <ul>
      <li>近似条件：
        <ul>
          <li>和Frensel一样假设$\frac{\rho^4}{z^3\lambda}=o(1)$ ，另外，假设$\frac{b^2}{z\lambda}=o(1)$</li>
        </ul>
      </li>
      <li>和假设1的关系：其实把假设1形式变换一下就能得到相似的形式
        <ul>
          <li>$r\approx r_1-b\cdot(\cos\phi\cos\Phi+\sin\phi\sin\Phi)\cdot\sin\theta$</li>
          <li>带入： $\cos\phi=\frac{x^\prime}{b},\sin\phi=\frac{y^\prime}{b},\cos\Phi=\frac{x}{\sqrt{x^2+y^2}},\sin\Phi=\frac{y}{\sqrt{x^2+y^2}},\sin\theta=\frac{\sqrt{x^2+y^2}}{r_1}$</li>
          <li>得到$r\approx r_1-\frac{xx^\prime+yy^\prime}{r_1}=\sqrt{z^2+x^2+y^2}-\frac{xx^\prime+yy^\prime}{r_1}\approx z+\frac{x^2+y^2}{2z}-\frac{xx^\prime+yy^\prime}{z}$ (不过这样需要进一步的假设。。)</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>化简成Fourier变换的格式：
    <ul>
      <li>根据假设2，其他部分都和Fresnel相同, 只有$g(x^\prime,y^\prime)=\mathbb 1_A(x^\prime,y^\prime)\cdot E(x^\prime,y^\prime,0)$ 更简单了</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>[!example]</p>

  <ul>
    <li>圆形aperture, 并假设光源在aperture均匀分布，即$E(x^\prime,y^\prime,0)=const$ :
      <ul>
        <li>把$(x^\prime,y^\prime)$ 转为$(b,\phi)$ 极坐标，$\int\int_A …dx^\prime dy^\prime=\int_0^a\int_0^{2\pi}… bdbd\phi$</li>
        <li>根据假设1，参考<a href="https://en.wikipedia.org/wiki/Bessel_function">Bessel公式</a></li>
        <li>$\begin{align}E(x,y,z)&amp;=\frac{e^{ikr_1}}{i\lambda r_1} \int_{b=0}^a\int_{\phi=0}^{2\pi}  e^{-ikb\cdot\cos(\phi-\Phi)\cdot\sin\theta}b db d\phi\text{ (根据假设1)}\\ &amp; =\frac{e^{ikr_1}}{i\lambda r_1} \int_{b=0}^a\int_{\phi=0}^{2\pi}  e^{-ikb\cdot\cos\phi\cdot\sin\theta}b db d\phi\text{ (关于}\Phi\text{对称,可以假设=0)}\\ &amp; =\frac{e^{ikr_1}2\pi}{i\lambda r_1} \int_{b=0}^a J_0(kb\sin\theta)b db \text{ (根据Bessel公式) }\\ &amp; =e^{ikr_1}\frac{k}{i r_1} \frac{J_1(ka\sin\theta)}{ka\sin\theta}\end{align}$</li>
        <li>另外，根据假设2，也能得到circ函数的Fourier变换是$J_1$</li>
      </ul>
    </li>
    <li>方形aperture, 并假设光源在aperture均匀分布：
      <ul>
        <li>x,y可以拆开成两个rectangular pulse, 其Fourier变换是sinc函数</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h3 id="应用">应用</h3>

<p>在相机系统中，我们关心进光量和成像的分辨率：用Fraunhofer的模型估算相机的resolution</p>
<ul>
  <li>相机aperture参数：这两个都是dimensionless版本的aperture
    <ul>
      <li>f-number: $N=\frac{f}{D}=\frac{f}{2a}$
        <ul>
          <li>相机焦距$f=z$, 光圈直径$D=2a$</li>
        </ul>
      </li>
      <li>numerical aperture $NA=\frac{a}{\sqrt{f^2+a^2}}=\frac{1}{\sqrt{4N^2+1}}\approx \frac{1}{2N}$</li>
    </ul>
  </li>
  <li>第一圈黑环处距中心距离，认为是相机的optical resolution: $q=r_1\sin\theta\approx \sqrt{f^2+a^2}\sin\theta=\frac{a}{NA}\sin\theta\approx \frac{a}{NA}\frac{1.22\lambda}{2a}=\frac{0.61\lambda}{NA}$
    <ul>
      <li>此时是$J_1(x)$ 的第一个0点， $J_1(ka\sin\theta)=0$，$ka\sin\theta\approx 3.83$ ，即$\sin\theta\approx \frac{3.83}{ka}=\frac{3.83\lambda}{2\pi a}=1.22\frac{\lambda}{D}$</li>
    </ul>
  </li>
  <li>numberical aperture越大，optical resolution越小，分辨率越高？</li>
</ul>

<h3 id="仿真">仿真</h3>

<p><img src="/personal_homepage/docs/attachment/circle_diffraction.mp4" alt="circle_diffraction.mp4" width="200" /> <img src="/personal_homepage/docs/attachment/square_diffraction.mp4" alt="square_diffraction.mp4" width="200" /></p>
<ol>
  <li>在aperture区域均匀采样，发现Frensel pattern是很难出现的，在每个像素对应sample数不足1000的时候，基本观测不到。。应该是因为在那个范围内结果受$(x^\prime,y^\prime)$ 的位置影响更大, 也就表现出更大的随机性。</li>
  <li>确实可以看到sensor到aperture距离增大后, pattern变化的全过程。</li>
  <li>在一个网上找的<a href="https://www.falstad.com/diffraction/">Frensel diffraction仿真</a> java代码里面，作者也是通过先把部分积分形式通过公式运算先化简之后做的仿真<a href="#ref">1</a>，没有用原始的传播公式。</li>
</ol>

<h3 id="两种diffraction的区别--">两种diffraction的区别  　</h3>

<table>
  <thead>
    <tr>
      <th> </th>
      <th>Frensel</th>
      <th>Fraunhofer</th>
      <th>diffraction不明显</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>apeture function/<a href="https://en.wikipedia.org/wiki/Pupil_function">pupil function</a></td>
      <td>$g(x^\prime,y^\prime)=\mathbb 1_A(x^\prime,y^\prime)\cdot E(x^\prime,y^\prime,0)e^{\frac{i\pi}{\lambda z}({x^\prime}^2+{y^\prime}^2)}$ <br />和aperture到observer的距离$z$ 有关；<br />改变距离，或把aperture平移，<br />都会使pattern看起来剧烈变化</td>
      <td>$g(x^\prime,y^\prime)=\mathbb 1_A(x^\prime,y^\prime)\cdot E(x^\prime,y^\prime,0)$<br />和距离$z$ 无关; <br />结果只和观察角度$p=\frac{x}{\lambda z}, q=\frac{y}{\lambda z}$ 有关;<br />只改变$z$的情况，<br />形成的pattern看起来形状相似</td>
      <td> </td>
    </tr>
    <tr>
      <td>形成条件假设</td>
      <td>$\frac{\rho^4}{z^3\lambda}=o(1),\frac{\rho^2}{z\lambda}=O(1)$ <br />当距离$z$ 再增加的时候，<br />相对aperture更大，<br />会趋近Fraunhofer的假设2 <br /><br />带入$N_f$, <br />有时写成$N_f (a/z)^2\ll 1, N_f\sim 1$</td>
      <td>假设1: $\frac{b^2}{\lambda r_1}\cos^2\theta=o(1)$ <br />假设2: $\frac{\rho^4}{z^3\lambda}=o(1)$ ，$\frac{b^2}{z\lambda}=o(1)$</td>
      <td> </td>
    </tr>
    <tr>
      <td>Fresnel number: <br />$N_F=\frac{a(\text{aperture radius})^2}{z \lambda}$<br />$N_F$ 是实际场景中,<br />diffraction种类的一个粗略的判断方法</td>
      <td>$N_F\sim 1$<br />一般叫”near field” diffraction</td>
      <td>$N_F\ll 1$<br />一般叫 far field diffraction</td>
      <td>$N_f\gg 1$</td>
    </tr>
    <tr>
      <td>pattern</td>
      <td><a href="https://en.wikipedia.org/wiki/Arago_spot">泊松光斑实验</a> <br />不过实验里用的不是aperture而是中心的遮挡</td>
      <td><a href="https://en.wikipedia.org/wiki/Airy_disk">Airy disk</a></td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h2 id="其他讨论这个的链接">其他讨论这个的链接：</h2>
<p><span id="ref"></span>
公式推导</p>

<p>[1] https://en.wikipedia.org/wiki/Fraunhofer_diffraction_equation#CITEREFHecht2002</p>

<p>[2] https://phys.libretexts.org/Bookshelves/Optics/BSc_Optics_(Konijnenberg_Adam_and_Urbach)/06%3A_Scalar_diffraction_optics/6.07%3A_Fresnel_and_Fraunhofer_Approximations</p>

<p>[3] http://www.erbion.com/index_files/Modern_Optics/Ch11.pdf</p>

<p>[4] https://zhuanlan.zhihu.com/p/339379109</p>

<p>仿真</p>

<p>[5] http://www.dauger.com/fresnel/</p>

<p>[6] Dauger, Dean E. “Simulation and Study of Fresnel Diffraction for Arbitrary Two-Dimensional Apertures.” <em>Computers in Physics</em> 10 (November 1, 1996): 591–604. <a href="https://doi.org/10.1063/1.168584">https://doi.org/10.1063/1.168584</a>.</p>

<p>为什么coded aperture要和dispenser结合？不同波长的psf不一样。coded aperture是必要的吗？
折射
怎么影响image resolution的？</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="simulation" /><category term="content" /><category term="simulation" /><category term="pysics" /><category term="sensor" /><summary type="html"><![CDATA[光的传播理论 Huygens–Fresnel principle理论： 假设光源在$(x^\prime,y^\prime,0)$ , 方向是$z$ 方向，能量是$E$ 传播到$(x,y,z)$ 的electric field是$E(x,y,z)=\frac{1}{i\lambda}\cdot E \cdot\frac{e^{ikr}}{r}\cdot \frac{z}{r}$ $r$ 是$(x,y,z)$ 到光源的距离 $\lambda$ 是波长 $k$ 是wavenumber: $\frac{2\pi}{\lambda}$]]></summary></entry><entry><title type="html">用六边形构成半球</title><link href="https://roshameow.github.io//personal_homepage/docs/geometry/hexigon-hemisphere/" rel="alternate" type="text/html" title="用六边形构成半球" /><published>2024-01-02T00:00:00+00:00</published><updated>2024-01-03T03:57:56+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/geometry/hexigon-hemisphere</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/geometry/hexigon-hemisphere/"><![CDATA[<p>刷到关于《葬送的芙莉莲》里面六边形魔法防御结界的讨论，根据<a href="https://en.wikipedia.org/wiki/Euler_characteristic">多面体欧拉公式</a>，仅仅用正六边形是没法组成球体形状结界。我也非常理解制作组为什么不画个足球：毕竟是魔法阵，六边形画的又比较大，弄个五边形也不好看也不好解释。
<img src="/personal_homepage/docs/attachment/Pasted%20image%2020240102192929.png" alt="Pasted image 20240102192929.png" width="500" /></p>

<p>但是如果不是球，而是半球，不考虑边界是否完整，变形，肯定是可行的。因为半球$S^+$ 和disk $\mathbb{D}^1$， 和六边形边界的平面都是 <a href="https://en.wikipedia.org/wiki/Homeomorphism">topological isomorphism</a> 的，在平面上能实现的密铺，变形到半球上当然也能实现。</p>

<p>另外，为了保证在3维上看起来不难看。用<a href="https://www.pbr-book.org/3ed-2018/Monte_Carlo_Integration/2D_Sampling_with_Multidimensional_Transformations#:~:text=The%20idea%20behind%20Malley%27s%20method,Figure%2013.14%3A%20Malley%27s%20Method.">Malley’s Method</a>, 把disk看成半球的投影，实行$(r,\phi)=(\sin\theta,\phi)\rightarrow (\theta,\phi)$ 的变换，让六边形在$(\theta,\phi)$ 的坐标上是均匀的。
<img src="/personal_homepage/docs/attachment/Pasted%20image%2020240102191540.png" alt="Pasted image 20240102191540.png" width="300" /></p>

<h2 id="画一个密铺六边形半球的步骤">画一个密铺六边形半球的步骤</h2>

<h3 id="用python画一个密铺的六边形">用python画一个密铺的六边形：</h3>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240102191646.png" alt="Pasted image 20240102191646.png" width="200" /> , 画上辅助线：<img src="/personal_homepage/docs/attachment/Pasted%20image%2020240102191705.png" alt="Pasted image 20240102191705.png" width="200" /></p>

<h3 id="做变换">做变换</h3>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240102191731.png" alt="Pasted image 20240102191731.png" width="200" /></p>

<ul>
  <li>这一步得到的是我们设想的半球面的投影, 看起来确实给人一种六边形能组成球形的错觉。。</li>
  <li>另外，Photoshop里面球面化的滤镜，看起来效果差不多，可能也是用了这个变换。
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020240102191855.png" alt="Pasted image 20240102191855.png" width="400" />  </li>
    </ul>
  </li>
  <li>又对比了一下原图，嗯？费伦的结界难道也是这么画的？</li>
</ul>

<h3 id="把得到的投影映射到半球">把得到的投影映射到半球</h3>

<p>转到侧面看下：<img src="/personal_homepage/docs/attachment/Pasted%20image%2020240102192405.png" alt="Pasted image 20240102192405.png" width="200" />  </p>

<p>看起来确实挺正常的，当然，这样的两个半球也合不成一个全是六边形的球，因为如图上边界的地方：<img src="/personal_homepage/docs/attachment/Pasted%20image%2020240102195111.png" alt="Pasted image 20240102195111.png" width="200" /> 展开会变成5边形，7边形，8边形</p>

<h2 id="其他讨论这个的链接">其他讨论这个的链接：</h2>

<p>[1] https://zhuanlan.zhihu.com/p/673051340</p>

<p>[2] https://www.163.com/dy/article/IMH50ITS0526FP3N.html</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="geometry" /><category term="content" /><category term="idea" /><category term="动漫" /><summary type="html"><![CDATA[刷到关于《葬送的芙莉莲》里面六边形魔法防御结界的讨论，根据多面体欧拉公式，仅仅用正六边形是没法组成球体形状结界。我也非常理解制作组为什么不画个足球：毕竟是魔法阵，六边形画的又比较大，弄个五边形也不好看也不好解释。 但是如果不是球，而是半球，不考虑边界是否完整，变形，肯定是可行的。因为半球$S^+$ 和disk $\mathbb{D}^1$， 和六边形边界的平面都是 topological isomorphism 的，在平面上能实现的密铺，变形到半球上当然也能实现。 另外，为了保证在3维上看起来不难看。用Malley’s Method, 把disk看成半球的投影，实行$(r,\phi)=(\sin\theta,\phi)\rightarrow (\theta,\phi)$ 的变换，让六边形在$(\theta,\phi)$ 的坐标上是均匀的。 画一个密铺六边形半球的步骤 用python画一个密铺的六边形： , 画上辅助线： 做变换 这一步得到的是我们设想的半球面的投影, 看起来确实给人一种六边形能组成球形的错觉。。 另外，Photoshop里面球面化的滤镜，看起来效果差不多，可能也是用了这个变换。   又对比了一下原图，嗯？费伦的结界难道也是这么画的？ 把得到的投影映射到半球 转到侧面看下：   看起来确实挺正常的，当然，这样的两个半球也合不成一个全是六边形的球，因为如图上边界的地方： 展开会变成5边形，7边形，8边形 其他讨论这个的链接： [1] https://zhuanlan.zhihu.com/p/673051340 [2] https://www.163.com/dy/article/IMH50ITS0526FP3N.html]]></summary></entry><entry><title type="html">blender学习: Toon BSDF的硬阴影效果</title><link href="https://roshameow.github.io//personal_homepage/docs/blender/blender-learning/" rel="alternate" type="text/html" title="blender学习: Toon BSDF的硬阴影效果" /><published>2023-12-29T00:00:00+00:00</published><updated>2024-01-01T02:11:23+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/blender/blender-learning</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/blender/blender-learning/"><![CDATA[<h3 id="导入模型">导入模型</h3>

<p>用glTF格式的模型</p>

<ul>
  <li>glTF格式介绍：<a href="https://github.com/KhronosGroup/glTF">https://github.com/KhronosGroup/glTF</a></li>
  <li>在vscode安装glTF tools 插件：
    <ul>
      <li>可以跳转到具体accessor，直接查看数据</li>
      <li>可以查看渲染之后的结果(包括背景和动画)</li>
    </ul>
  </li>
  <li>下载gltf模型: <a href="https://github.com/GPUOpen-LibrariesAndSDKs/Cauldron-Media/tree/v1.0.4/buster_drone">https://github.com/GPUOpen-LibrariesAndSDKs/Cauldron-Media/tree/v1.0.4/buster_drone</a></li>
</ul>

<h3 id="步骤">步骤</h3>

<ul>
  <li>参考<a href="https://www.bilibili.com/video/BV1ck4y1W7am/">b站的教学视频</a> 修改：
    <ul>
      <li>world property:
        <ul>
          <li>surface: 选background, strength 0
            <ul>
              <li>直接把surface的shader直接关掉应该也是一样的效果？</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>光源：
        <ul>
          <li>blender代码：
            <ul>
              <li>https://github.com/blender/cycles/blob/main/src/scene/light.cpp</li>
              <li>https://github.com/blender/cycles/blob/main/src/kernel/light/spot.h</li>
              <li>https://github.com/blender/cycles/blob/main/src/kernel/sample/mapping.h#L114</li>
            </ul>
          </li>
          <li>改成spot light</li>
          <li>radius改成0：影响光锥的软硬</li>
          <li>blend改成0</li>
        </ul>
      </li>
      <li>rendering
        <ul>
          <li>引擎改成cycles：cycles是基于光追的，更符合现实情况</li>
          <li>noise threshold改成0， sample改成64</li>
          <li>Light Paths里面反弹次数(Total, Diffuse, Glossy, Transmission)都改成0
            <ul>
              <li>防止出现明亮表面和柔和边缘？</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>shader
        <ul>
          <li>改成Toon BSDF</li>
          <li>把反光的部分BSDF从diffuse改成glossy</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>加入运镜，参考教学视频 <a href="https://www.bilibili.com/video/BV1eq4y1y7D2/?vd_source=9cd152be6fbc1b9ad36a33604a13fb6e">https://www.bilibili.com/video/BV1eq4y1y7D2</a>
    <ul>
      <li>在animation界面删除本来的animation</li>
      <li>在layout界面开启auto key之后，点击播放：这个时候鼠标只能移动，需要按快捷键配合移动。</li>
    </ul>
  </li>
  <li>输出视频
    <ul>
      <li><img src="/personal_homepage/docs/attachment/output.mp4" alt="output.mp4" width="400" /></li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="blender" /><category term="content" /><category term="BSDF" /><category term="render" /><summary type="html"><![CDATA[导入模型 用glTF格式的模型 glTF格式介绍：https://github.com/KhronosGroup/glTF 在vscode安装glTF tools 插件： 可以跳转到具体accessor，直接查看数据 可以查看渲染之后的结果(包括背景和动画) 下载gltf模型: https://github.com/GPUOpen-LibrariesAndSDKs/Cauldron-Media/tree/v1.0.4/buster_drone 步骤 参考b站的教学视频 修改： world property: surface: 选background, strength 0 直接把surface的shader直接关掉应该也是一样的效果？ 光源： blender代码： https://github.com/blender/cycles/blob/main/src/scene/light.cpp https://github.com/blender/cycles/blob/main/src/kernel/light/spot.h https://github.com/blender/cycles/blob/main/src/kernel/sample/mapping.h#L114 改成spot light radius改成0：影响光锥的软硬 blend改成0 rendering 引擎改成cycles：cycles是基于光追的，更符合现实情况 noise threshold改成0， sample改成64 Light Paths里面反弹次数(Total, Diffuse, Glossy, Transmission)都改成0 防止出现明亮表面和柔和边缘？ shader 改成Toon BSDF 把反光的部分BSDF从diffuse改成glossy 加入运镜，参考教学视频 https://www.bilibili.com/video/BV1eq4y1y7D2 在animation界面删除本来的animation 在layout界面开启auto key之后，点击播放：这个时候鼠标只能移动，需要按快捷键配合移动。 输出视频]]></summary></entry><entry><title type="html">传感器颜色调制 (二)</title><link href="https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate1/" rel="alternate" type="text/html" title="传感器颜色调制 (二)" /><published>2023-12-26T00:00:00+00:00</published><updated>2023-12-27T20:34:40+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate1</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate1/"><![CDATA[<h2 id="通过coded-aperture-和-dispenser进行颜色调制">通过coded-aperture 和 dispenser进行颜色调制</h2>

<ul>
  <li>
    <p>仿真数据：</p>

    <ul>
      <li>
        <p>CASSI: coded_apeture+dispenser</p>

        <ul>
          <li>
            <p>coded_apeture把mask应用于所有通道</p>
          </li>
          <li>
            <p>dispenser依次给mask的通道图像y-axis 2pixel的shift</p>
          </li>
          <li>
            <p>所有通道叠加(一个像素是同行28x2=56个不同通道像素的叠加，出来的图像是很模糊的)</p>
          </li>
          <li>
            <p>仿真通过shot noise: $Y_{sim}=B(Y/QE,QE)$</p>

            <ul>
              <li>
                <p>本来读数是Y, qe是quantum efficiency</p>
              </li>
              <li>
                <p>B是binomial 分布</p>
              </li>
              <li>
                <p>这段其实没懂为什么要用binomial分布，而不是poisson分布$P(Y)$ , 大概Y/QE是平均光子数，所以sample这么多次，每次都有qe的概率转换为电子；但是仍然不理解为什么要在光电转换的部分随机</p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>数据集使用：</p>
<ul>
  <li>simulation:
    <ul>
      <li>训练：
        <ul>
          <li>data: cave_1024_28</li>
          <li>crop_size: 随机crop到256x256, 和mask做simulation
            <ul>
              <li>shift3d mask: 28x256x310</li>
            </ul>
          </li>
          <li>mask: TSA_simu_data/mask.mat</li>
          <li>test:  TSA_simu_data/Truth/</li>
        </ul>
      </li>
      <li>测试：
        <ul>
          <li>mask: TSA_simu_data/mask.mat</li>
          <li>test: TSA_simu_data/Truth/</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>real:
    <ul>
      <li>训练:
        <ul>
          <li>size: 96</li>
          <li>data: CAVE_512_28 and KAIST_CVPR2021
            <ul>
              <li>CAVE_512_28 ：原数据集512x512x28 30个图片</li>
              <li>KAIST_CVPR2021： 2704x3376x28 30个图片</li>
            </ul>
          </li>
          <li>mask: TSA_real_data/mask.mat
            <ul>
              <li>660x660 0-1的数据</li>
              <li><img src="/personal_homepage/docs/attachment/mask.png" alt="mask.png" width="300" /></li>
            </ul>
          </li>
        </ul>
      </li>
      <li>测试
        <ul>
          <li>size: 714x660</li>
          <li>data: TSA_real_data/Measurements/
            <ul>
              <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231226120247.png" alt="Pasted image 20231226120247.png" width="300" /></li>
            </ul>
          </li>
          <li>mask: TSA_real_data/mask.mat</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="algorithm" /><category term="content" /><category term="sensor" /><summary type="html"><![CDATA[通过coded-aperture 和 dispenser进行颜色调制 仿真数据： CASSI: coded_apeture+dispenser coded_apeture把mask应用于所有通道 dispenser依次给mask的通道图像y-axis 2pixel的shift 所有通道叠加(一个像素是同行28x2=56个不同通道像素的叠加，出来的图像是很模糊的) 仿真通过shot noise: $Y_{sim}=B(Y/QE,QE)$ 本来读数是Y, qe是quantum efficiency B是binomial 分布 这段其实没懂为什么要用binomial分布，而不是poisson分布$P(Y)$ , 大概Y/QE是平均光子数，所以sample这么多次，每次都有qe的概率转换为电子；但是仍然不理解为什么要在光电转换的部分随机 数据集使用： simulation: 训练： data: cave_1024_28 crop_size: 随机crop到256x256, 和mask做simulation shift3d mask: 28x256x310 mask: TSA_simu_data/mask.mat test: TSA_simu_data/Truth/ 测试： mask: TSA_simu_data/mask.mat test: TSA_simu_data/Truth/ real: 训练: size: 96 data: CAVE_512_28 and KAIST_CVPR2021 CAVE_512_28 ：原数据集512x512x28 30个图片 KAIST_CVPR2021： 2704x3376x28 30个图片 mask: TSA_real_data/mask.mat 660x660 0-1的数据 测试 size: 714x660 data: TSA_real_data/Measurements/ mask: TSA_real_data/mask.mat]]></summary></entry><entry><title type="html">传感器颜色调制 (一)</title><link href="https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate/" rel="alternate" type="text/html" title="传感器颜色调制 (一)" /><published>2023-12-23T00:00:00+00:00</published><updated>2023-12-27T23:14:21+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/algorithm/color-moderate/"><![CDATA[<h2 id="调制">调制</h2>

<p>一般把信号区分出来的过程叫调制。现在一般的传感器只能感应2d的光学信号强度(就是灰度图)，把不同波长的光分离，以获取特定光谱范围的信息的过程，就叫颜色调制。比如信号经过rgb的滤光片，得到彩色图像。</p>

<p>所有调制都是通过牺牲一部分空间精度为代价获得其他层次信息。</p>

<h2 id="通过排布滤光片进行颜色调制">通过排布滤光片进行颜色调制</h2>

<p>像传统的rggb bayer和quad bayer一样，可以用不同方式排布多光谱的滤光片。如：</p>
<h3 id="几种排布像素的方法">几种排布像素的方法</h3>

<ol>
  <li><strong>把像素不断二分<a href="#ref">1</a></strong>
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231227093202.png" alt="Pasted image 20231227093202.png" width="400" /></li>
      <li>如果不是$2^n$ 个通道，没法保证所有通道的像素密度一样。比如图上5个通道的情况。1，2通道的密度就比3，4，5的密度低。</li>
      <li>但是这样做可以让每个相同通道的间距相等。</li>
    </ul>
  </li>
  <li><strong>间隔相等斜向排布<a href="#ref">2</a></strong>
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231227093439.png" alt="Pasted image 20231227093439.png" width="200" /></li>
      <li>能保证每个channel的像素相邻的channel一直是一样的</li>
      <li>但是这样在各个方向上像素密度极度不均匀：比如图上5个通道情况，横竖方向相隔4个像素，斜向却相隔0个，3个像素</li>
    </ul>
  </li>
  <li><strong>分成primary channel和secondary channel两组 <a href="#ref">3</a></strong>
    <ul>
      <li>把secondary channel穿插在primay channel中</li>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231227100416.png" alt="Pasted image 20231227100416.png" width="200" /></li>
      <li>图中a,b,c是primary channel，像素密度高； d,e,f,g 是secondary channel，像素密度低</li>
    </ul>
  </li>
  <li><strong>一个实拍的样例</strong>
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231227114816.png" alt="Pasted image 20231227114816.png" width="300" /></li>
      <li>图中是8个通道的sensor实拍图做了伪彩变换之后的样例</li>
      <li>filter不同channel之间贴了黑胶阻挡(除了阻挡更多光线进入sensor以外，没什么积极意义)</li>
    </ul>
  </li>
</ol>

<h3 id="排布像素的规则">排布像素的规则</h3>

<ul>
  <li>根据不同通道的功能先确定需要的像素密度</li>
</ul>

<h3 id="采用滤光片排布调制的问题">采用滤光片排布调制的问题：</h3>

<ul>
  <li>技术本身的问题：
    <ul>
      <li>现在一般用<a href="https://en.wikipedia.org/wiki/Fabry–Pérot_interferometer">FP-干涉</a>技术来制作多光谱sensor需要的窄波段，FP-干涉需要使用多层透镜实现，相当于严重降低光线透过率</li>
      <li>mask均匀排布，会导致有些地方的傅立叶系数是0，不利于做reconstruction</li>
    </ul>
  </li>
  <li>工厂生产的问题：
    <ul>
      <li>生产的一个filter的尺寸最小在10um左右，但是目前的手机用的单像素尺寸在<a href="https://www.igao7.com/news/202204/Xo2jTjWP67ayPtIA.html">0.6～2.4um</a>(单像素2.4um已经是非常好的CMOS了)，不得不用类似quad bayer的做法让一个filter对应多个像素，无疑会影响调制的精度</li>
      <li>透镜部分和成像部分不贴合：透镜距离sensor的感光区域有大约3um的垂直距离，会导致像素中有效信息进一步降低</li>
      <li>透镜偏移，没有和像素的位置对应：导致传感器之间的差异很大</li>
    </ul>
  </li>
</ul>

<p><span id="ref"></span>
[1]  Lidan Miao and Hairong Qi. “The Design and Evaluation of a Generic Method for Generating Mosaicked Multispectral Filter Arrays.” <em>IEEE Transactions on Image Processing</em> 15, no. 9 (September 2006): 2780–91. <a href="https://doi.org/10.1109/TIP.2006.877315">https://doi.org/10.1109/TIP.2006.877315</a>.</p>

<p>[2] Aggarwal, Hemant Kumar, and Angshul Majumdar. “Single-Sensor Multi-Spectral Image Demosaicing Algorithm Using Learned Interpolation Weights.” In <em>2014 IEEE Geoscience and Remote Sensing Symposium</em>, 2011–14. Quebec City, QC: IEEE, 2014. <a href="https://doi.org/10.1109/IGARSS.2014.6946857">https://doi.org/10.1109/IGARSS.2014.6946857</a>.</p>

<p>[3] Yasuma, Fumihito, Tomoo Mitsunaga, Daisuke Iso, and Shree K. Nayar. “Generalized Assorted Pixel Camera: Postcapture Control of Resolution, Dynamic Range, and Spectrum.” <em>IEEE Transactions on Image Processing</em> 19, no. 9 (September 2010): 2241–53. <a href="https://doi.org/10.1109/TIP.2010.2046811">https://doi.org/10.1109/TIP.2010.2046811</a>.</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="algorithm" /><category term="content" /><category term="sensor" /><summary type="html"><![CDATA[调制 一般把信号区分出来的过程叫调制。现在一般的传感器只能感应2d的光学信号强度(就是灰度图)，把不同波长的光分离，以获取特定光谱范围的信息的过程，就叫颜色调制。比如信号经过rgb的滤光片，得到彩色图像。 所有调制都是通过牺牲一部分空间精度为代价获得其他层次信息。 通过排布滤光片进行颜色调制 像传统的rggb bayer和quad bayer一样，可以用不同方式排布多光谱的滤光片。如： 几种排布像素的方法 把像素不断二分1 如果不是$2^n$ 个通道，没法保证所有通道的像素密度一样。比如图上5个通道的情况。1，2通道的密度就比3，4，5的密度低。 但是这样做可以让每个相同通道的间距相等。 间隔相等斜向排布2 能保证每个channel的像素相邻的channel一直是一样的 但是这样在各个方向上像素密度极度不均匀：比如图上5个通道情况，横竖方向相隔4个像素，斜向却相隔0个，3个像素 分成primary channel和secondary channel两组 3 把secondary channel穿插在primay channel中 图中a,b,c是primary channel，像素密度高； d,e,f,g 是secondary channel，像素密度低 一个实拍的样例 图中是8个通道的sensor实拍图做了伪彩变换之后的样例 filter不同channel之间贴了黑胶阻挡(除了阻挡更多光线进入sensor以外，没什么积极意义) 排布像素的规则 根据不同通道的功能先确定需要的像素密度 采用滤光片排布调制的问题： 技术本身的问题： 现在一般用FP-干涉技术来制作多光谱sensor需要的窄波段，FP-干涉需要使用多层透镜实现，相当于严重降低光线透过率 mask均匀排布，会导致有些地方的傅立叶系数是0，不利于做reconstruction 工厂生产的问题： 生产的一个filter的尺寸最小在10um左右，但是目前的手机用的单像素尺寸在0.6～2.4um(单像素2.4um已经是非常好的CMOS了)，不得不用类似quad bayer的做法让一个filter对应多个像素，无疑会影响调制的精度 透镜部分和成像部分不贴合：透镜距离sensor的感光区域有大约3um的垂直距离，会导致像素中有效信息进一步降低 透镜偏移，没有和像素的位置对应：导致传感器之间的差异很大 [1] Lidan Miao and Hairong Qi. “The Design and Evaluation of a Generic Method for Generating Mosaicked Multispectral Filter Arrays.” IEEE Transactions on Image Processing 15, no. 9 (September 2006): 2780–91. https://doi.org/10.1109/TIP.2006.877315. [2] Aggarwal, Hemant Kumar, and Angshul Majumdar. “Single-Sensor Multi-Spectral Image Demosaicing Algorithm Using Learned Interpolation Weights.” In 2014 IEEE Geoscience and Remote Sensing Symposium, 2011–14. Quebec City, QC: IEEE, 2014. https://doi.org/10.1109/IGARSS.2014.6946857. [3] Yasuma, Fumihito, Tomoo Mitsunaga, Daisuke Iso, and Shree K. Nayar. “Generalized Assorted Pixel Camera: Postcapture Control of Resolution, Dynamic Range, and Spectrum.” IEEE Transactions on Image Processing 19, no. 9 (September 2010): 2241–53. https://doi.org/10.1109/TIP.2010.2046811.]]></summary></entry><entry><title type="html">双十二装机</title><link href="https://roshameow.github.io//personal_homepage/docs/photo/new-computer/" rel="alternate" type="text/html" title="双十二装机" /><published>2023-12-22T00:00:00+00:00</published><updated>2023-12-22T16:21:32+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/photo/new-computer</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/photo/new-computer/"><![CDATA[<p>趁着双十二激情下单，前后不到一天，选的配件都没什么性价比。</p>

<h3 id="配置">配置：</h3>
<ul>
  <li>不想再等了，买了4080</li>
  <li>cpu实际换了7900x3d</li>
  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231222024142.png" alt="Pasted image 20231222024142.png" width="400" /></li>
</ul>

<h3 id="外观">外观：</h3>
<ul>
  <li>买完发现灯光处于一个过饱和状态，显卡还带屏幕。不过再增加发光的东西就怎么都看不顺眼了，暂时只能保持这样的状态。</li>
  <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231222072754.png" alt="Pasted image 20231222072754.png" width="300" /> 	<img src="/personal_homepage/docs/attachment/Pasted%20image%2020231222071842.png" alt="Pasted image 20231222071842.png" width="250" /></li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="photo" /><category term="content" /><category term="device" /><category term="life" /><summary type="html"><![CDATA[趁着双十二激情下单，前后不到一天，选的配件都没什么性价比。 配置： 不想再等了，买了4080 cpu实际换了7900x3d 外观： 买完发现灯光处于一个过饱和状态，显卡还带屏幕。不过再增加发光的东西就怎么都看不顺眼了，暂时只能保持这样的状态。]]></summary></entry><entry><title type="html">小红书学到的几种图片调色</title><link href="https://roshameow.github.io//personal_homepage/docs/photo/photo-color/" rel="alternate" type="text/html" title="小红书学到的几种图片调色" /><published>2023-12-21T00:00:00+00:00</published><updated>2023-12-22T15:10:39+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/photo/photo-color</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/photo/photo-color/"><![CDATA[<p>感觉共同点是：为了追求画面简洁有冲击力，不约而同的压缩了亮度和颜色的动态范围。</p>
<h2 id="版画滤镜">版画滤镜</h2>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221113525.png" alt="Pasted image 20231221113525.png" width="300" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221113539.png" alt="Pasted image 20231221113539.png" width="300" /></p>
<ul>
  <li>醒图4个滤镜依次叠加，透明度依次减小
    <ul>
      <li>千禧-&gt;幻想蝴蝶</li>
      <li>新中式-&gt;空谷</li>
      <li>千禧-&gt;数字彩虹</li>
      <li>新中式-&gt;烟霞</li>
    </ul>
  </li>
  <li>实际实验结果
    <ul>
      <li><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221114420.png" alt="Pasted image 20231221114420.png" width="300" /></li>
      <li>调整亮度曲线如图，暗部切断，亮部反色，压缩动态范围</li>
      <li>添加噪声</li>
      <li>去掉图片原有颜色</li>
      <li>按照亮暗调节新的颜色</li>
    </ul>
  </li>
</ul>

<h2 id="白夜之树">白夜之树</h2>

<ul>
  <li>
    <p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221121648.png" alt="Pasted image 20231221121648.png" width="300" />  <img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221121655.png" alt="Pasted image 20231221121655.png" width="300" /></p>
  </li>
  <li>
    <p>方法：</p>
    <ul>
      <li>醒图滤镜：千禧-&gt;午夜 把照片变成蓝色，就是为了伪造天空部分吧？</li>
      <li>曲线反色：画面要避开一些常见的物品，不然很容易看出其实是反色，就感觉出戏了</li>
      <li>光感-100：作用是，把有颜色的部分变暗？</li>
    </ul>
  </li>
</ul>

<h2 id="单色涂鸦">单色涂鸦</h2>

<p><img src="/personal_homepage/docs/attachment/IMG_8192.jpg" alt="IMG_8192.jpg" width="300" />   <img src="/personal_homepage/docs/attachment/IMG_8193.jpg" alt="IMG_8193.jpg" width="300" /></p>

<ul>
  <li>方法：
    <ul>
      <li>醒图特效：单色填充：可能是根据饱和度？把饱和度高的部分填充了粉色。因为图片里红色和蓝色都被填充了，所以不是根据主体色识别。其他位置变为灰度图</li>
      <li>醒图特效：单色涂鸦：检测边缘，设置白边
        <ul>
          <li>可能是检测闭合的部分，处理成涂鸦的斜线</li>
          <li>检测线条少的位置加文字</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="photo" /><category term="content" /><category term="醒图" /><summary type="html"><![CDATA[感觉共同点是：为了追求画面简洁有冲击力，不约而同的压缩了亮度和颜色的动态范围。 版画滤镜 醒图4个滤镜依次叠加，透明度依次减小 千禧-&gt;幻想蝴蝶 新中式-&gt;空谷 千禧-&gt;数字彩虹 新中式-&gt;烟霞 实际实验结果 调整亮度曲线如图，暗部切断，亮部反色，压缩动态范围 添加噪声 去掉图片原有颜色 按照亮暗调节新的颜色 白夜之树 方法： 醒图滤镜：千禧-&gt;午夜 把照片变成蓝色，就是为了伪造天空部分吧？ 曲线反色：画面要避开一些常见的物品，不然很容易看出其实是反色，就感觉出戏了 光感-100：作用是，把有颜色的部分变暗？ 单色涂鸦 方法： 醒图特效：单色填充：可能是根据饱和度？把饱和度高的部分填充了粉色。因为图片里红色和蓝色都被填充了，所以不是根据主体色识别。其他位置变为灰度图 醒图特效：单色涂鸦：检测边缘，设置白边 可能是检测闭合的部分，处理成涂鸦的斜线 检测线条少的位置加文字]]></summary></entry><entry><title type="html">用 jekyll+obsidian生成个人主页并部署到 github pages的工作流</title><link href="https://roshameow.github.io//personal_homepage/docs/webpage/jekyll-blog-deploy/" rel="alternate" type="text/html" title="用 jekyll+obsidian生成个人主页并部署到 github pages的工作流" /><published>2023-12-20T00:00:00+00:00</published><updated>2024-01-12T01:53:15+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/webpage/jekyll-blog-deploy</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/webpage/jekyll-blog-deploy/"><![CDATA[<p>用jekyll的原因无需多说。这样配置好工作流之后，除了编写内容基本没有什么麻烦的操作(登录在线网页，换编辑器，按照统一格式改文件名之类在我看来都很麻烦。。)。</p>
<h3 id="ruby的环境管理包管理方式">Ruby的环境管理，包管理方式</h3>

<ul>
  <li><strong>管理顺序：</strong> churby -&gt; ruby -&gt; bundle -&gt; gem -&gt; jekyll
    <ul>
      <li><strong>ruby：</strong> 是经常在 web 开发中使用的一种动态语言。</li>
      <li><strong>churby：</strong> Ruby 的环境管理工具，用于管理不同版本的 Ruby。</li>
      <li><strong>gem：</strong> Ruby 编写的软件包的统称，Jekyll 也是一个 gem。</li>
      <li><strong>bundler：</strong> 用于管理项目 gem 的工具，根据 Gemfile 管理不同版本的 gem。bundler自己本身也是gem。</li>
    </ul>
  </li>
</ul>

<p>如果用 Python 来类比，关系大概是这样：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">ruby</th>
      <th style="text-align: center">python</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">churby 版本号</code></td>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">conda create -n my_env python=版本号;</code><br /> <code class="language-plaintext highlighter-rouge">conda activate my_env</code></td>
    </tr>
    <tr>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">gem install 某个包</code></td>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">pip install 某个包</code></td>
    </tr>
    <tr>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">bundler install</code></td>
      <td style="text-align: center"><code class="language-plaintext highlighter-rouge">pip install -r requirements.txt</code></td>
    </tr>
  </tbody>
</table>

<h3 id="具体配置流程">具体配置流程</h3>

<ol>
  <li><strong>安装ruby</strong>
    <ul>
      <li>按照 <a href="https://jekyllrb.com/docs/installation/macos/">Jekyll 网站</a> 的方法，安装 Chruby 和 Ruby-install。</li>
      <li>切换到对应版本的 Ruby。</li>
      <li>在 macOS 中我遇到的问题是系统中已经安装了 Miniforge3，其中包含了 OpenSSL，但不能正常使用。通过 <a href="https://medium.com/@canerten/building-ruby-3-1-3-fails-with-openssl-1-0-2o-1-on-m1-apple-silicon-mac-with-brew-89d7e550420b">Homebrew 安装 OpenSSL@1.1</a> 解决。</li>
    </ul>
  </li>
  <li><strong>本地配置</strong>
    <ul>
      <li>选择一个博客主题，例如 <a href="https://github.com/mmistakes/so-simple-theme">So Simple</a>，fork 对应主题的 GitHub 代码，然后根据自己的需要修改 <code class="language-plaintext highlighter-rouge">_config.yml</code>。</li>
      <li>运行 <code class="language-plaintext highlighter-rouge">bundler install</code> 安装项目所需的 gem。</li>
      <li>运行 <code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code>，此时可以在本地进行预览。</li>
    </ul>
  </li>
  <li><strong>利用 GitHub Actions 部署到 GitHub Pages</strong>
    <ul>
      <li>将下面的 Action 脚本添加到项目的 <code class="language-plaintext highlighter-rouge">.github/workflows/main.yml</code> 文件。等待执行完成，可以通过浏览器访问 <code class="language-plaintext highlighter-rouge">http://name.github.io/base_url/</code>。</li>
    </ul>

    <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="na">name</span><span class="pi">:</span> <span class="s">Homepage Project Deploy to GitHub Pages</span>
	
 <span class="na">on</span><span class="pi">:</span>
   <span class="na">push</span><span class="pi">:</span>
     <span class="na">branches</span><span class="pi">:</span>
       <span class="pi">-</span> <span class="s">master</span> <span class="c1">#设置每次将代码推送到 master 分支时自动执行</span>
<span class="err">	</span>
 <span class="na">permissions</span><span class="pi">:</span>
   <span class="na">contents</span><span class="pi">:</span> <span class="s">write</span>
	
 <span class="na">jobs</span><span class="pi">:</span>
     <span class="na">deploy</span><span class="pi">:</span>
       <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
       <span class="na">steps</span><span class="pi">:</span>
       <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout repository</span>
         <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v4</span>
	
       <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Set up ruby and gems</span>
         <span class="na">uses</span><span class="pi">:</span> <span class="s">ruby/setup-ruby@v1</span> <span class="c1">#如果用ruby install的话好像没法切换版本</span>
         <span class="na">with</span><span class="pi">:</span>
           <span class="na">ruby-version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3.2'</span> <span class="c1"># Not needed with a .ruby-version file</span>
           <span class="na">bundler-cache</span><span class="pi">:</span> <span class="kc">true</span> <span class="c1"># runs 'bundle install' and caches installed gems automatically</span>
<span class="err">	</span>
       <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build and deploy</span>
         <span class="na">run</span><span class="pi">:</span> <span class="pi">|</span>
             <span class="s">bundle exec jekyll build</span>
             <span class="s">echo 'personal-homepage' &gt; _site/CNAME</span>
             <span class="s">cp _site/index.html _site/404.html</span>
             <span class="s">touch _site/.nojekyll #必须的，gh-pages分支没有环境，必须要跳过build</span>
         <span class="na">env</span><span class="pi">:</span>
             <span class="na">JEKYLL_ENV</span><span class="pi">:</span> <span class="s">production</span>
	
       <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy to GitHub Pages</span>
         <span class="na">uses</span><span class="pi">:</span> <span class="s">JamesIves/github-pages-deploy-action@releases/v3</span>
         <span class="na">with</span><span class="pi">:</span>
             <span class="na">GITHUB_TOKEN</span><span class="pi">:</span> <span class="s">$</span>
             <span class="na">BRANCH</span><span class="pi">:</span> <span class="s">gh-pages</span>
             <span class="na">FOLDER</span><span class="pi">:</span> <span class="s">_site</span>
</code></pre></div>    </div>
    <ul>
      <li>因为actions里有写入操作，需要先去账户生成一个有权限的token。具体参考<a href="https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens">github文档</a></li>
      <li>还需要在repo setting里把gh-pages<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site">设置为pages对应的branch</a> 。</li>
    </ul>
  </li>
  <li><strong>更新内容：</strong>
    <ul>
      <li>在 <code class="language-plaintext highlighter-rouge">docs/_posts</code> 中更新内容。因为我平时笔记都是在 Obsidian 中编辑的，决定在 Obsidian 中设置一个文件夹，然后将每篇笔记同步到 <code class="language-plaintext highlighter-rouge">docs/_posts</code> 文件夹中。</li>
      <li>用obsidian的优点：
        <ul>
          <li>Markdown 格式, 包括Front Matter在 Obsidian 中显示非常舒适。</li>
          <li>
            <p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221194128.png" alt="Pasted image 20231221194128.png" width="600" /></p>
          </li>
          <li>利用 Obsidian 的<a href="https://github.com/beaussan/update-time-on-edit-obsidian"><code class="language-plaintext highlighter-rouge">update-time-on-edit</code></a> 插件，可以自动更新 <code class="language-plaintext highlighter-rouge">last_modified_date</code>。</li>
          <li>利用 Obsidian 的 <code class="language-plaintext highlighter-rouge">unique note</code> 插件，可以通过点击生成符合格式的笔记模板。</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>同步：</strong>
    <ul>
      <li>大部分 Obsidian 的 Markdown 格式是直接兼容的。为了同步，我编写了一个 Bash 脚本<code class="language-plaintext highlighter-rouge">sync_homepage.sh</code> ，把双链改成 Markdown 链接，并将文章中链接的图片同步到 <code class="language-plaintext highlighter-rouge">docs/attachment</code> 文件夹下。</li>
      <li>注意代码块可能会解析错误，所以在脚本里把ruby的代码块都替换成Liquid语法。</li>
      <li>问题：目前不支持增量同步，每次同步都需要遍历所有文件，但由于都是文本文件，影响较小。</li>
    </ul>
  </li>
  <li><strong>和raycast联动:</strong>
    <ul>
      <li>然后给脚本设置raycast的标记。这样每次在obsidian里面编辑完，直接用raycast快捷键同步。
 <img src="/personal_homepage/docs/attachment/Pasted%20image%2020231221195227.png" alt="Pasted image 20231221195227.png" width="600" /></li>
    </ul>
  </li>
</ol>

<p><code class="language-plaintext highlighter-rouge">sync_homepage.sh</code> 示范：</p>

<script src="https://gist.github.com/roshameow/d476620467bc40d79519f827bfd07da5.js"></script>

<h3 id="其他配置">其他配置</h3>

<ol>
  <li><strong>配置位置：</strong>
    <ul>
      <li>我的模版调用顺序是<code class="language-plaintext highlighter-rouge">_layouts/default.html-&gt;_includes/scripts.html-&gt;includes/对应功能.html</code></li>
    </ul>
  </li>
  <li><strong>配置latex风格的公式：</strong>
    <ul>
      <li>用<a href="https://stackoverflow.com/questions/26275645/how-to-support-latex-in-github-pages">mathjax@3</a> : 只支持<code class="language-plaintext highlighter-rouge">$$...$$</code>风格的语法，需要在Mathjax的tex里面配置一下支持一般的<code class="language-plaintext highlighter-rouge">$...$</code>语法
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> &lt;script&gt;
  MathJax = {
      tex: {
          tags: "ams",    // eq numbering options: none, ams, all
          inlineMath: [['$', '$'], ["\\(", "\\)"]],  // 设置行内数学公式的开始和结束标记
          displayMath: [['$$', '$$'], ["\\[", "\\]"]]  // 设置行间数学公式的开始和结束标记
      },
  }
 &lt;/script&gt;
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li><strong>配置google analysis:</strong>
    <ul>
      <li>我用的模版比较老，需要<a href="https://blog.jakelee.co.uk/migrating-jekyll-minima-from-ua-to-ga4/">把Universal analysis换成GA4</a></li>
    </ul>
  </li>
</ol>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><category term="WebPage" /><category term="content" /><category term="jekyll" /><category term="markdown" /><category term="obsidian" /><category term="raycast" /><summary type="html"><![CDATA[用jekyll的原因无需多说。这样配置好工作流之后，除了编写内容基本没有什么麻烦的操作(登录在线网页，换编辑器，按照统一格式改文件名之类在我看来都很麻烦。。)。 Ruby的环境管理，包管理方式 管理顺序： churby -&gt; ruby -&gt; bundle -&gt; gem -&gt; jekyll ruby： 是经常在 web 开发中使用的一种动态语言。 churby： Ruby 的环境管理工具，用于管理不同版本的 Ruby。 gem： Ruby 编写的软件包的统称，Jekyll 也是一个 gem。 bundler： 用于管理项目 gem 的工具，根据 Gemfile 管理不同版本的 gem。bundler自己本身也是gem。 如果用 Python 来类比，关系大概是这样： ruby python churby 版本号 conda create -n my_env python=版本号; conda activate my_env gem install 某个包 pip install 某个包 bundler install pip install -r requirements.txt 具体配置流程 安装ruby 按照 Jekyll 网站 的方法，安装 Chruby 和 Ruby-install。 切换到对应版本的 Ruby。 在 macOS 中我遇到的问题是系统中已经安装了 Miniforge3，其中包含了 OpenSSL，但不能正常使用。通过 Homebrew 安装 OpenSSL@1.1 解决。 本地配置 选择一个博客主题，例如 So Simple，fork 对应主题的 GitHub 代码，然后根据自己的需要修改 _config.yml。 运行 bundler install 安装项目所需的 gem。 运行 bundle exec jekyll serve，此时可以在本地进行预览。 利用 GitHub Actions 部署到 GitHub Pages 将下面的 Action 脚本添加到项目的 .github/workflows/main.yml 文件。等待执行完成，可以通过浏览器访问 http://name.github.io/base_url/。 name: Homepage Project Deploy to GitHub Pages on: push: branches: - master #设置每次将代码推送到 master 分支时自动执行 permissions: contents: write jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout repository uses: actions/checkout@v4 - name: Set up ruby and gems uses: ruby/setup-ruby@v1 #如果用ruby install的话好像没法切换版本 with: ruby-version: '3.2' # Not needed with a .ruby-version file bundler-cache: true # runs 'bundle install' and caches installed gems automatically - name: Build and deploy run: | bundle exec jekyll build echo 'personal-homepage' &gt; _site/CNAME cp _site/index.html _site/404.html touch _site/.nojekyll #必须的，gh-pages分支没有环境，必须要跳过build env: JEKYLL_ENV: production - name: Deploy to GitHub Pages uses: JamesIves/github-pages-deploy-action@releases/v3 with: GITHUB_TOKEN: $ BRANCH: gh-pages FOLDER: _site 因为actions里有写入操作，需要先去账户生成一个有权限的token。具体参考github文档 还需要在repo setting里把gh-pages设置为pages对应的branch 。 更新内容： 在 docs/_posts 中更新内容。因为我平时笔记都是在 Obsidian 中编辑的，决定在 Obsidian 中设置一个文件夹，然后将每篇笔记同步到 docs/_posts 文件夹中。 用obsidian的优点： Markdown 格式, 包括Front Matter在 Obsidian 中显示非常舒适。 利用 Obsidian 的update-time-on-edit 插件，可以自动更新 last_modified_date。 利用 Obsidian 的 unique note 插件，可以通过点击生成符合格式的笔记模板。 同步： 大部分 Obsidian 的 Markdown 格式是直接兼容的。为了同步，我编写了一个 Bash 脚本sync_homepage.sh ，把双链改成 Markdown 链接，并将文章中链接的图片同步到 docs/attachment 文件夹下。 注意代码块可能会解析错误，所以在脚本里把ruby的代码块都替换成Liquid语法。 问题：目前不支持增量同步，每次同步都需要遍历所有文件，但由于都是文本文件，影响较小。 和raycast联动: 然后给脚本设置raycast的标记。这样每次在obsidian里面编辑完，直接用raycast快捷键同步。 sync_homepage.sh 示范： 其他配置 配置位置： 我的模版调用顺序是_layouts/default.html-&gt;_includes/scripts.html-&gt;includes/对应功能.html 配置latex风格的公式： 用mathjax@3 : 只支持$$...$$风格的语法，需要在Mathjax的tex里面配置一下支持一般的$...$语法 &lt;script&gt; MathJax = { tex: { tags: "ams", // eq numbering options: none, ams, all inlineMath: [['$', '$'], ["\\(", "\\)"]], // 设置行内数学公式的开始和结束标记 displayMath: [['$$', '$$'], ["\\[", "\\]"]] // 设置行间数学公式的开始和结束标记 }, } &lt;/script&gt; 配置google analysis: 我用的模版比较老，需要把Universal analysis换成GA4]]></summary></entry><entry><title type="html">Hidden Post</title><link href="https://roshameow.github.io//personal_homepage/docs/hidden-post/" rel="alternate" type="text/html" title="Hidden Post" /><published>2018-02-25T00:00:00+00:00</published><updated>2018-02-25T00:00:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/hidden-post</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/hidden-post/"><![CDATA[<p>This post has YAML Front Matter of <code class="language-plaintext highlighter-rouge">hidden: true</code> and should not appear in <code class="language-plaintext highlighter-rouge">paginator.posts</code>.</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><summary type="html"><![CDATA[This post has YAML Front Matter of hidden: true and should not appear in paginator.posts.]]></summary></entry><entry><title type="html">MathJax Example</title><link href="https://roshameow.github.io//personal_homepage/docs/mathjax-example/" rel="alternate" type="text/html" title="MathJax Example" /><published>2015-08-10T12:08:50+00:00</published><updated>2015-08-10T12:08:50+00:00</updated><id>https://roshameow.github.io//personal_homepage/docs/mathjax-example</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/docs/mathjax-example/"><![CDATA[<p><a href="http://www.mathjax.org/">MathJax</a> is a simple, yet powerful, way of
including Tex/LaTex/MathML based mathematics in HTML webpages.</p>

<h2 id="usage">Usage</h2>

<p>To enable MathJax support configure your <code class="language-plaintext highlighter-rouge">_config.xml</code> to:</p>
<ul>
  <li>Set <code class="language-plaintext highlighter-rouge">kramdown</code> as the Markdown parser.</li>
  <li>Enable MathJax.</li>
</ul>

<p>The version of MathJax enabled is v3.</p>

<p>An example setting for <code class="language-plaintext highlighter-rouge">_config.xml</code> is shown below:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">markdown</span><span class="pi">:</span> <span class="s">kramdown</span>
<span class="na">mathjax</span><span class="pi">:</span>
  <span class="na">enable</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">combo</span><span class="pi">:</span> <span class="s2">"</span><span class="s">tex-svg"</span>
  <span class="na">tags</span><span class="pi">:</span> <span class="s2">"</span><span class="s">ams"</span>
</code></pre></div></div>

<p>Use <code class="language-plaintext highlighter-rouge">$$</code> as delimiters to enable TeX math mode, both for inline and display (i.e. block) rendering.</p>

<p>Here is an example equation that is inline: \(a^2 + b^2 = c^2\), where
\(a\), \(b\), and \(c\) are variables.</p>

<p>Here is a block rendering with no default equation numbering:</p>

\[\frac{1}{n^{2}}\]

<p>And, below is a block using the <code class="language-plaintext highlighter-rouge">\begin{equation}</code> and
<code class="language-plaintext highlighter-rouge">\end{equation}</code> LaTeX delimiters.  This equation will be numbered in
the <code class="language-plaintext highlighter-rouge">ams</code> and <code class="language-plaintext highlighter-rouge">all</code> setting for <code class="language-plaintext highlighter-rouge">mathjax.tags</code>.</p>

\[\begin{equation}
\mathbf{X}_{n,p} = \mathbf{A}_{n,k} \mathbf{B}_{k,p}    \label{test}
\end{equation}\]

<p>If equation numbering is turned on, we should see an equation number here: \(\eqref{test}\).</p>

<p>An example using the <code class="language-plaintext highlighter-rouge">{align}</code> LaTeX environment is below.  The first equation has a <code class="language-plaintext highlighter-rouge">\notag</code> directive.</p>

\[\begin{align}
(x + y) (x - y) &amp;= x^2 + xy - xy + y^2   \notag \\
    &amp;= x^2 - y^2
\end{align}\]]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;nil, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil, &quot;links&quot;=&gt;[{&quot;title&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;icon&quot;=&gt;nil}]}</name><email>w.liuatnk@gmail.com</email></author><category term="docs" /><summary type="html"><![CDATA[MathJax is a simple, yet powerful, way of including Tex/LaTex/MathML based mathematics in HTML webpages. Usage To enable MathJax support configure your _config.xml to: Set kramdown as the Markdown parser. Enable MathJax. The version of MathJax enabled is v3. An example setting for _config.xml is shown below: markdown: kramdown mathjax: enable: true combo: "tex-svg" tags: "ams" Use $$ as delimiters to enable TeX math mode, both for inline and display (i.e. block) rendering. Here is an example equation that is inline: \(a^2 + b^2 = c^2\), where \(a\), \(b\), and \(c\) are variables. Here is a block rendering with no default equation numbering: \[\frac{1}{n^{2}}\] And, below is a block using the \begin{equation} and \end{equation} LaTeX delimiters. This equation will be numbered in the ams and all setting for mathjax.tags. \[\begin{equation} \mathbf{X}_{n,p} = \mathbf{A}_{n,k} \mathbf{B}_{k,p} \label{test} \end{equation}\] If equation numbering is turned on, we should see an equation number here: \(\eqref{test}\). An example using the {align} LaTeX environment is below. The first equation has a \notag directive. \[\begin{align} (x + y) (x - y) &amp;= x^2 + xy - xy + y^2 \notag \\ &amp;= x^2 - y^2 \end{align}\]]]></summary></entry></feed>