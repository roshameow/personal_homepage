<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://roshameow.github.io//personal_homepage/atom.xml" rel="self" type="application/atom+xml" /><link href="https://roshameow.github.io//personal_homepage/" rel="alternate" type="text/html" /><updated>2025-03-26T11:29:56+00:00</updated><id>https://roshameow.github.io//personal_homepage/atom.xml</id><title type="html">Liu, Wen’s Home Page</title><subtitle>Work, Experiments and Ideas.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><entry><title type="html">blender学习: 内发光效果</title><link href="https://roshameow.github.io//personal_homepage/blender/blender-learning21/" rel="alternate" type="text/html" title="blender学习: 内发光效果" /><published>2025-03-11T00:00:00+00:00</published><updated>2025-03-11T19:40:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/blender/blender-learning21</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/blender/blender-learning21/"><![CDATA[<ul>
  <li>设置透明+自发光
    <ul>
      <li>用transparent shader和emmision shader合成</li>
      <li>用<a href="https://docs.blender.org/manual/en/latest/render/shader_nodes/input/layer_weight.html">layer weight node</a>控制参数
        <ul>
          <li>Frensnel 模式(对比度更高): 和frensel node一样公式, 把用IOR调节, 改成0-1调节weight</li>
          <li>Facing 模式: 按face面向镜头的角度调节weight</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>添加辉光: 用Compositing的<a href="https://docs.blender.org/manual/en/latest/compositing/types/filter/glare.html">glare node</a>  -&gt; Fog Glow</li>
</ul>

<p><img src="/personal_homepage/docs/attachment/glow.jpeg" alt="glow.jpeg" width="480" /></p>

<ul>
  <li>问题:
    <ul>
      <li>怎么设置物体前后的遮挡?</li>
    </ul>
  </li>
</ul>

<h2 id="渲染模式">渲染模式</h2>

<p>shader边栏 -&gt; Options -&gt; Settings -&gt; Surface -&gt;<a href="https://docs.blender.org/manual/en/latest/render/eevee/material_settings.html">Render Method</a></p>

<ul>
  <li><strong>Dithered Mode（抖动模式）</strong> : 效果更好, 性能开销更大
    <ul>
      <li>支持半透明渲染</li>
      <li>支持raytracing</li>
      <li>deferred rendering技术</li>
    </ul>
  </li>
  <li><strong>Blended Mode（混合模式）</strong>
    <ul>
      <li>前向渲染(forward rendering）技术</li>
      <li>透明表面的排序基于对象原点, 可能导致渲染错误</li>
    </ul>
  </li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="blender" /><category term="content" /><summary type="html"><![CDATA[设置透明+自发光 用transparent shader和emmision shader合成 用layer weight node控制参数 Frensnel 模式(对比度更高): 和frensel node一样公式, 把用IOR调节, 改成0-1调节weight Facing 模式: 按face面向镜头的角度调节weight 添加辉光: 用Compositing的glare node -&gt; Fog Glow]]></summary></entry><entry><title type="html">筛选适合阅读的论文</title><link href="https://roshameow.github.io//personal_homepage/tool/papers/" rel="alternate" type="text/html" title="筛选适合阅读的论文" /><published>2025-03-09T00:00:00+00:00</published><updated>2025-03-10T13:35:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/tool/papers</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/tool/papers/"><![CDATA[<table>
  <thead>
    <tr>
      <th>搜索步骤</th>
      <th>目的</th>
      <th>输入-&gt;输出</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>一级搜索</td>
      <td>按时间, 类别, 标题搜索文章</td>
      <td>获取标题, 作者, 文章链接, summary</td>
    </tr>
    <tr>
      <td>二级搜索</td>
      <td>判断summary是否对主题有用</td>
      <td>summary + prompt -&gt; yes/no</td>
    </tr>
    <tr>
      <td>三级搜索</td>
      <td>判断文章内容</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<ul>
  <li>一级搜索(按时间, 类别, 标题搜索文章) —&gt; 获取标题, 作者, 文章链接, summary
    <ul>
      <li>arxiv搜索: <a href="https://info.arxiv.org/help/api/basics.html#python_simple_example">arxiv api调用</a>, 或者可以直接用<a href="https://pypi.org/project/arxiv/">avxiv的python包</a></li>
    </ul>
  </li>
  <li>二级搜索: 判断summary是否对主题有用 -&gt; summary + prompt
    <ul>
      <li>Does this paper describe how to find abnormal returns in stocks? Just answer yes or no</li>
      <li>f”The following is the content of a research paper:\n{pdf_text}\n\nQuestion: {question_str}”},</li>
      <li>gemini</li>
      <li><a href="https://huggingface.co/tasks/zero-shot-classification">Hugging Face 的 Zero-Shot Classification pipeline</a></li>
      <li>classifier = pipeline(“zero-shot-classification”, model=”facebook/bart-large-mnli”)</li>
    </ul>
  </li>
  <li>三级搜索: 下载文章内容</li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="tool" /><category term="content" /><summary type="html"><![CDATA[搜索步骤 目的 输入-&gt;输出 一级搜索 按时间, 类别, 标题搜索文章 获取标题, 作者, 文章链接, summary 二级搜索 判断summary是否对主题有用 summary + prompt -&gt; yes/no 三级搜索 判断文章内容  ]]></summary></entry><entry><title type="html">worldquant BRAIN 股票因子 (五 ) – 数据集理解</title><link href="https://roshameow.github.io//personal_homepage/finance/alpha5/" rel="alternate" type="text/html" title="worldquant BRAIN 股票因子 (五 ) – 数据集理解" /><published>2025-02-26T00:00:00+00:00</published><updated>2025-03-11T19:04:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/finance/alpha5</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/finance/alpha5/"><![CDATA[<table>
  <thead>
    <tr>
      <th>数据集</th>
      <th>特点</th>
      <th>信号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>模型数据集(model)</td>
      <td>大多是分数形式</td>
      <td> </td>
    </tr>
    <tr>
      <td>基本面数据</td>
      <td> </td>
      <td>1. <code class="language-plaintext highlighter-rouge">PE(市盈率) = eps/close</code><br />2. <code class="language-plaintext highlighter-rouge">PS(市销率) = close*sharesout/revenue</code><br />3. cashflow/price<br />4. cashflow/sales<br />5. margin, pretax margin, operating margin <br />6. enterprise value</td>
    </tr>
    <tr>
      <td>风险数据</td>
      <td> </td>
      <td>1. 用risk factor做neutralize<br />2. 用risk-return 代替returns<br />3.</td>
    </tr>
    <tr>
      <td>量价数据</td>
      <td>完整</td>
      <td>1. 交易量激增(volume spike) <br />2. -returns</td>
    </tr>
    <tr>
      <td>社交媒体数据</td>
      <td>更新频率高<br />有时效性: 尽量不要超过1季度</td>
      <td> </td>
    </tr>
    <tr>
      <td>期权数据集(Options)</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>分析师数据<br /></td>
      <td>很多是vector数据<br />更新频率低<br />有很多异常值</td>
      <td>1. 预测和当前值的差异<br />2. 预测值随时间变化<br />3. 分析师修订模型数据</td>
    </tr>
    <tr>
      <td>宏观数据(Macro)</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>other数据</td>
      <td> </td>
      <td>1. group分类数据</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>risk, analyst, model里和基本面, 量价类似字段可以用</li>
</ul>

<p>[1]  <a href="https://support.worldquantbrain.com/hc/en-us/community/posts/25238147759383-Getting-started-with-Model-Datasets">Getting started with Model Datasets</a></p>

<p>[2]   <a href="https://support.worldquantbrain.com/hc/en-us/community/posts/27569589603863-Dataset-Deepdives-Option23-Option-Implied-Volatility-and-Greeks">Dataset Deepdives - Option23 (Option Implied Volatility and Greeks)</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwiX%2B3xcARk6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkidGh0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNzQ5MzYzNzM1NjQzOS1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1PdGhlci1EYXRhc2V0cwY7CFQ6DnNlYXJjaF9pZEkiKWFiZTEwYzA1LTI2ZDQtNDNlMC1hZDQ4LWRmYjkyYzkxMTY2NQY7CEY6CXJhbmtpBjoLbG9jYWxlSSIKZW4tdXMGOwhUOgpxdWVyeUkiDERhdGFzZXQGOwhUOhJyZXN1bHRzX2NvdW50aQIVAg%3D%3D--1a113d5587a51377ecd6cbba3b0d37108204fca9">Getting started with Other Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwgXIIY39BY6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkidmh0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNTIzODE1OTM2ODIxNS1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1BbmFseXN0LURhdGFzZXRzBjsIVDoOc2VhcmNoX2lkSSIpYWJlMTBjMDUtMjZkNC00M2UwLWFkNDgtZGZiOTJjOTExNjY1BjsIRjoJcmFua2kLOgtsb2NhbGVJIgplbi11cwY7CFQ6CnF1ZXJ5SSIMRGF0YXNldAY7CFQ6EnJlc3VsdHNfY291bnRpAhUC--7d41cbe8f4f4c83252fe5d5dd87da810c7ab50af">Getting started with Analyst Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwiXzoQjsxg6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkidGh0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNzE1NzY3NDExODgwNy1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1NYWNyby1EYXRhc2V0cwY7CFQ6DnNlYXJjaF9pZEkiKWFiZTEwYzA1LTI2ZDQtNDNlMC1hZDQ4LWRmYjkyYzkxMTY2NQY7CEY6CXJhbmtpDToLbG9jYWxlSSIKZW4tdXMGOwhUOgpxdWVyeUkiDERhdGFzZXQGOwhUOhJyZXN1bHRzX2NvdW50aQIVAg%3D%3D--121adf6e6b285a27d1e48e3471e2d6751e0d0298">Getting started with Macro Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwgXI2Vf6hY6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkifWh0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNTE5NTg3ODYyMTk3NS1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1TaG9ydC1JbnRlcmVzdC1EYXRhc2V0cwY7CFQ6DnNlYXJjaF9pZEkiKWFiZTEwYzA1LTI2ZDQtNDNlMC1hZDQ4LWRmYjkyYzkxMTY2NQY7CEY6CXJhbmtpDjoLbG9jYWxlSSIKZW4tdXMGOwhUOgpxdWVyeUkiDERhdGFzZXQGOwhUOhJyZXN1bHRzX2NvdW50aQIVAg%3D%3D--b4adf985bfba378be9fcd826f2750f37f550ca32">Getting started with Short Interest Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwiX0dY29BY6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkic2h0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNTIzODE0Nzg3OTMxOS1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1OZXdzLURhdGFzZXRzBjsIVDoOc2VhcmNoX2lkSSIpZWIyMmRmYmItNTQyOC00NGM2LTgyOWQtNmZjMzEwYTJlOTA5BjsIRjoJcmFua2kGOgtsb2NhbGVJIgplbi11cwY7CFQ6CnF1ZXJ5SSIMRGF0YXNldAY7CFQ6EnJlc3VsdHNfY291bnRpAhUC--39a7b6d0be102d6f6c783e197b971724fd36f65e">Getting started with News Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwgXRn18HAg6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkidGh0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy84OTE4NDQwNjkxMjIzLS1CUkFJTi1USVBTLVdvcmtpbmctb24tbmV3cy1kYXRhc2V0cwY7CFQ6DnNlYXJjaF9pZEkiKWViMjJkZmJiLTU0MjgtNDRjNi04MjlkLTZmYzMxMGEyZTkwOQY7CEY6CXJhbmtpDjoLbG9jYWxlSSIKZW4tdXMGOwhUOgpxdWVyeUkiDERhdGFzZXQGOwhUOhJyZXN1bHRzX2NvdW50aQIVAg%3D%3D--d7743b72fe92fbf5766ce002c9f062e42e46de28">[BRAIN TIPS] Working on news datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwgXyowEehg6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkie2h0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNjkxMjM0MTQxMjM3NS1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1QcmljZS1Wb2x1bWUtRGF0YXNldHMGOwhUOg5zZWFyY2hfaWRJIillYjIyZGZiYi01NDI4LTQ0YzYtODI5ZC02ZmMzMTBhMmU5MDkGOwhGOglyYW5raQs6C2xvY2FsZUkiCmVuLXVzBjsIVDoKcXVlcnlJIgxEYXRhc2V0BjsIVDoScmVzdWx0c19jb3VudGkCFQI%3D--6831292c011ffde15c6d6b4707258387474ab5cc">Getting started with Price Volume Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwgXjrgfAhc6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkie2h0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNTI5Nzg4OTU2MjEzNS1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1Tb2NpYWwtTWVkaWEtRGF0YXNldHMGOwhUOg5zZWFyY2hfaWRJIillYjIyZGZiYi01NDI4LTQ0YzYtODI5ZC02ZmMzMTBhMmU5MDkGOwhGOglyYW5raQ86C2xvY2FsZUkiCmVuLXVzBjsIVDoKcXVlcnlJIgxEYXRhc2V0BjsIVDoScmVzdWx0c19jb3VudGkCFQI%3D--7610f0e36b333735c4cb87f268d0e201fd078682">Getting started with Social Media Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwgXLifBOxc6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkid2h0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNTU0NTQxMTA3OTcwMy1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1FYXJuaW5ncy1EYXRhc2V0cwY7CFQ6DnNlYXJjaF9pZEkiKWViMjJkZmJiLTU0MjgtNDRjNi04MjlkLTZmYzMxMGEyZTkwOQY7CEY6CXJhbmtpDDoLbG9jYWxlSSIKZW4tdXMGOwhUOgpxdWVyeUkiDERhdGFzZXQGOwhUOhJyZXN1bHRzX2NvdW50aQIVAg%3D%3D--9854e3b1f92395e565e0d67bbfa6b52544a373f0">Getting started with Earnings Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwgXqrcWsxg6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkic2h0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNzE1NzQ1OTM0Nzk5MS1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1SaXNrLURhdGFzZXRzBjsIVDoOc2VhcmNoX2lkSSIpZWIyMmRmYmItNTQyOC00NGM2LTgyOWQtNmZjMzEwYTJlOTA5BjsIRjoJcmFua2kHOgtsb2NhbGVJIgplbi11cwY7CFQ6CnF1ZXJ5SSIMRGF0YXNldAY7CFQ6EnJlc3VsdHNfY291bnRpAhUC--904afdab3aa709384b5d21857ffab7f1cf76ccc7">Getting started with Risk Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwgXSDO9nRY6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkieGh0dHBzOi8vc3VwcG9ydC53b3JsZHF1YW50YnJhaW4uY29tL2hjL2VuLXVzL2NvbW11bml0eS9wb3N0cy8yNDg2NjczOTkzMTE1OS1HZXR0aW5nLXN0YXJ0ZWQtd2l0aC1TZW50aW1lbnQtRGF0YXNldHMGOwhUOg5zZWFyY2hfaWRJIik4YzM4ZjUzZi1iN2ExLTQzOTAtYWE3MS1lZDg2Nzk0M2VjYzIGOwhGOglyYW5raQs6C2xvY2FsZUkiCmVuLXVzBjsIVDoKcXVlcnlJIgxEYXRhc2V0BjsIVDoScmVzdWx0c19jb3VudGkCFQI%3D--5d7188588972d8e822582aea6b26a5ddd4697ca7">Getting started with Sentiment Datasets</a></p>

<p><a href="https://support.worldquantbrain.com/hc/en-us/search/click?data=BAh7DjoHaWRsKwiXEsaUPBI6D2FjY291bnRfaWRpA9GrqjoJdHlwZUkiE2NvbW11bml0eV9wb3N0BjoGRVQ6CHVybEkiAYFodHRwczovL3N1cHBvcnQud29ybGRxdWFudGJyYWluLmNvbS9oYy9lbi11cy9jb21tdW5pdHkvcG9zdHMvMjAwNTE0MDMzNDY1ODMtLUJSQUlOLVRJUFMtRmluZGluZy1BbHBoYXMtRnVuZGFtZW50YWwtYW5kLU1vZGVsLURhdGEGOwhUOg5zZWFyY2hfaWRJIiljOTdiZmU5NC0xZjY5LTRmZGQtYjE2Zi0zY2RjZTdjMTk0NzAGOwhGOglyYW5raQs6C2xvY2FsZUkiCmVuLXVzBjsIVDoKcXVlcnlJIhhmdW5kYW1lbnRhbCBEYXRhc2V0BjsIVDoScmVzdWx0c19jb3VudGkCcAI%3D--870dfda40a16a3b1195f26c7d4cc0546b1e3f354">[BRAIN TIPS] Finding Alphas: Fundamental and Model Data</a></p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="finance" /><category term="content" /><summary type="html"><![CDATA[数据集 特点 信号 模型数据集(model) 大多是分数形式   基本面数据   1. PE(市盈率) = eps/close2. PS(市销率) = close*sharesout/revenue3. cashflow/price4. cashflow/sales5. margin, pretax margin, operating margin 6. enterprise value 风险数据   1. 用risk factor做neutralize2. 用risk-return 代替returns3. 量价数据 完整 1. 交易量激增(volume spike) 2. -returns 社交媒体数据 更新频率高有时效性: 尽量不要超过1季度   期权数据集(Options)     分析师数据 很多是vector数据更新频率低有很多异常值 1. 预测和当前值的差异2. 预测值随时间变化3. 分析师修订模型数据 宏观数据(Macro)     other数据   1. group分类数据]]></summary></entry><entry><title type="html">blender学习: 制作随音乐律动的视频</title><link href="https://roshameow.github.io//personal_homepage/blender/blender-learning20/" rel="alternate" type="text/html" title="blender学习: 制作随音乐律动的视频" /><published>2025-02-20T00:00:00+00:00</published><updated>2025-02-21T13:43:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/blender/blender-learning20</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/blender/blender-learning20/"><![CDATA[<p><a href="https://www.bilibili.com/video/BV1CPNpeTE5E/">参考教学</a></p>

<ul>
  <li>设置物体随1d强度变化:
    <ul>
      <li>在plane mesh上添加Cloud Texture, 把strength打上关键帧</li>
      <li>用geometry node在变形的mesh上添加instance
        <ul>
          <li>把material的link从Data改为Object才能给instance添加材质</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>添加音乐:
    <ul>
      <li>设置物体随音乐(1d)运动: 用Graph Editor的<a href="https://docs.blender.org/manual/en/latest/editors/graph_editor/channels/editing.html">Channel</a> -&gt; Sound to Samples 功能, 让strength随音乐变化</li>
      <li>设置播放音乐: 在Video Sequencer里添加音乐</li>
    </ul>
  </li>
</ul>

<iframe src="//player.bilibili.com/player.html?isOutside=true&amp;aid=114040038755496&amp;bvid=BV1pTAZeNEhW&amp;cid=28499775428&amp;p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="blender" /><category term="content" /><category term="music" /><category term="geometry_node" /><category term="video_editor" /><summary type="html"><![CDATA[参考教学]]></summary></entry><entry><title type="html">传感器颜色调制 (四) – 多光谱颜色校准</title><link href="https://roshameow.github.io//personal_homepage/algorithm/color-moderate3/" rel="alternate" type="text/html" title="传感器颜色调制 (四) – 多光谱颜色校准" /><published>2025-02-12T00:00:00+00:00</published><updated>2025-03-11T19:22:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/algorithm/color-moderate3</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/algorithm/color-moderate3/"><![CDATA[<h2 id="用rgb校准多光谱数据">用RGB校准多光谱数据</h2>

<p>把<code class="language-plaintext highlighter-rouge">(H,W,N)</code> 的多光谱数据 <code class="language-plaintext highlighter-rouge">Y</code> , 由<code class="language-plaintext highlighter-rouge">N x 3</code> 的CCM(Color Correction Matrix) 线性映射为 <code class="language-plaintext highlighter-rouge">(H,W,3)</code> 的rgb数据 <code class="language-plaintext highlighter-rouge">X</code> . 即 $Y\cdot CCM = X$ .</p>

<ul>
  <li>虽然是线性映射, 可以在步骤前给Y 加一个 feature extraction模块, 实现非线性. 达到更低的loss.</li>
  <li>即使只是线性映射, 多光谱数据也比3通道的数据能达到更低的loss.</li>
</ul>

<h3 id="求解系数">求解系数</h3>

<table>
  <thead>
    <tr>
      <th>Loss &amp; 约束</th>
      <th>公式</th>
      <th>说明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>普通L2 norm</td>
      <td>$\min \vert\vert Y\cdot CCM - X\vert\vert_2$</td>
      <td> </td>
    </tr>
    <tr>
      <td>restrict awb</td>
      <td>$\min \vert\vert Y\cdot CCM - X\vert\vert_2$ ,  $\sum_{col}(CCM)=1$</td>
      <td>让中性灰映射不变, 即让 (1,1,…,1)映射到(1,1,1)<br />一般是把wb(white balance)步骤放在color correction之前会这样做<br />因为wb在不同机器上表现差别更大, <br />所以给这两步设置不同的校准频率吗?</td>
    </tr>
    <tr>
      <td>L2 Regularization<br />🌟</td>
      <td>$\min \vert\vert Y\cdot CCM - X\vert\vert_2 + \lambda\cdot\vert\vert CCM \vert\vert_2$</td>
      <td>防止CCM因为数据点比较少而过拟合<br />如果用24色卡, 考虑多光谱数据有 3n 个未知数, <br />加入约束是十分必要的, 这个也是计算最简单的约束条件</td>
    </tr>
    <tr>
      <td>Lasso</td>
      <td>$\min \vert\vert Y\cdot CCM - X\vert\vert_2 + \lambda\cdot\vert\vert CCM \vert\vert_1$</td>
      <td>防止CCM某个数据过大外, 还能增强稀疏性<br />在color-correction里没必要</td>
    </tr>
    <tr>
      <td>CIELab<br />🌟</td>
      <td>把 X 变换到Lab空间. <br />计算 $Y\cdot CCM$ 和 X的delta E loss</td>
      <td>Lab 是评判RGB数据是否相近的最终标准. 这一步也是必要的.<br />Lab 变换是非线性的, 这一步优化时间更长.<br />需要在线性优化得到初值之后, 第二步再做delta E 的优化.</td>
    </tr>
  </tbody>
</table>

<ol>
  <li><strong>原始L2 norm</strong>:  用<strong>最小二乘法</strong></li>
  <li><strong>restrict awb条件</strong> : 因为是线性条件, 可以直接求解.
    <ul>
      <li>把awb条件写成: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020250220192803.png" alt="Pasted image 20250220192803.png" width="300" /> 的形式</li>
      <li>直接代入原方程: <img src="/personal_homepage/docs/attachment/Pasted%20image%2020250220192840.png" alt="Pasted image 20250220192840.png" width="1000" />
        <ul>
          <li>把 Y 和 CCM 分块展开并化简. 用<strong>最小二乘法</strong>求解化简后的方程即可.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>L2 Regularization</strong> : 因为正则项也是L2的, 可以直接计算.
    <ul>
      <li>在求导时, CCM的系数由 $2Y^T Y$ 变为 $2Y^TY+2\begin{bmatrix}\lambda&amp;&amp; \\ &amp;\lambda&amp; \\ &amp;&amp;\lambda\end{bmatrix}$ 即可</li>
    </ul>
  </li>
  <li><strong>Lasso问题</strong>: 可以用近端算子轮流迭代的方法优化.</li>
  <li><strong>Delta E</strong> : 用BFGS 的方法优化.</li>
</ol>

<h3 id="测量标准">测量标准</h3>

<ul>
  <li>数据来源:
    <ul>
      <li>标准色卡</li>
      <li>色差仪测量: 理论上能组成很大的数据集, 但是很多材料没有好的反射性能</li>
    </ul>
  </li>
  <li>测量环境
    <ul>
      <li>保证测量到的都是反射光</li>
      <li>控制光源, 如果用色差仪和色差仪的光源保持一致</li>
    </ul>
  </li>
</ul>

<h3 id="结果可视化">结果可视化</h3>

<ul>
  <li>色卡: <img src="/personal_homepage/docs/attachment/color_check_result.png" alt="color_check_result.png" width="300" /> 显示校准后和标准色的直观差距</li>
  <li>Lab色彩: <img src="/personal_homepage/docs/attachment/lab_chromaticities.png" alt="lab_chromaticities.png" width="200" /> 显示数据集在ab空间的分布, 以及校准后的lab色差</li>
  <li>在给出多光谱sensor每个通道的光谱(<code class="language-plaintext highlighter-rouge">cmf = n x 28</code> )的情况下, 可以出示下面两图: 由<code class="language-plaintext highlighter-rouge">(cmf_T * cmf)^{-1} * cmf</code> 做为系数, 还可以加入一些Regularization
    <ul class="task-list">
      <li>校准数据光谱: <img src="/personal_homepage/docs/attachment/color_spectrum.png" alt="color_spectrum.png" width="300" />  显示数据集的光谱分布.</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />多光谱映射的RGB和真实RGB的光谱差距. 即色卡上的红, 蓝, 绿三色.</li>
    </ul>
  </li>
</ul>

<h3 id="代码">代码</h3>

<ul>
  <li><a href="https://gist.github.com/roshameow/8855383a21cab1b36bba130a6cee70a5#file-color_plot-py"><strong>color_plot.py</strong></a></li>
</ul>

<h2 id="用多光谱合成高光谱数据">用多光谱合成高光谱数据</h2>

<p>多光谱 + 高光谱分布 -&gt; 高光谱</p>

<ul>
  <li>数据采集: (多光谱,高光谱) 数据对
    <ul>
      <li>自然状态下采集的高光谱数据集(反射光+光源)</li>
      <li>多光谱数据每个通道光谱 -&gt; 由高光谱数据合成的多光谱数据</li>
    </ul>
  </li>
  <li>模型
    <ul>
      <li>考虑现实世界情况, 带kernel的模型(<a href="https://en.wikipedia.org/wiki/Radial_basis_function_network">rbf</a> )比较合适?</li>
    </ul>
  </li>
</ul>

<h2 id="用多光谱做awb">用多光谱做awb</h2>

<p>即在多光谱数据中去掉光源的影响. 多光谱 + 光源分布 -&gt; 光源的 rgb illuminant vector.</p>

<ul>
  <li>数据采集: (多光谱, rgb illuminant vector) 数据对
    <ul>
      <li>自然状态下采集的光源的高光谱数据集 -&gt; 转换成多光谱数据集和rgb illuminant vector数据集</li>
      <li>仿真: 从已知 (相机拍摄的rgb图片,rgb illuminant vector)  + 相机的response曲线 + 光源的光谱数据集 + 反射谱数据集 -&gt; 推测出图片每个像素的光谱
        <ul>
          <li><code class="language-plaintext highlighter-rouge">相机的response曲线 * 光源的光谱 = rgb illuminant vector</code></li>
          <li><code class="language-plaintext highlighter-rouge">相机的response曲线 *  光源的光谱 * 反射谱 = rgb像素</code></li>
          <li>用<a href="https://en.wikipedia.org/wiki/Maximum_likelihood_estimation">最大似然估计</a> 的想法, 先估计出图片光源光谱, 再估计出每个像素的反射光谱</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="reference">reference</h2>

<p>[1]  Koskinen, Samu, Erman Acar, and Joni-Kristian Kämäräinen. “Single Pixel Spectral Color Constancy.” <em>International Journal of Computer Vision</em>, September 1, 2023. <a href="https://doi.org/10.1007/s11263-023-01867-x">https://doi.org/10.1007/s11263-023-01867-x</a>.</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="algorithm" /><category term="content" /><category term="sensor" /><category term="multi-spectrum" /><category term="isp" /><category term="proximal_operator" /><summary type="html"><![CDATA[用RGB校准多光谱数据]]></summary></entry><entry><title type="html">blender学习: 制作水体</title><link href="https://roshameow.github.io//personal_homepage/blender/blender-learning19/" rel="alternate" type="text/html" title="blender学习: 制作水体" /><published>2025-02-10T00:00:00+00:00</published><updated>2025-02-10T12:29:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/blender/blender-learning19</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/blender/blender-learning19/"><![CDATA[<h2 id="用displacementnoise-texture制作">用displacement+noise texture制作</h2>

<p><a href="https://www.youtube.com/watch?v=ke-MgwUxLjI">参考教学</a></p>

<ol>
  <li>用一个plain mesh代表水体</li>
  <li>制作水体颜色: Glossy + <a href="https://docs.blender.org/manual/en/latest/render/shader_nodes/shader/refraction.html">Refraction(折射)</a>  + <a href="https://docs.blender.org/manual/en/latest/render/shader_nodes/shader/transparent.html">Transparent</a>
    <ul>
      <li>Glossy + <a href="https://docs.blender.org/manual/en/latest/render/shader_nodes/shader/refraction.html">Refraction(折射)</a> 设置一个透明效果(参考玻璃的做法)
        <ul>
          <li>Refraction的Roughness通过波动调节(增强动态效果)</li>
        </ul>
      </li>
      <li><a href="https://docs.blender.org/manual/en/latest/render/shader_nodes/shader/transparent.html">Transparent</a>  设置成蓝色, 相当于一个蓝色滤光片. 加在最后. 只有Cycles 渲染有用.</li>
    </ul>
  </li>
  <li>制作波动: 用<a href="https://docs.blender.org/manual/en/latest/modeling/geometry_nodes/texture/noise.html">noise texture node</a> 输入displacement制作
    <ol>
      <li>我们的输出的是2d的plain. 用3d noise和4d noise的区别是?</li>
    </ol>
  </li>
</ol>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="blender" /><category term="content" /><category term="shader" /><summary type="html"><![CDATA[用displacement+noise texture制作]]></summary></entry><entry><title type="html">切菜板成分</title><link href="https://roshameow.github.io//personal_homepage/daily/cutting-board/" rel="alternate" type="text/html" title="切菜板成分" /><published>2025-02-09T00:00:00+00:00</published><updated>2025-02-10T10:18:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/daily/cutting-board</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/daily/cutting-board/"><![CDATA[<h2 id="材质">材质</h2>

<p>自身硬度和使用的适用性矛盾.</p>

<table>
  <thead>
    <tr>
      <th>材质</th>
      <th>耐高温</th>
      <th>洗碗机</th>
      <th>开裂发霉</th>
      <th>碎屑</th>
      <th>适用性</th>
      <th>建议</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>不锈钢/陶瓷/石材</td>
      <td>✔️</td>
      <td>✔️</td>
      <td>x</td>
      <td>x</td>
      <td>打滑, 伤刀</td>
      <td> </td>
    </tr>
    <tr>
      <td>塑料<br />麦秸秆(内含塑料)</td>
      <td>✔️</td>
      <td>✔️<br /></td>
      <td>不容易<br /></td>
      <td>PE材质<br />高温下对人体有害</td>
      <td> </td>
      <td>不切需要烹饪的生食</td>
    </tr>
    <tr>
      <td>木质</td>
      <td> </td>
      <td> </td>
      <td>✔️<br /></td>
      <td>不会产生有害物质</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>楠竹</td>
      <td> </td>
      <td> </td>
      <td>✔️</td>
      <td>不容易</td>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="daily" /><category term="content" /><summary type="html"><![CDATA[材质]]></summary></entry><entry><title type="html">worldquant BRAIN 股票因子 (四) – 因子思路</title><link href="https://roshameow.github.io//personal_homepage/finance/alphas4/" rel="alternate" type="text/html" title="worldquant BRAIN 股票因子 (四) – 因子思路" /><published>2025-01-22T00:00:00+00:00</published><updated>2025-02-27T18:55:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/finance/alphas4</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/finance/alphas4/"><![CDATA[<h2 id="事件">事件</h2>

<ul>
  <li>并购(M&amp;A)</li>
</ul>

<h2 id="分析师数据">分析师数据</h2>

<ul>
  <li>employee</li>
  <li><code class="language-plaintext highlighter-rouge">anl4_adjusted_netincome_ft</code>  本身就是个很好的指标
    <ul>
      <li>各种变形<code class="language-plaintext highlighter-rouge">group_netralize, ts_mean, winsorize , +其他alpha</code> 也都可以</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">anl4_flag_erbfintax</code></li>
  <li><code class="language-plaintext highlighter-rouge">anl4_totassets_number</code></li>
</ul>

<h2 id="一些优化alpha的通用技巧">一些优化alpha的通用技巧</h2>

<ul>
  <li><strong>双重中性化</strong>: 让alpha对两个group都做中性化, 即在group (A x B) 上中性化.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">group=densify((group_B + 1)*1000 + group_A)</code>  把两个group编码到一个group里.</li>
      <li>没想到两个group可以相加.</li>
      <li>类似于transformer中常用的, 把position embedding和text embedding用sum编码到一起.</li>
    </ul>
  </li>
  <li><strong>双重排序</strong>: 和双重中性化类似. 给主要datafield A 一个很大的权重. 得到字典排序的效果.</li>
  <li><strong>设置“止盈止损”</strong>: 原来的写法好像有问题.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">close_at_event = trade_when(event1, close, -1);  alpha = trade_when(event2, signal, abs(close - close_at_event) / close &gt; .1);</code>
        <ul>
          <li><code class="language-plaintext highlighter-rouge">close_at_event</code>是<code class="language-plaintext highlighter-rouge">event1</code> 上次发生时的<code class="language-plaintext highlighter-rouge">close</code>. 如果上次<code class="language-plaintext highlighter-rouge">event1</code> 的影响超过10%, 对股票强制平仓.
            <ul>
              <li>比如<code class="language-plaintext highlighter-rouge">event1</code> 是上涨. 连续n天下跌导致影响超过10% 时, 强制平仓.</li>
            </ul>
          </li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">close_at_event = trade_when(not(event), close, -1);alpha=(abs(close - close_at_event) / close &gt; .1)? nan : signal</code> 好像更符合逻辑
        <ul>
          <li>event 连续发生导致影响超过 10% 则强制平仓</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>月度调仓</strong>: 让仓位最多保持一个月, 是为了在量化结果的同时保持灵活性
    <ul>
      <li><code class="language-plaintext highlighter-rouge">D = days_from_last_change(event);Alpha = trade_when(D &lt; period, signal, D &gt; period);Alpha</code>
        <ul>
          <li>event是离散指标(比如: 5日均线&gt;10日均线)</li>
          <li>D 距上次调仓的时间, period是规定时间(一个月)</li>
          <li>情况:
            <ul>
              <li>event 指标变化 -&gt; D = 0, 调仓</li>
              <li>event 指标在规定时间内一直没变化 -&gt; D &gt;规定时间, 超时, 关闭仓位</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h3 id="交易条件">交易条件</h3>

<ul>
  <li><strong>判断市场的波动性</strong>:
    <ul>
      <li>用<code class="language-plaintext highlighter-rouge">trade_when(市场波动性,alpha, -1)</code>控制alpha的适用范围.</li>
      <li>“系统风险度量”数据集, 新闻数据集, 情绪数据集</li>
    </ul>
  </li>
  <li><strong>识别市场特殊时期</strong>: 比如在回报特别差的时期关闭交易
      <code class="language-plaintext highlighter-rouge">count_of_each_group = group_count(1,subindustry); #计算每个组别的股票数量  
      drawdown_num = if_else(returns&lt;-0.09,1,0); #如果大幅下跌则计数1，否则为0  
      sum_of_drawdown = group_sum(drawdown_num,subindustry); #计算每天各组内大幅下跌股票的总数  
      ratio = sum_of_drawdown/count_of_each_group; #计算出各组的大幅下跌股票数量占比  
      alpha = if_else(ratio&gt;0.6,nan,signal); #如果本组超过60%的股票都在大幅下跌，则赋值nan.</code>
    <ul>
      <li>关闭多天:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">alpha = if_else(days_from_last_change(ratio&lt;0.6) &lt; 200,nan,signal); #关闭200天</code>
            <ul>
              <li>大幅下跌事件 出现/消失 200天后才能解锁交易</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>只取特殊股票交易</strong>:
    <ul>
      <li>比如市值靠前的股票: <code class="language-plaintext highlighter-rouge">filter = if_else(rank(cap)&gt;0.9,1,nan)</code></li>
    </ul>
  </li>
</ul>

<h2 id="参考资料">参考资料</h2>

<p>[1]   <a href="https://support.worldquantbrain.com/hc/en-us/community/posts/15152019662487--%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99-BRAIN%E5%B0%8F%E8%B4%B4%E5%A3%AB-%E8%BF%99%E9%87%8C%E6%9C%89%E4%BD%A0%E6%83%B3%E8%A6%81%E7%9A%84%E7%A1%AC%E6%A0%B8%E5%86%85%E5%AE%B9-%E6%8C%81%E7%BB%AD%E5%91%A8%E6%9B%B4%E4%B8%AD">【学习资料】BRAIN小贴士(这里有你想要的硬核内容！持续周更中）</a></p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="finance" /><category term="content" /><summary type="html"><![CDATA[事件]]></summary></entry><entry><title type="html">worldquant BRAIN 股票因子 (三) – API使用和代码</title><link href="https://roshameow.github.io//personal_homepage/code/alphas3/" rel="alternate" type="text/html" title="worldquant BRAIN 股票因子 (三) – API使用和代码" /><published>2025-01-18T00:00:00+00:00</published><updated>2025-02-10T20:57:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/code/alphas3</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/code/alphas3/"><![CDATA[<h2 id="仿真流程">仿真流程</h2>

<h3 id="api功能">API功能</h3>

<ul>
  <li>登陆: <code class="language-plaintext highlighter-rouge">https://api.worldquantbrain.com/authentication</code></li>
  <li>获得数据字段: <code class="language-plaintext highlighter-rouge">https://api.worldquantbrain.com/data-fields?</code></li>
  <li>发起仿真测试: <code class="language-plaintext highlighter-rouge">https://api.worldquantbrain.com/simulations</code></li>
  <li>查询结果, 打标签: <code class="language-plaintext highlighter-rouge">https://api.worldquantbrain.com/alphas/{alpha_id}</code></li>
</ul>

<h3 id="批量仿真流程">批量仿真流程</h3>

<ol>
  <li>开启异步session</li>
  <li>尝试登陆</li>
  <li>生成仿真数据, 把仿真数据存入csv文件, 计算任务数量</li>
  <li>批量开启仿真回测, 处理可能出现的任何异常(登陆超时,发送过快,回测被拒绝)
    <ol>
      <li>发起请求</li>
      <li>发起回测成功(response中包含<code class="language-plaintext highlighter-rouge">Location</code>) -&gt; 获得回测状态(得到simulation id)</li>
      <li>🔄 不断请求回测状态</li>
      <li>回测状态变为结束(response中<code class="language-plaintext highlighter-rouge">Retry-After=0, status=[COMPLETE,WARNING]</code>) -&gt; 获得结果(得到alpha id)</li>
    </ol>
  </li>
</ol>

<h3 id="问题">问题</h3>

<ul>
  <li>理论上可以不去监测每个请求的发送情况. <strong>simulation id在回测结束后不会改变不会销毁</strong>. 所以, 批量发送请求拿到simulation id后, 可以后续再查看simulation的运行结果.</li>
  <li>本身<code class="language-plaintext highlighter-rouge">sess.get</code> 请求的过程等待只能由异步解决, 但是在这个项目里, 好像也没必要?</li>
  <li>平台限制了回测请求的并发数, 但是获取数据好像并没有限制.</li>
  <li>我经常对<code class="language-plaintext highlighter-rouge">template.py</code>元编程, python在用<code class="language-plaintext highlighter-rouge">importlib</code> 加载模块时, 会自动加载同名的缓存. 所以要记得手动reload. 否则会发现修改无效 😮‍💨</li>
</ul>

<h2 id="数据测试">数据测试</h2>

<p>利用平台的统计平均正结果(longCount) 和平均负结果(shortCount) 的功能</p>

<h3 id="测试数据分布">测试数据分布</h3>

<ul>
  <li>平台支持统计 <code class="language-plaintext highlighter-rouge">{datafield} &lt; {a}</code> 的平均股票数(longCount)</li>
  <li>用<a href="https://en.wikipedia.org/wiki/Minifloat">Minifloat</a> 的想法, 先选择 <strong>指数</strong> 的切分点, 然后把中间部分用 <strong>有效数</strong> 等分</li>
</ul>

<p><img src="/personal_homepage/docs/attachment/Pasted%20image%2020250210190821.png" alt="Pasted image 20250210190821.png" width="400" /></p>

<table class="wikitable" style="text-align: center; width: 50px">
<tbody><tr>
<th width="12.5%">sign(符号位)
</th>
<th width="50%" colspan="4">exponent(指数)
</th>
<th width="37.5%" colspan="3">significand(有效数)
</th></tr>
<tr>
<td style="background: #d5ffff">0
</td>
<td style="background: #a4ffb4">0
</td>
<td style="background: #a4ffb4">1
</td>
<td style="background: #a4ffb4">1
</td>
<td style="background: #a4ffb4">0
</td>
<td style="background: #ffb2b4">1
</td>
<td style="background: #ffb2b4">1
</td>
<td style="background: #ffb2b4">0
</td></tr></tbody></table>

<ul>
  <li>拿BF8举例,   先选择 指数 的切分点, 然后把中间部分用 有效数 等分
    <ul>
      <li>exponent部分(4位, 2^{-6}-2^7)为, $0110b=6$  -&gt; $2^{6-7}=\frac{1}{2}$</li>
      <li>significand部分(3位, 0/8-7/8 )为, $110b=6$ -&gt; $1+\frac{6}{8}$</li>
      <li>最后事例的数字为 $(1+\frac{6}{8})*\frac{1}{2}$</li>
    </ul>
  </li>
  <li>第一轮选用base10的指数点做切分, 统计每个区间内的股票数</li>
  <li>第二轮选 5%-95% 的分位点区间, 再进行等分.</li>
</ul>

<h3 id="测试数据覆盖率">测试数据覆盖率</h3>

<ul>
  <li>用 <code class="language-plaintext highlighter-rouge">({datafield} != {a})? 1: -1</code> 的正负统计平均 zeros(shortCount), non-zeros(longCount), nan(剩下的) 值</li>
</ul>

<h3 id="测试数据更新频率">测试数据更新频率</h3>

<ul>
  <li>用 <code class="language-plaintext highlighter-rouge">ts_std_dev({data_fields},{d}) != 0 ? 1 : 0</code> 统计数据在周期d天内是否更新.</li>
  <li>d 选择一些常用的更新频率: 天, 星期, 月, 季度, 年等</li>
</ul>

<h2 id="代码">代码</h2>

<ul>
  <li><a href="https://github.com/roshameow/quantnight">https://github.com/roshameow/quantnight</a></li>
</ul>

<h2 id="参考资料">参考资料</h2>

<p>[1]  https://support.worldquantbrain.com/hc/en-us/community/posts/11807866133911–BRAIN-TIPS-6-ways-to-quickly-evaluate-a-new-dataset</p>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="code" /><category term="content" /><category term="python" /><category term="async" /><category term="worldquant" /><summary type="html"><![CDATA[仿真流程]]></summary></entry><entry><title type="html">协程的用法</title><link href="https://roshameow.github.io//personal_homepage/tool/asyncio/" rel="alternate" type="text/html" title="协程的用法" /><published>2025-01-16T00:00:00+00:00</published><updated>2025-02-10T20:16:00+00:00</updated><id>https://roshameow.github.io//personal_homepage/tool/asyncio</id><content type="html" xml:base="https://roshameow.github.io//personal_homepage/tool/asyncio/"><![CDATA[<p>协程就是单线程多任务, 在一个任务等待的时候干点别的其他的任务. 所以包含等待的函数都要用协程的版本: 在需要时交出event loop的控制权.</p>
<h2 id="python-协程的用法">python 协程的用法</h2>

<p>在python里把一个协程函数也叫coroutine</p>

<ul>
  <li>yield(生成器): 会把当前函数挂起, 交出event loop的控制权给调用方, 再次调用函数时从暂停处继续.
    <ul>
      <li>包含yield的函数会变成一个coroutine</li>
      <li><code class="language-plaintext highlighter-rouge">next()</code>会激活coroutine</li>
      <li>一个主要用法是用于创建超大的list, 不会直接创建好占用内存.</li>
      <li>缺点是无法直接得到list的size</li>
    </ul>
  </li>
  <li>yield from
    <ul>
      <li>可以自动循环可迭代对象</li>
    </ul>
  </li>
  <li>future</li>
  <li>asyncio
    <ul>
      <li>async 函数不会马上执行其中代码, 而是返回coroutine</li>
      <li>await 相当于yield from: 捕获StopIteration异常, 把StopIteration的value属性的值变为yield from表达式的值
        <ul>
          <li>后面可以是task/coroutine/future</li>
        </ul>
      </li>
      <li>task: 可以被执行的函数
        <ul>
          <li>create_task 可以生成task</li>
          <li>await 也会</li>
          <li>asyncio.run() 的时候会执行task</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>aiohttp</li>
  <li>特点:
    <ul>
      <li>需要每个子任务结束主动告知(运行结束, return)</li>
    </ul>
  </li>
  <li>可以用<code class="language-plaintext highlighter-rouge">inspect</code> 的<code class="language-plaintext highlighter-rouge">getgeneratorstate</code> 查看协程(coroutine)的状态</li>
</ul>

<h2 id="javascript的用法">javascript的用法</h2>

<ul>
  <li>callback</li>
  <li>promise</li>
</ul>]]></content><author><name>{&quot;name&quot;=&gt;nil, &quot;picture&quot;=&gt;&quot;/docs/images/logo.svg&quot;, &quot;email&quot;=&gt;&quot;w.liuatnk@gmail.com&quot;, &quot;twitter&quot;=&gt;nil}</name><email>w.liuatnk@gmail.com</email></author><category term="tool" /><category term="content" /><category term="python" /><category term="async" /><category term="异步" /><summary type="html"><![CDATA[协程就是单线程多任务, 在一个任务等待的时候干点别的其他的任务. 所以包含等待的函数都要用协程的版本: 在需要时交出event loop的控制权. python 协程的用法]]></summary></entry></feed>